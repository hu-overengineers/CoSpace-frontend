{"version":3,"sources":["resource/logo.png","api_config.js","service/headers.js","service/AuthService.js","component/PrimaryAppBar.js","layout/MainLayout.js","service/ClubService.js","service/MemberService.js","component/common/CoSpaceTreeViewMenu.js","component/common/ClubTree.js","component/AboutFeed.js","component/event/EventContainer.js","service/PostService.js","component/CreatePost.js","util/redirect.js","component/event/EventItem.js","layout/QuestionLayout.js","component/questionnaire/Question.js","component/questionnaire/Questionnaire.js","component/EnrollPanel.js","util/async.js","component/RequestSubclub.js","component/common/TitledSection.js","component/post/PostFeedItem.js","component/post/PostFeed.js","page/HomePage.js","service/AdminService.js","component/admin/MemberInfo.js","component/common/NoResultsFound.js","component/admin/ReportedPosts.js","component/admin/ViewMemberInfo.js","component/questionnaire/CreateQuestion.js","component/questionnaire/CreateQuestionnaire.js","component/admin/ManageClub.js","component/admin/CreateClub.js","component/admin/ModeratorRequests.js","router/AdminPanelSwitch.js","layout/AdminPanelLayout.js","page/AdminPage.js","service/PrivateMessagingService.js","component/profile/AboutMember.js","component/profile/InterestRates.js","page/ProfilePage.js","page/NotFoundPage.js","component/common/Copyright.js","page/SignUpPage.js","page/SignInPage.js","page/PasswordResetPage.js","component/pm/PrivateMessageUserItem.js","component/pm/PrivateMessageUserItemList.js","component/pm/PrivateMessageFeed.js","page/PrivateMessagePage.js","service/ModeratorService.js","component/mod/CreateEvent.js","component/mod/DismissList.js","component/mod/ManageEvent.js","component/mod/ReportedPosts.js","router/ModeratorPanelSwitch.js","layout/ModeratorPanelLayout.js","page/ModeratorPage.js","component/meta/ReviewCard.js","service/ReviewService.js","component/meta/SummaryCard.js","page/MetaPanelPage.js","service/SearchService.js","page/SearchResultsPage.js","page/SubClubRecommend.js","router/HomePageSwitch.js","router/MainRouter.js","App.js","index.js"],"names":["BASE_URL","process","REACT_APP_API_BASE_URL","AUTH","SUB_CLUB","SUB_CLUB_STATS","MODERATOR","EVENT","GET_POSTS","REVIEW","MEMBER","ADMIN","REPORTS","DELETE_REPORT","ENROLLED_SUBCLUBS","PRIVATE_MESSAGE","SEARCH","headersWithToken","params","token","AuthService","getJwtToken","headers","saveUsername","username","localStorage","setItem","hasJwtToken","getItem","getAuthRoles","login","pass","axios","post","password","register","userData","logout","removeItem","loginWithToken","saveJwtToken","getUsername","removeUsername","resetPassword","email","changePasswordWithToken","newPassword","isAdmin","saveAuthRoles","roles","hasLoggedIn","useStyles","makeStyles","theme","grow","flexGrow","title","marginLeft","spacing","search","position","borderRadius","shape","backgroundColor","fade","palette","text","primary","width","breakpoints","up","marginRight","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","searchInputRoot","color","searchInput","paddingLeft","transition","transitions","create","logo","maxWidth","appBar","PrimaryAppBar","classes","history","useHistory","useState","searchQuery","setSearchQuery","className","AppBar","variant","Toolbar","src","style","alt","onClick","push","Typography","fontWeight","InputBase","placeholder","root","input","onChange","event","target","value","onKeyUp","key","preventDefault","inputProps","IconButton","Message","toolbar","mixins","MainLayout","props","Box","children","getClubs","get","parseSubClubs","subClubs","a","clubs","tree","data","forEach","club","filter","subClub","parentName","name","ClubService","getSubClubs","getSubClubStatistics","subClubName","startTime","subDays","Date","endTime","start","toISOString","end","getEvents","getSubClubQuestions","subclubName","getRandomQuestionnaire","MemberService","answers","author","eventId","details","body","clubName","divider","marginTop","marginBottom","sectionTitle","sectionBody","sectionRoot","sectionClub","treeViewTitleContainer","flexDirection","treeViewTitleIconContainer","useTreeItemStyles","action","hover","content","secondary","paddingTop","paddingBottom","paddingRight","typography","fontWeightMedium","group","expanded","selected","label","iconContainer","renderTree","node","callback","TreeItem","onLabelClick","nodeId","treeItemText","Array","isArray","map","childNode","CoSpaceTreeViewMenu","titleIcon","menuItems","callbackOnTreeItemClick","expandIcon","collapseIcon","defaultExpanded","defaultSelected","emptyText","treeClasses","undefined","treeItemIcon","PublicOutlined","Paper","Grid","container","item","Divider","TreeView","defaultCollapseIcon","defaultExpandIcon","length","menuItem","index","ClubTree","nameToClubObject","mapNameToToClubObject","console","log","mapToMenuItem","inner","PeopleAltOutlined","feedNameContainer","avatarContainer","avatar","getContrastText","dateCreatedContainer","buttonContainer","button","AboutFeed","feedInfo","stats","Avatar","toUpperCase","isCustom","justify","Container","numberOfMembers","numberOfPostsInLastWeek","created","toLocaleString","navigator","language","year","month","day","moderatorUsername","Button","startIcon","SupervisorAccount","EventContainer","events","PostService","feed","page","size","sort","newPost","message","postId","id","CreatePost","onEditorStateChange","editorState","setState","onTitleChange","titleState","handleClose","resetForm","setOpen","share","state","draftToHtml","convertToRaw","getCurrentContent","subclub","then","result","newPostEvent","EditorState","createEmpty","border_props","borderColor","this","Dialog","open","onClose","aria-labelledby","fullWidth","DialogTitle","DialogContent","TextField","autoFocus","margin","type","border","editorStyle","DialogActions","Component","openInNewTab","url","newWindow","window","opener","listItem","listItemText","iconAttended","main","iconUnattended","iconButton","chips","flexWrap","EventItem","attendCallback","ListItem","ListItemAvatar","hasAttended","EventAvailable","Event","ListItemText","Fragment","c","List","component","formatRelative","date","toString","isOnline","Chip","icon","Public","location","includes","PinDrop","utilLink","Schedule","paper","textAlign","question","Answer","xs","sm","md","QuestionLayout","answer1","answer2","answer3","answer4","AnswerButton","answerText","locked","callBack","disableElevation","Question","callBackOnChange","React","setLocked","givenAnswerId","setGivenAnswerId","handleAnswerClick","newGivenAnswerId","temp_locked","useEffect","elevation","questionBox","Questionnaire","questions","callBackOnAnswer","q","groundTruth","givenAnswers","setGivenAnswers","handleQuestionAnswering","question_id","newGivenAnswer","givenAnswerIndex","findIndex","givenAnswer","tempList","quest","QuestionnaireEntrance","PostQuestionnaire","bg_color","result_text","response","setEnrolled","score","direction","EnrollPanel","clickedSubClub","setOpenDialog","onQuestionnaire","setOnQuestionnaire","setQuestions","submitted","setSubmitted","enrollResponse","setEnrollResponse","handleDialogClose","finally","delay","Promise","res","setTimeout","nameValue","setNameValue","detailValue","setDetailValue","nameEmpty","setNameEmpty","required","error","multiline","rowsMax","catch","err","disabled","titleContainer","titleIconContainer","TitledSection","media","expand","transform","duration","shortest","expandOpen","cursor","voteLabel","postCardContent","contentBox","contentTypography","PostFeedItem","voting","vote","setVote","openSnackbar","setSnackbarOpen","severity","setSnackbarSeverity","snackbarMessage","setSnackbarMessage","handleSnackbarClose","reason","postMenuAnchorElement","setPostMenuAnchorElement","Boolean","reportDialogOpen","setReportDialogOpen","reportMessage","setReportMessage","handleReportDialogClose","handleAuthorClick","Card","CardHeader","aria-label","charAt","CardActions","currentTarget","Menu","anchorEl","keepMounted","MenuItem","reload","subheader","formatDistance","parseISO","addSuffix","CardContent","e","status","gutterBottom","parse","DialogContentText","r","Snackbar","autoHideDuration","Alert","feedItem","PostFeed","posts","gridContainer","feedTitle","gridItem","maxHeight","overflow","gridLeftColumnBox","gridMiddleColumnBox","gridRightColumnBox","sectionBox","sortingFeedToggleGroup","list","pagination","customFeeds","HomePage","useParams","feedName","sorting","currentPage","enrolledSubClubs","userInfo","isOnSubClub","s","numberOfPostsInTimeFrame","slice","reverse","customFeed","splice","clubFilter","allEvents","attendedEvents","anAttendedEventOfMember","modRequestDialogOpen","setModRequestDialogOpen","modRequestResponse","setModRequestResponse","isEnrolled","getNewlyCreatedSubClubs","uncommon","time","enrolled","postDialogOpen","setPostDialogOpen","enrollDialogOpen","setEnrollDialogOpen","subClubRequestDialogOpen","setSubClubRequestDialogOpen","ToggleButtonGroup","exclusive","ToggleButton","Whatshot","FiberNew","TrendingUp","Pagination","newPage","count","Edit","aux","Add","postCreated","replace","AdminService","query","put","clubDetails","subClubId","reportId","subclubname","MemberInfo","info","flattened","flatten","Person","Object","keys","NoResultsFound","InfoOutlined","inline","gridReportInfoContainer","gridHorizontalSection","postFeedItemWrapper","ReportedPosts","postReports","setPostReports","selectedPost","setSelectedPost","selectedReport","setSelectedReport","selectedPostOwner","setSelectedPostOwner","report","handleReportClick","ListItemIcon","form","memberInfo","ViewMemberInfo","members","setMembers","selectedMember","setSelectedMember","FormControl","Autocomplete","onInput","v","options","getOptionLabel","option","renderInput","radioGroup","radioButton","QuestionTextField","choices","CreateQuestion","callBackOnSave","qid","questionObject","setQuestion","id2Field","Map","set","radioValue","setRadioValue","onTextFieldChange","updatingField","tempObj","FormLabel","RadioGroup","FormControlLabel","control","Radio","CreateQuestionnaire","onSubmitTrigger","callBackQuestions","oldQuestions","questionNum","setQuestinNum","saveQuestionObj","questionObj","isQuestionValid","templist","newlist","concat","i","formControl","minWidth","selectEmpty","listStyle","chip","tagText","ManageClub","isVisible","setIsVisible","useTheme","fullScreen","useMediaQuery","down","openQuestionnaireDialog","setQuestionnaireDialog","submitQuestionnaireTrigger","setSubmitQuestionnaireTrigger","handleClickCloseQuestionnaireDialog","setSubClubs","selectedClubRequestName","setSelectedClubRequestName","rating","selectedClub","setSelectedClub","InputLabel","Select","FormHelperText","InputLabelProps","shrink","selectedClubCopy","JSON","stringify","helperText","Assignment","Math","max","Update","DeleteForever","createObject","questionnaireDialog","minHeight","selectFromReqs","CreateClub","canCreate","setCanCreate","openClubDialog","setClubDialog","createClubName","setCreateClubName","createClubDetails","setCreateClubDetails","refreshClubsTrigger","setRefreshClubsTrigger","handleCloseCreateClub","requests","setRequests","setSelectedSubClubRequest","setSubclubName","createdClubs","setCreatedClubs","setClubName","clb","subclubDescription","setSubClubDescription","requestObj","req","ModeratorRequests","isRequestsVisible","setIsRequestsVisible","isMemberInfoVisible","setIsMemberInfoVisible","selectedSubClub","setSelectedSubClub","selectedModRequest","setSelectedModRequest","htmlFor","Casino","Moderator","AdminPanelSwitch","path","adminMenu","AdminPanelLayout","AdminPage","PrivateMessagingService","receiverUsername","usernameContainer","dateRegisteredContainer","AboutMember","hasCommonSubClub","isSelf","timeRegistered","Tooltip","MeetingRoom","InterestRates","interests","EmojiSymbols","interest","interestRate","ProfilePage","user","setUser","commonClubsAndSubClubs","setCommonClubsAndSubClubs","setPosts","setSubClub","setInterests","clubsToSubClubs","aSubClub","clubsAsList","k","NotFoundPage","Copyright","align","Link","href","getFullYear","submit","SignUpPage","setPassword","setUsername","setEmail","CssBaseline","noValidate","autoComplete","mt","SignInPage","Checkbox","auth","enrollmentCount","infoText","TypeEmailPage","isSend","setIsSend","InputProps","startAdornment","InputAdornment","TypeNewPasswordPage","probs","passwordResetToken","setNewPassword","confirmPassword","setConfirmPassword","passwordsIsMatch","setPasswordsIsMatch","PasswordResetPage","PrivateMessageUserItem","PrivateMessageUserItemList","selectedUser","users","messageArea","overflowY","PrivateMessageFeed","messages","scrollRef","useRef","current","scrollIntoView","behaviour","senderUsername","format","ref","table","chatSection","headBG","borderRight500","borderRight","dark","marginAll","PrivateMessagePage","userList","setUserList","filteredMessages","setFilteredMessages","setMessages","messageContent","setMessageContent","self","usersSet","Set","add","sortedUserList","user1","user2","common1","common2","apply","getTime","receivedMessages","sortedFilteredMessages","message1","message2","timestamp","Fab","unstable_batchedUpdates","ModeratorService","delete","explanation","formInput","switchInput","dateInput","submitButton","inputFields","conditionalLabel","condition","correct","wrong","initialFormValues","CreateEvent","eventCreated","setEventCreated","values","setValues","errors","setErrors","validate","fieldValues","errorsUpdate","requiredFields","handleInputValue","FormGroup","inputField","onBlur","rows","utils","DateFnsUtils","disableToolbar","inputVariant","KeyboardButtonProps","Switch","checked","isValid","every","x","formIsValid","dismissBtn","DismissList","dismissList","setDismissList","member","handleMemberClick","ManageEvent","setEvents","selectedEvent","setSelectedEvent","eventChanged","setEventChanged","find","filled","eventCopy","ModeratorPanelSwitch","modMenu","ModeratorPanelLayout","ModeratorPage","review","ReviewCard","MoreVertOutlined","ReviewService","authorName","ratingStars","dialogTextField","numReviewsText","SummaryCard","reviews","openDialog","setHover","subClubInfo","setSubClubInfo","subClubStats","inputRating","setInputRating","inputContent","setInputContent","totalRating","rateStructure","one","two","three","four","five","toPrecision","Rating","readOnly","rotated","valueField","argumentField","newValue","onChangeActive","newHover","ml","1","2","3","4","5","summaryContainer","MetaPanelPage","setReviews","breakpointCols","columnClassName","SearchService","SearchResultsPage","searchResults","setSearchResults","trim","PostSubmit","sc","SubClubRecommend","enrolledSubs","setEnrolledSubs","enrollments_list","split","HomePageSwitch","MainRouter","exact","App","prefersDarkMode","useMemo","createMuiTheme","overrides","MuiAppBar","colorPrimary","background","default","fontFamily","ThemeProvider","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.983944b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.08e987d0.png\";","/** Contains the api constants.  */\r\n\r\nexport const BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://hu-overengineers.github.io/CoSpace-frontend\";\r\nexport const AUTH = \"/auth\";\r\nexport const LOGIN = \"/auth/login\";\r\nexport const REGISTER = \"/auth/register\";\r\n\r\nexport const CLUB_LIST = \"/club/all\";\r\nexport const SUB_CLUB = \"/subclub\";\r\nexport const COMMON_SUB_CLUBS = \"/common-subclubs\";\r\nexport const SUB_CLUB_LIST = \"/subclub/all\";\r\nexport const SUB_CLUB_STATS = \"/subclub/statistics\";\r\nexport const SUB_CLUB_EVENTS = \"/subclub/events\";\r\nexport const ATTEND_SUB_CLUB_EVENT = \"/subclub/attend-event\";\r\nexport const SUB_CLUB_QUESTIONNAIRE = \"/subclub/questionnaire-sub\";\r\nexport const RANDOM_QUESTIONNAIRE = \"/subclub/questionnaire\";\r\nexport const ONE_SUB_CLUB_ENROLL = \"/subclub/enroll-subclub\";\r\nexport const BULK_ENROLL = \"/subclub/enroll\";\r\nexport const DISMISS_LIST = \"/dismiss-list\";\r\nexport const DISMISS = \"/dismiss\";\r\nexport const DELETE_SUB_CLUB = \"/delete-sub-club\";\r\nexport const MODERATOR = \"/moderator\";\r\nexport const EVENT = \"/event\";\r\nexport const DELETE_POST = \"/delete-post\";\r\nexport const DELETE_OWN_POST = \"/delete-own-by-id\";\r\nexport const BAN = \"/ban\"\r\nexport const POST = \"/post\";\r\n// TODO: Fix some inconsistencies in naming.\r\nexport const GET_POSTS = \"/post\";\r\nexport const CREATE_POST = \"/post/create\";\r\nexport const REPORT_POST = \"/post/report\";\r\nexport const UPVOTE_POST = \"/post/upvote\";\r\nexport const DOWNVOTE_POST = \"/post/downvote\";\r\nexport const GET_POSTS_BY_AUTHOR = \"/by-author\";\r\nexport const TRENDS = \"/trends\";\r\nexport const FEED = \"/feed\";\r\nexport const REVIEWS = \"/reviews\"\r\nexport const REVIEW = \"/review\"\r\nexport const MEMBER = \"/member\";\r\nexport const ADMIN = \"/admin\";\r\nexport const REPORTS = \"/reports\";\r\nexport const DELETE_REPORT = \"/delete-report\";\r\nexport const ENROLLED_SUBCLUBS = \"/enrolled-subclubs\";\r\nexport const ENROLLMENT = \"/enrollment\";\r\nexport const ATTENDED_EVENTS = \"/attended-events\";\r\nexport const PRIVATE_MESSAGE = \"/private-message\";\r\nexport const REQUEST_SUBCLUB= \"/request-subclub\";\r\nexport const SUBCLUB_REQUESTS = \"/admin/subclub-requests\";\r\nexport const CREATE_CLUB = \"/admin/create-club\";\r\nexport const CREATE_SUBCLUB = \"/admin/create-sub-club\";\r\nexport const SEARCH = \"/search\";\r\nexport const LOGIN_WITH_TOKEN = \"/auth/login_with_token\";\r\nexport const MOD_REQUEST = \"/mod-request\";\r\nexport const MOD_REQUESTS = \"/mod-requests\";\r\nexport const ASSIGN_MOD = \"/assign-moderator\";\r\n\r\n\r\nexport const SEARCH_MEMBER_BY_NAME = \"/admin/search-member\"\r\nexport const RESET_PASSWORD = \"/reset-password\";\r\nexport const CHANGE_PASSWORD_WITH_TOKEN = \"/change-password-token\";\r\n\r\n","/**\r\n * Credit: Umut Emre Bayramoğlu\r\n * https://github.com/CommunITU/communitu-frontend\r\n */\r\n\r\nimport {AuthService} from \"./AuthService\";\r\n\r\nexport const headersWithToken = (params) => {\r\n    const token = AuthService.getJwtToken();\r\n    return {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n\r\n        },\r\n        params: params\r\n    }\r\n}\r\n\r\nexport const fileUploadWithToken = () => {\r\n    const token = AuthService.getJwtToken();\r\n    return {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        }\r\n    }\r\n}\r\n\r\nexport const baseHeaders = () => {\r\n    return {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const baseHeadersNoCors = () => {\r\n    return {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Credit: Umut Emre Bayramoğlu\r\n * https://github.com/CommunITU/communitu-frontend\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n    AUTH,\r\n    BASE_URL,\r\n    CHANGE_PASSWORD_WITH_TOKEN,\r\n    LOGIN,\r\n    LOGIN_WITH_TOKEN,\r\n    REGISTER,\r\n    RESET_PASSWORD\r\n} from \"../api_config\";\r\nimport {headersWithToken} from \"./headers\";\r\n\r\nconst login = (username, pass) => {\r\n    saveUsername(username);\r\n    return axios.post(BASE_URL + LOGIN, {username: username, password: pass})\r\n}\r\n\r\nconst saveUsername = (username) => {\r\n    localStorage.setItem('username', username);\r\n}\r\n\r\nconst getUsername = () => {\r\n    return localStorage.getItem(\"username\")\r\n}\r\n\r\nconst removeUsername = () => {\r\n    localStorage.removeItem('username');\r\n}\r\n\r\nconst register = (userData) => {\r\n    return axios.post(BASE_URL + REGISTER, userData)\r\n}\r\n\r\nconst loginWithToken = () => {\r\n    return axios.post(BASE_URL + LOGIN_WITH_TOKEN, {}, headersWithToken())\r\n}\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem('login_token');\r\n    localStorage.removeItem(\"auth_roles\");\r\n};\r\n\r\nconst saveJwtToken = (token) => {\r\n    localStorage.setItem('login_token', token);\r\n}\r\n\r\nconst getJwtToken = () => {\r\n    return localStorage.getItem('login_token');\r\n}\r\n\r\nconst hasJwtToken = () => {\r\n    let jwt = localStorage.getItem('login_token');\r\n    return jwt != null;\r\n}\r\n\r\nconst saveAuthRoles = (roles) => {\r\n    localStorage.setItem(\"auth_roles\", roles);\r\n}\r\n\r\nconst getAuthRoles = () => {\r\n    return localStorage.getItem(\"auth_roles\");\r\n}\r\n\r\nconst isAdmin = () => {\r\n    return \"ADMIN\" in getAuthRoles();\r\n}\r\n\r\nconst resetPassword = (email) => {\r\n    return axios.post(BASE_URL + AUTH + RESET_PASSWORD, null,{params: {email: email}});\r\n}\r\n\r\nconst changePasswordWithToken = (newPassword, token) => {\r\n    return axios.post(BASE_URL +  AUTH + CHANGE_PASSWORD_WITH_TOKEN, null, {params: {token: token, newPassword: newPassword}});\r\n}\r\n\r\nconst hasLoggedIn = () => {\r\n    return hasJwtToken();\r\n};\r\n\r\n\r\nexport const AuthService = {\r\n    login, register, logout, loginWithToken, saveJwtToken, getJwtToken, hasJwtToken,\r\n    getUsername,\r\n    removeUsername,\r\n    resetPassword,changePasswordWithToken, \r\n    isAdmin, saveAuthRoles, getAuthRoles, hasLoggedIn\r\n};\r\n","import React, {useState} from 'react';\r\nimport {fade, makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {InputBase} from \"@material-ui/core\";\r\nimport logo from '../resource/logo.png';\r\nimport {Message} from \"@material-ui/icons\";\r\nimport {AuthService} from \"../service/AuthService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 0,\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    search: {\r\n        flexGrow: 1,\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.text.primary, 0.20),\r\n        },\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(50),\r\n            marginRight: theme.spacing(50),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    searchInputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    searchInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    logo: {\r\n        maxWidth: '50px',\r\n    },\r\n    appBar: {}\r\n}));\r\n\r\nexport default function PrimaryAppBar() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"fixed\" variant=\"outlined\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <img src={logo} style={{\"cursor\": \"pointer\"}} alt=\"CoSpace\" className={classes.logo}\r\n                         color={'#00e3aa'}\r\n                         onClick={() => history.push(\"/\")}/>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        style={{color: '#00e3aa', fontWeight: 'bold', \"cursor\": \"pointer\"}}\r\n                        className={classes.title}\r\n                        onClick={() => history.push(\"/feed/Popular\")}\r\n                    >\r\n                        CoSpace\r\n                    </Typography>\r\n\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon/>\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search anything…\"\r\n                            classes={{\r\n                                root: classes.searchInputRoot,\r\n                                input: classes.searchInput,\r\n                            }}\r\n                            onChange={(event => {\r\n                                setSearchQuery(event.target.value);\r\n                            })}\r\n                            onKeyUp={(event) => {\r\n                                if (event.key === \"Enter\") {\r\n                                    event.preventDefault();\r\n                                    history.push(`/search/${searchQuery}`)\r\n                                }\r\n                            }}\r\n                            inputProps={{'aria-label': 'search'}}\r\n                        />\r\n                    </div>\r\n\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            history.push(\"/pm\");\r\n                        }}\r\n                    >\r\n                        <Message/>\r\n                    </IconButton>\r\n\r\n                    <IconButton\r\n                        // TODO: Add logic to go SignInPage.\r\n                        onClick={() => {\r\n                            if (AuthService.hasLoggedIn()) {\r\n                                history.push(`/profile/${AuthService.getUsername()}`)\r\n                            } else {\r\n                                history.push(\"/sign-up\")\r\n                            }\r\n                        }}\r\n                    >\r\n                        <AccountCircle/>\r\n                    </IconButton>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PrimaryAppBar from \"../component/PrimaryAppBar\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // Load app bar information from the theme\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nexport default function MainLayout(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box>\r\n            <PrimaryAppBar/>\r\n\r\n            {/* side drawer */}\r\n            {/* <div>side drawer</div> */}\r\n\r\n            {/* main content */}\r\n            <Box>\r\n                {/* Shift content by appbar width */}\r\n                <div className={classes.toolbar}/>\r\n                {props.children}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import axios from 'axios';\r\nimport {\r\n    BASE_URL,\r\n    CLUB_LIST,\r\n    SUB_CLUB_EVENTS,\r\n    SUB_CLUB_LIST,\r\n    SUB_CLUB_QUESTIONNAIRE,\r\n    SUB_CLUB_STATS,\r\n    RANDOM_QUESTIONNAIRE,\r\n} from \"../api_config\";\r\nimport {headersWithToken} from \"./headers\";\r\nimport {subDays} from \"date-fns\";\r\n\r\nconst getClubs = () => {\r\n    return axios.get(BASE_URL + CLUB_LIST)\r\n}\r\n\r\nconst getSubClubs = () => {\r\n    return axios.get(BASE_URL + SUB_CLUB_LIST)\r\n}\r\n\r\nconst getSubClubStatistics = (subClubName, startTime = subDays(new Date(), 7), endTime = new Date()) => {\r\n    return axios.get(BASE_URL + SUB_CLUB_STATS, {\r\n        params: {\r\n            subClubName: subClubName,\r\n            start: startTime.toISOString(),\r\n            end: endTime.toISOString(),\r\n        }\r\n    });\r\n}\r\n\r\nconst getEvents = (subClubName) => {\r\n    return axios.get(BASE_URL + SUB_CLUB_EVENTS, {\r\n        params: {\r\n            subClubName: subClubName\r\n        }\r\n    });\r\n}\r\n\r\nconst getSubClubQuestions = (subclubName) => {\r\n    return axios.get(BASE_URL + SUB_CLUB_QUESTIONNAIRE, headersWithToken({subClubName:subclubName}));\r\n}\r\n\r\nconst getRandomQuestionnaire = () => {\r\n    return axios.get(BASE_URL + RANDOM_QUESTIONNAIRE, headersWithToken());\r\n}\r\n\r\nconst parseSubClubs = async (subClubs) => {\r\n\r\n    const clubs = await getClubs();\r\n\r\n    const tree = [];\r\n    clubs.data.forEach(club => {\r\n        club.children = subClubs.filter(subClub => subClub.parentName === club.name);\r\n        tree.push(club)\r\n    })\r\n\r\n    return tree;\r\n}\r\n\r\n\r\nexport const ClubService = {getClubs, getSubClubs, parseSubClubs, getSubClubStatistics, getEvents, getSubClubQuestions, getRandomQuestionnaire};\r\n","import axios from 'axios';\r\nimport {\r\n    ATTEND_SUB_CLUB_EVENT,\r\n    ATTENDED_EVENTS,\r\n    BASE_URL,\r\n    COMMON_SUB_CLUBS,\r\n    ENROLLED_SUBCLUBS,\r\n    GET_POSTS,\r\n    GET_POSTS_BY_AUTHOR,\r\n    MEMBER,\r\n    ONE_SUB_CLUB_ENROLL,\r\n    SUB_CLUB,\r\n    REQUEST_SUBCLUB,\r\n    MOD_REQUEST,\r\n    BULK_ENROLL,\r\n    ENROLLMENT\r\n} from \"../api_config.js\";\r\nimport {headersWithToken} from \"./headers\";\r\n\r\nconst getEnrolledSubClubsOfCurrentlySignedInUser = () => {\r\n    return axios.get(BASE_URL + MEMBER + ENROLLED_SUBCLUBS, headersWithToken());\r\n}\r\n\r\nconst getAttendedEventsOfCurrentlySignedInUser = () => {\r\n    return axios.get(BASE_URL + MEMBER + ATTENDED_EVENTS, headersWithToken());\r\n}\r\n\r\nconst getCommonSubClubs = (username) => {\r\n    return axios.get(BASE_URL + SUB_CLUB + COMMON_SUB_CLUBS, headersWithToken({username: username}))\r\n}\r\n\r\nconst enrollToSubClub = (answers) => {\r\n    return axios.post(BASE_URL + ONE_SUB_CLUB_ENROLL, answers, headersWithToken());\r\n}\r\n\r\nconst bulkEnrollment = (answers) => {\r\n    return axios.post(BASE_URL + BULK_ENROLL, answers, headersWithToken());\r\n}\r\n\r\nconst getPostsByAuthorAndSubClub = (author, subClubName) => {\r\n    return axios.get(BASE_URL + GET_POSTS + GET_POSTS_BY_AUTHOR, {params: {username: author, subClubName: subClubName}})\r\n}\r\n\r\nconst attendEvent = (eventId) => {\r\n    return axios.post(BASE_URL + ATTEND_SUB_CLUB_EVENT, null, headersWithToken({eventId: eventId}))\r\n}\r\n\r\nconst requestSubClub = (parentName, subclubName, details) => {\r\n    const body = {subClubName:subclubName, clubName:parentName}\r\n    return axios.post(BASE_URL + MEMBER + REQUEST_SUBCLUB, body, headersWithToken());\r\n}\r\n\r\nconst requestForModerating = (subclubName) => {\r\n    return axios.post(BASE_URL + SUB_CLUB + MOD_REQUEST, {}, headersWithToken({subClubName:subclubName}));\r\n}\r\n\r\nconst getUserByName = (username) => {\r\n    return axios.get(BASE_URL + MEMBER, {params: {username: username}} );\r\n}\r\n\r\nconst getEnrollmentsInfo = (username) => {\r\n    return axios.get(BASE_URL + MEMBER + ENROLLMENT, headersWithToken({username: username}) );\r\n}\r\n\r\n\r\nexport const MemberService = {\r\n    getEnrolledSubClubsOfCurrentlySignedInUser,\r\n    enrollToSubClub,\r\n    getPostsByAuthorAndSubClub,\r\n    getCommonSubClubs,\r\n    getAttendedEventsOfCurrentlySignedInUser,\r\n    attendEvent,\r\n    requestSubClub,\r\n    requestForModerating,\r\n    getUserByName,\r\n    bulkEnrollment,\r\n    getEnrollmentsInfo\r\n};","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Divider, Grid, Paper, Typography} from \"@material-ui/core\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport React from \"react\";\r\nimport {PublicOutlined} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionClub: {\r\n        height: 216,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n    root: {},\r\n    treeViewTitleContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    treeViewTitleIconContainer: {\r\n        marginTop: theme.spacing(0.5),\r\n        marginBottom: theme.spacing(0),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n}));\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.primary,\r\n        '&:hover > $content': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n        '&:focus > $content': {\r\n            backgroundColor: '#afffea',\r\n            color: 'var(--tree-view-color)',\r\n        },\r\n        '&$selected > $content': {\r\n            //backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n            backgroundColor: '#00e3aa',\r\n            color: 'var(--tree-view-color)',\r\n\r\n        },\r\n        '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    content: {\r\n        color: theme.palette.text.secondary,\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    group: {\r\n        marginLeft: 0,\r\n        '& $content': {\r\n            paddingLeft: theme.spacing(2),\r\n        },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n        fontWeight: 'inherit',\r\n        color: 'inherit',\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    iconContainer: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction renderTree(node, classes, callback) {\r\n    const onTreeItemClick = () => {\r\n        callback(node);\r\n    }\r\n    return (\r\n        <TreeItem className={classes.root} onClick={onTreeItemClick}\r\n                  onLabelClick={event => {\r\n                      event.preventDefault()\r\n                  }}\r\n                  key={node.text} nodeId={node.text} label={<Box className={classes.treeItemText}>{node.text}</Box>}\r\n                  classes={{\r\n                      root: classes.root,\r\n                      content: classes.content,\r\n                      expanded: classes.expanded,\r\n                      selected: classes.selected,\r\n                      group: classes.group,\r\n                      label: classes.label,\r\n                      iconContainer: classes.iconContainer\r\n                  }}>\r\n            {Array.isArray(node.children) ? node.children.map((childNode) => renderTree(childNode, classes, callback)) : null}\r\n        </TreeItem>\r\n    );\r\n}\r\n\r\nexport default function CoSpaceTreeViewMenu(\r\n    {\r\n        title,\r\n        titleIcon,\r\n        menuItems,\r\n        callbackOnTreeItemClick,\r\n        expandIcon,\r\n        collapseIcon,\r\n        defaultExpanded,\r\n        expanded,\r\n        selected,\r\n        defaultSelected,\r\n        emptyText = \"There's nothing to look here.\"\r\n    }) {\r\n    const classes = useStyles();\r\n    const treeClasses = useTreeItemStyles();\r\n\r\n    if (expandIcon === undefined) expandIcon = <ChevronRightIcon className={treeClasses.treeItemIcon}/>;\r\n    if (collapseIcon === undefined) collapseIcon = <Box><ExpandMoreIcon className={treeClasses.treeItemIcon}/></Box>;\r\n    if (titleIcon === undefined) titleIcon = <PublicOutlined/>;\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n                <Grid container>\r\n                    <Box key={1} item className={classes.treeViewTitleIconContainer}>\r\n                        {titleIcon}\r\n                    </Box>\r\n                    <Grid key={2} item className={classes.treeViewTitleContainer}>\r\n                        <Typography variant=\"h6\" className={classes.sectionTitle}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider}/>\r\n                <TreeView\r\n                    defaultCollapseIcon={collapseIcon}\r\n                    defaultExpanded={defaultExpanded}\r\n                    expanded={expanded}\r\n                    defaultSelected={defaultSelected}\r\n                    selected={selected}\r\n                    defaultExpandIcon={expandIcon}>\r\n                    {menuItems && menuItems.length !== 0 ? menuItems.map((menuItem, index) => (\r\n                        renderTree(menuItem, treeClasses, callbackOnTreeItemClick)\r\n                    )) : <Typography className={treeClasses.label}>{emptyText}</Typography>}\r\n\r\n                </TreeView>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CoSpaceTreeViewMenu from \"./CoSpaceTreeViewMenu\";\r\nimport {PeopleAltOutlined, PublicOutlined} from \"@material-ui/icons\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    treeItemIcon: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n}));\r\n\r\nexport default function ClubTree(\r\n    {\r\n        clubs,\r\n        selected,\r\n        callbackOnTreeItemClick,\r\n        title = \"Clubs & Sub-clubs\",\r\n        titleIcon = <PublicOutlined/>\r\n    }) {\r\n    const classes = useStyles();\r\n\r\n    const nameToClubObject = {}\r\n    const mapNameToToClubObject = (club) => {\r\n        nameToClubObject[club.name] = club;\r\n        if (Array.isArray(club.children)) {\r\n            club.children.forEach(mapNameToToClubObject)\r\n        }\r\n    }\r\n    clubs.forEach(mapNameToToClubObject)\r\n\r\n    console.log(nameToClubObject)\r\n\r\n    const mapToMenuItem = (club) => {\r\n        return {\r\n            text: club.name,\r\n            children: Array.isArray(club.children) ? club.children.map((inner) => mapToMenuItem(inner)) : null\r\n        }\r\n    }\r\n\r\n    const handleMenuItemClick = (menuItem) => {\r\n        console.log(`Menu Item:`);\r\n        console.log(menuItem)\r\n        console.log(`Club Obj:`);\r\n        console.log(nameToClubObject[menuItem.text])\r\n        callbackOnTreeItemClick(nameToClubObject[menuItem.text])\r\n    }\r\n\r\n    const menuItems = clubs.map((club) => mapToMenuItem(club))\r\n\r\n    return (\r\n        <CoSpaceTreeViewMenu\r\n            title={title}\r\n            titleIcon={titleIcon}\r\n            selected={selected}\r\n            expandIcon={<PeopleAltOutlined className={classes.treeItemIcon}/>}\r\n            collapseIcon={<PeopleAltOutlined className={classes.treeItemIcon}/>}\r\n            expanded={menuItems.map(menuItem => menuItem.text)}\r\n            menuItems={menuItems}\r\n            callbackOnTreeItemClick={handleMenuItemClick}/>\r\n    );\r\n}","import {Container, Divider, Grid, Paper, Typography} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SupervisorAccount} from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    feedNameContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    dateCreatedContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport default function AboutFeed({feedInfo, stats}) {\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n\r\n                <Grid container>\r\n                    <Grid key={1} item className={classes.avatarContainer}>\r\n                        <Avatar className={classes.avatar}> {feedInfo.name[0].toUpperCase()} </Avatar>\r\n                    </Grid>\r\n                    <Grid key={2} item className={classes.feedNameContainer}>\r\n                        <Typography variant=\"h5\">\r\n                            {feedInfo.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Divider className={classes.divider}/>\r\n\r\n                <Typography className={classes.sectionBody}>\r\n                    {feedInfo.details}\r\n                </Typography>\r\n\r\n                {(!feedInfo.isCustom) &&  // If it's not a custom feed like popular or random\r\n                <Box>\r\n                    {feedInfo.parentName &&  // If it's a sub-club\r\n                    <Box>\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        <Grid container justify=\"center\">\r\n                            <Grid key={1} item>\r\n                                <Container>\r\n                                    <Typography variant=\"h6\">\r\n                                        {stats ? stats.numberOfMembers : \"0\"}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        {\"members\"}\r\n                                    </Typography>\r\n                                </Container>\r\n                            </Grid>\r\n\r\n                            {<Grid key={2} item>\r\n                                <Container>\r\n                                    <Typography variant=\"h6\">\r\n                                        {stats ? stats.numberOfPostsInLastWeek : \"0\"}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        {\"posts last week\"}\r\n                                    </Typography>\r\n                                </Container>\r\n                            </Grid>}\r\n                        </Grid>\r\n                    </Box>}\r\n\r\n                    <Divider className={classes.divider}/>\r\n\r\n                    <Grid container className={classes.dateCreatedContainer}>\r\n                        <Grid key={1} item>\r\n                            <Container><CakeIcon/> </Container>\r\n                        </Grid>\r\n                        <Grid key={2} item>\r\n                            <Typography variant=\"body1\">\r\n                                {`Created, ${new Date(feedInfo.created).toLocaleString(navigator.language, {\r\n                                    year: 'numeric',\r\n                                    month: 'long',\r\n                                    day: 'numeric'\r\n                                })}`}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {feedInfo.moderatorUsername === AuthService.getUsername() &&\r\n                    <Box>\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        <Grid container className={classes.buttonContainer}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SupervisorAccount/>}\r\n                                onClick={(event) => {\r\n                                    history.push(\"/mod\")\r\n                                }}>\r\n                                MODERATOR PANEL\r\n                            </Button>\r\n                        </Grid>\r\n                    </Box>}\r\n                </Box>}\r\n\r\n\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import {Divider, Paper, Typography} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    }\r\n}));\r\n\r\n\r\nexport default function EventContainer({events}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n                <Typography variant=\"h6\" className={classes.sectionTitle}>\r\n                    Events\r\n                </Typography>\r\n                <Divider className={classes.divider}/>\r\n                <Typography className={classes.sectionBody}>\r\n                    {events}\r\n                </Typography>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import axios from 'axios';\r\nimport {BASE_URL, CREATE_POST, DOWNVOTE_POST, FEED, GET_POSTS, REPORT_POST, UPVOTE_POST, DELETE_OWN_POST, POST} from \"../api_config\";\r\nimport {headersWithToken} from \"./headers\";\r\nimport {subDays} from \"date-fns\";\r\n\r\nconst getPosts = (feed, page, size, sort) => {\r\n    return axios.get(BASE_URL + GET_POSTS + FEED, {\r\n        params: {\r\n            name: feed,\r\n            page: page,\r\n            size: size,\r\n            start: (() => {\r\n                switch (sort) {\r\n                    case \"today\":  return subDays(new Date(), 1).toISOString();\r\n                    case \"new\": return subDays(new Date(), 30).toISOString();\r\n                    case \"top\": return subDays(new Date(), 7).toISOString();\r\n                    default:\r\n                        break;\r\n                }\r\n            })(),\r\n            end: new Date().toISOString(),\r\n            sort: (() => {\r\n                switch (sort) {\r\n                    case \"today\":  return \"voting,desc\";\r\n                    case \"new\": return \"created,desc\";\r\n                    case \"top\": return \"voting,desc\";\r\n                    default:\r\n                        break;\r\n                }\r\n            })()\r\n        }\r\n    })\r\n}\r\n\r\nconst createPost = (newPost) => {\r\n    return axios.post(BASE_URL + CREATE_POST, newPost, headersWithToken());\r\n}\r\n\r\nconst reportPost = (author, message, postId) => {\r\n    return axios.post(BASE_URL + REPORT_POST, {author: author, content: message, postId: postId}, headersWithToken());\r\n}\r\n\r\nconst upvotePost = (postId) => {\r\n    return axios.post(BASE_URL + UPVOTE_POST, null, headersWithToken({postId: postId}))\r\n}\r\n\r\nconst downvotePost = (postId) => {\r\n    return axios.post(BASE_URL + DOWNVOTE_POST, null, headersWithToken({postId: postId}))\r\n}\r\n\r\nconst getPostById = (postId) => {\r\n    return axios.get(BASE_URL + GET_POSTS, {params: {postId: postId}})\r\n};\r\n\r\nconst deleteOwnPost = (postId) => {\r\n    return axios.post(BASE_URL + POST + DELETE_OWN_POST, null, headersWithToken({id: postId}));\r\n}\r\n\r\nexport const PostService = {getPosts, createPost, reportPost, upvotePost, downvotePost, getPostById, deleteOwnPost};\r\n","import React, {Component} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport {convertToRaw, EditorState} from 'draft-js';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport {PostService} from \"../service/PostService\";\r\n\r\nclass CreatePost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editorState: EditorState.createEmpty(),\r\n            title: \"\"\r\n        };\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({editorState: editorState});\r\n    };\r\n\r\n    onTitleChange = (titleState) => {\r\n        this.setState({title: titleState.target.value})\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.resetForm();\r\n        this.props.setOpen(false);\r\n    };\r\n\r\n    share = () => {\r\n        //const current = new Date();\r\n        const post = {\r\n            title: this.state.title,\r\n            content: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())),\r\n            // time: current.toLocaleString(),\r\n            parentName: this.props.subclub.name,\r\n        }\r\n        PostService.createPost(post).then(result => {\r\n            this.props.newPostEvent();\r\n            console.log(\"post created on dialog\");\r\n        })\r\n        this.handleClose()\r\n\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({title: \"\"});\r\n        this.setState({editorState: EditorState.createEmpty()});\r\n    }\r\n\r\n\r\n    border_props = {\r\n        padding: 1,\r\n        borderColor: 'grey.500',\r\n    };\r\n\r\n\r\n    render() {\r\n        const {editorState} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Dialog open={this.props.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\"\r\n                        fullWidth={true} maxWidth={\"md\"}>\r\n                    <DialogTitle id=\"form-dialog-title\">Create Post</DialogTitle>\r\n                    <DialogContent style={{height: '600px'}}>\r\n\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            value={this.state.title}\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            type=\"input\"\r\n                            onChange={this.onTitleChange}\r\n                            fullWidth\r\n                        />\r\n                        <Box border={1} {...this.border_props}>\r\n                            <Editor style={{height: 'auto'}}\r\n                                    editorState={editorState}\r\n                                    placeholder=\"Content\"\r\n                                    editorStyle={{height: '400px'}}\r\n                                    onEditorStateChange={this.onEditorStateChange}\r\n                            />\r\n                        </Box>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.share} color=\"primary\">\r\n                            Share\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatePost;\r\n","export const openInNewTab = (url) => {\r\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n    if (newWindow) newWindow.opener = null\r\n}","import Box from \"@material-ui/core/Box\";\r\nimport {Chip, IconButton, List, ListItem, ListItemAvatar, ListItemText, makeStyles} from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Event, EventAvailable, PinDrop, Public, Schedule} from \"@material-ui/icons\";\r\nimport {formatRelative} from \"date-fns\";\r\nimport {openInNewTab} from \"../../util/redirect\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(0),\r\n        padding: theme.spacing(0),\r\n    },\r\n    listItem: {\r\n        alignItems: \"flex-start\",\r\n        margin: theme.spacing(0),\r\n        padding: theme.spacing(0),\r\n    },\r\n    listItemText: {\r\n        margin: theme.spacing(0),\r\n        padding: theme.spacing(0),\r\n    },\r\n    iconAttended: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    iconUnattended: {\r\n        color: theme.palette.text,\r\n    },\r\n    iconButton: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    chips: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    }\r\n}));\r\n\r\nexport default function EventItem(\r\n    {\r\n        event,\r\n        attendCallback,\r\n    }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <ListItem key={event.id} className={classes.listItem}>\r\n                <ListItemAvatar>\r\n                    <IconButton variant={\"outlined\"} className={classes.iconButton}\r\n                                onClick={() => attendCallback(event.id)}>\r\n                        {event.hasAttended ? <EventAvailable className={classes.iconAttended}/> :\r\n                            <Event className={classes.iconUnattended}/>}\r\n                    </IconButton>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    className={classes.listItemText}\r\n                    primary={event.title}\r\n                    secondary={\r\n                        <React.Fragment c>\r\n                            <List>\r\n                                <Typography\r\n                                    key={0}\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    color=\"textPrimary\">\r\n                                    {`${formatRelative(new Date(event.date), new Date()).toString()}`}\r\n                                </Typography>\r\n                                <Box key={1}>{event.details}</Box>\r\n                                <Box key={2} className={classes.chips}>\r\n                                    {event.isOnline &&\r\n                                    <Chip variant={\"outlined\"} size=\"small\" color=\"primary\" label={\"Online\"}\r\n                                          icon={<Public/>}/>}\r\n                                    <Chip variant={\"outlined\"} size=\"small\" color=\"primary\" label={event.location}\r\n                                          onClick={event.location.includes(\"http\") ? (() => openInNewTab(event.location)) : null}\r\n                                          icon={<PinDrop/>}/>\r\n                                    <Chip variant={\"outlined\"} size=\"small\" color=\"primary\" label={event.utilLink}\r\n                                          onClick={event.utilLink.includes(\"http\") ? (() => openInNewTab(event.utilLink)) : null}\r\n                                          icon={<Schedule/>}/>\r\n                                </Box>\r\n                            </List>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n        </Box>\r\n    );\r\n}","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary\r\n    },\r\n    question: {\r\n        marginBottom:theme.spacing(1)\r\n    }\r\n  }));\r\n\r\n  function Answer({children }) {\r\n    return (\r\n      <Grid item xs={12} sm={6} md={6}>\r\n        {children}\r\n      </Grid>\r\n    );\r\n  }\r\n\r\nexport default function QuestionLayout(props) {\r\n    const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Grid container spacing={1}>\r\n            <Grid item sm={12} className={classes.question}>\r\n                {props.question}\r\n            </Grid>\r\n            <Answer children={props.answer1} />\r\n            <Answer children={props.answer2} />\r\n            <Answer children={props.answer3} />\r\n            <Answer children={props.answer4} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }","import React, {useEffect} from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport QuestionLayout from \"../../layout/QuestionLayout\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.primary\r\n    },\r\n    question: {\r\n        marginBottom:theme.spacing(1)\r\n    }\r\n  }));\r\n\r\n\r\nfunction AnswerButton({id, answerText, locked, callBack}){\r\n    return (\r\n        <Button size=\"medium\"\r\n        variant={(locked) ? \"contained\" : \"outlined\"}\r\n        color=\"primary\"\r\n        fullWidth={true}\r\n        // disabled={disable && !locked}\r\n        onClick={() => {callBack(id)}}\r\n        disableElevation>{answerText}</Button>\r\n    )\r\n}\r\n\r\nexport default function Question({question, callBackOnChange}) {\r\n    const classes = useStyles();\r\n    const [locked, setLocked] = React.useState([false, false, false, false]);\r\n    const [givenAnswerId, setGivenAnswerId] = React.useState();\r\n\r\n    useEffect(() => {\r\n        if (givenAnswerId === undefined) {\r\n            return;\r\n        }\r\n        callBackOnChange(question.id, question[\"answer\"+(givenAnswerId+1).toString()]);\r\n    }, [givenAnswerId])\r\n\r\n    function handleAnswerClick(newGivenAnswerId) {\r\n        let temp_locked = [...locked];\r\n        temp_locked[newGivenAnswerId] = true;\r\n        // if any previous answer\r\n        if(givenAnswerId !== newGivenAnswerId){\r\n            temp_locked[givenAnswerId] = false;\r\n        }\r\n        setLocked(temp_locked);\r\n        setGivenAnswerId(newGivenAnswerId);\r\n    }\r\n\r\n    return (\r\n        <QuestionLayout\r\n            question={<Paper elevation={3} variant=\"outlined\" className={classes.paper}> {question.content} </Paper>}\r\n            answer1={<AnswerButton id={0} answerText={question.answer1} callBack={handleAnswerClick} locked={locked[0]}/>}\r\n            answer2={<AnswerButton id={1} answerText={question.answer2} callBack={handleAnswerClick} locked={locked[1]}/>}\r\n            answer3={<AnswerButton id={2} answerText={question.answer3} callBack={handleAnswerClick} locked={locked[2]}/>}\r\n            answer4={<AnswerButton id={3} answerText={question.answer4} callBack={handleAnswerClick} locked={locked[3]}/>}\r\n        />\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Question from \"./Question\";\r\nimport {Box, Grid} from \"@material-ui/core\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    questionBox: {\r\n      margin: theme.spacing(5),\r\n      marginTop: theme.spacing(0)\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(5)\r\n    }\r\n  }));\r\n\r\n\r\nexport default function Questionnaire({questions, callBackOnAnswer}) {\r\n    const classes = useStyles();\r\n    const [givenAnswers, setGivenAnswers] = useState(questions.map((q) => {return {id:q.id, groundTruth:\"\", parentName:q.parentName}}));\r\n\r\n    useEffect(() => {\r\n      // since the questionnaire is open once, pass the empty answers at the begenning\r\n      callBackOnAnswer(givenAnswers);\r\n    }, [])\r\n    \r\n\r\n    const handleQuestionAnswering = (question_id, newGivenAnswer) => {\r\n      let givenAnswerIndex = givenAnswers.findIndex(a => a.id === question_id)\r\n      let givenAnswer = givenAnswers[givenAnswerIndex]\r\n      givenAnswer.groundTruth = newGivenAnswer;\r\n      const tempList = [...givenAnswers];\r\n      tempList[givenAnswerIndex] = givenAnswer;\r\n      setGivenAnswers(tempList);\r\n      callBackOnAnswer(givenAnswers)\r\n    }\r\n\r\n    return (\r\n        <Grid style={{ }}>\r\n          {questions.map((quest, index) => {\r\n              return (<Box className={classes.questionBox} key={\"q\"+index.toString()}>\r\n                  <h2 style={{padding:\"10px\"}}>Question {index+1}</h2>\r\n                  <Question question={quest} callBackOnChange={handleQuestionAnswering}/>\r\n                  {index+1 !== questions.length && (\r\n                      <Divider className={classes.divider}/>\r\n                  )}\r\n              </Box>)\r\n          }\r\n          )}\r\n\r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Grid, Paper} from \"@material-ui/core\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Questionnaire from './questionnaire/Questionnaire';\r\nimport {ClubService} from '../service/ClubService';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {MemberService} from \"../service/MemberService\";\r\n\r\n\r\nfunction QuestionnaireEntrance() {\r\n    return(\r\n        <Box padding=\"50px\">\r\n            <p>For enrolling a subclub, you have to take the subclub questionnaire.</p>\r\n            <p>If your score is higher than %50, then you can enroll.</p>\r\n            <p>After reading the following rules, click to the next button for taking the questionnaire</p>\r\n\r\n            <h3 style={{ paddingTop:\"50px\", paddingBottom:\"20px\"}}>Enterence Rules</h3>\r\n\r\n            <ul>\r\n                <li>Do not use internet or any other resources.</li>\r\n                <li>Give answer for all the questions, empty answers will be considered as wrong.</li>\r\n                <li>After submittion there will be not editing for answers.</li>\r\n            </ul> \r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction PostQuestionnaire({response, setEnrolled}) {\r\n    let bg_color;\r\n    let result_text;\r\n    response = response[0]\r\n    if (response[\"Interest Rate\"] === undefined) {\r\n        bg_color = \"#ff8a93\"\r\n        result_text = \"Sorry, you failed before so you cannot enroll again!\"\r\n    }\r\n    else{\r\n        let score = response[\"Interest Rate\"]\r\n        const enrolled = score >= 50;\r\n        if (enrolled) {\r\n            bg_color = \"#00e3aa\"\r\n            result_text = \"Congrats! You are successfully enrolled with score: \"+score\r\n        }\r\n        else{\r\n            bg_color = \"#ff8a93\"\r\n            result_text = \"Sorry, you failed with score: \"+score    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{height:\"50vh\"}}>\r\n            <Paper elevation={3} variant=\"outlined\" style={{width:\"75%\", textAlign:\"center\", padding:\"50px\", backgroundColor:bg_color}} >\r\n                {result_text}\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default function EnrollPanel({clickedSubClub, open, setOpenDialog, setEnrolled}) {\r\n    const [onQuestionnaire, setOnQuestionnaire] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [givenAnswers, setGivenAnswers] = useState([]);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [enrollResponse, setEnrollResponse] = useState();\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        ClubService.getSubClubQuestions(clickedSubClub.name).then((response) => {\r\n            setQuestions(response.data);\r\n        })\r\n    },[])\r\n\r\n    const handleDialogClose = (event) => {\r\n        setOnQuestionnaire(false);\r\n        setOpenDialog(false);\r\n\r\n    };\r\n\r\n    const handleNext = (event) => {\r\n        if (!onQuestionnaire) {\r\n            setOnQuestionnaire(true);\r\n        }\r\n        else{\r\n            console.log(\"given answers on submit\", givenAnswers);\r\n            MemberService.enrollToSubClub(givenAnswers).then((response) => {\r\n                console.log(\"Response: \" + response.data);\r\n                if (response.data[0].Message === \"Success\") {\r\n                    setEnrolled(true)\r\n                }\r\n                else{\r\n                    setEnrolled(false);\r\n                }\r\n                setEnrollResponse(response.data)\r\n            }).finally(() => {\r\n                setSubmitted(true);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n            <Dialog open={open} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\"\r\n                fullWidth={true} maxWidth={\"md\"}>\r\n\r\n                <DialogTitle id=\"form-dialog-title\">Enrolling to {clickedSubClub.name}</DialogTitle>\r\n                <DialogContent style={{height: '600px'}}>\r\n                        {(!onQuestionnaire) && <QuestionnaireEntrance/>}\r\n                        {(onQuestionnaire) && \r\n                            <Box margin=\"10px\">\r\n                                {(!submitted) && <Questionnaire questions={questions} callBackOnAnswer={setGivenAnswers}/>}\r\n                                {(submitted) && <PostQuestionnaire response={enrollResponse} setEnrolled={setEnrolled}/>}\r\n\r\n                            </Box>\r\n                        }\r\n                        \r\n                </DialogContent>\r\n                <DialogActions>\r\n                            <Button \r\n                                onClick={handleDialogClose}\r\n                                color=\"primary\">\r\n                                Exit\r\n                            </Button>\r\n                            {(!submitted && (\r\n                                <Button\r\n                                    onClick={handleNext}\r\n                                    color=\"primary\">\r\n                                    Next\r\n                                </Button>\r\n                                ))}\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n    )\r\n}","export const delay = (delay: number) => {\r\n    return new Promise(res => setTimeout(res, delay));\r\n}","import React, {useState} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MemberService } from '../service/MemberService';\r\nimport {delay} from \"../util/async\";\r\n\r\n\r\nexport default function EnrollPanel({open, setOpenDialog, club}) {\r\n\r\n    const [nameValue, setNameValue] = useState(\"\");\r\n    const [detailValue, setDetailValue] = useState(\"\");\r\n    const [nameEmpty, setNameEmpty] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    \r\n    const handleDialogClose = (event) => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const onNameChange = (event) => {\r\n        setNameValue(event.target.value)\r\n        setNameEmpty(false);\r\n    }\r\n\r\n    const onDetailsChange = (event) => {\r\n        setDetailValue(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        if (nameValue === \"\" || nameValue === undefined) { \r\n            setNameEmpty(true);\r\n            return\r\n        }        \r\n        MemberService.requestSubClub(club.name, nameValue, detailValue).then((response) => {\r\n            console.log(response.data);\r\n            setSubmitted(true);\r\n            delay(1000).then(() => {\r\n                setOpenDialog(false);\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n            <Dialog open={open} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\"\r\n                fullWidth={true} maxWidth={\"md\"}>\r\n\r\n                <DialogTitle id=\"form-dialog-title\">Request SubClub for {club.name}</DialogTitle>\r\n                <DialogContent >\r\n\r\n                    <TextField\r\n                            autoFocus\r\n                            required\r\n                            error={nameEmpty}\r\n                            label=\"Sub-club name\"\r\n                            variant=\"outlined\"\r\n                            type=\"input\"\r\n                            onChange={onNameChange}\r\n                            fullWidth\r\n                            />\r\n                    <TextField \r\n                        style={{marginTop:\"5vh\"}}\r\n                        id=\"outlined-multiline\"\r\n                        label=\"Details\"\r\n                        multiline\r\n                        rowsMax={4}\r\n                        onChange={onDetailsChange}\r\n\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        />\r\n                        \r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                            <Button \r\n                                onClick={handleDialogClose}\r\n                                color=\"primary\">\r\n                                Exit\r\n                            </Button>\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                disabled={submitted}\r\n                                color=\"primary\">\r\n                                Request\r\n                            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n    )\r\n}","import Box from \"@material-ui/core/Box\";\r\nimport {Divider, Grid, makeStyles, Paper, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    titleContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    titleIconContainer: {\r\n        marginTop: theme.spacing(0.5),\r\n        marginBottom: theme.spacing(0),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n}));\r\n\r\n\r\nexport default function TitledSection({titleIcon, title, children}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n                <Grid container>\r\n                    <Box key={1} item className={classes.titleIconContainer}>\r\n                        {titleIcon}\r\n                    </Box>\r\n                    <Grid key={2} item className={classes.titleContainer}>\r\n                        <Typography variant=\"h6\" className={classes.sectionTitle}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider}/>\r\n                {children}\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport parse from \"html-react-parser\";\r\nimport {delay} from \"../../util/async\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Menu,\r\n    MenuItem,\r\n    Snackbar,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PostService} from \"../../service/PostService\";\r\nimport {AuthService} from \"../../service/AuthService\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {formatDistance, parseISO} from \"date-fns\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    media: {\r\n       // width: null,\r\n       // height: 300,\r\n       // \"object-fit\": \"contain\",\r\n       // resize: \"inline\",\r\n       // resizeMode: \"contain\",\r\n       // overflow: \"hidden\",\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        cursor: \"pointer\",\r\n    },\r\n    voteLabel: {\r\n        flexGrow: 1,\r\n    },\r\n    postCardContent: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    contentBox: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    contentTypography: {\r\n        maxWidth: theme.spacing(30),\r\n    },\r\n}));\r\n\r\n\r\nexport function PostFeedItem({props}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    // Up-voting & down-voting\r\n    const [vote, setVote] = useState(props.voting);\r\n\r\n    const handleUpVote = () => {\r\n        PostService.upvotePost(props.id).then(response => {\r\n            console.log(response);\r\n            if (response.data === \"\") {\r\n                setSnackbarSeverity(\"error\");\r\n                setSnackbarMessage(\"You are not authorized to vote on this post!\");\r\n                setSnackbarOpen(true);\r\n            } else {\r\n                setVote(response.data.voting);\r\n            }\r\n        }).catch(e => {\r\n            console.error(e);\r\n            setSnackbarSeverity(\"error\");\r\n            if (e.response.status === 403) {\r\n                setSnackbarMessage(\"You are not authorized to vote on this post!\");\r\n            } else {\r\n                setSnackbarMessage(\"Something went wrong!\");\r\n            }\r\n            setSnackbarOpen(true);\r\n        });\r\n    }\r\n\r\n    const handleDownVote = () => {\r\n        PostService.downvotePost(props.id).then(response => {\r\n            if (response.data === \"\") {\r\n                setSnackbarSeverity(\"error\");\r\n                setSnackbarMessage(\"You are not authorized to vote on this post!\");\r\n                setSnackbarOpen(true);\r\n            } else {\r\n                setVote(response.data.voting);\r\n            }\r\n        }).catch(e => {\r\n            console.error(e);\r\n            setSnackbarSeverity(\"error\");\r\n            if (e.response.status === 403) {\r\n                setSnackbarMessage(\"You are not authorized to vote on this post!\");\r\n            } else {\r\n                setSnackbarMessage(\"Something went wrong!\");\r\n            }\r\n            setSnackbarOpen(true);\r\n        });\r\n    }\r\n\r\n    // Snackbar\r\n    const [openSnackbar, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    // Post menu\r\n    const [postMenuAnchorElement, setPostMenuAnchorElement] = React.useState(null);\r\n    const open = Boolean(postMenuAnchorElement);\r\n\r\n    const handleMenuButtonClick = (event) => {\r\n        setPostMenuAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    const handlePostMenuClose = () => {\r\n        setPostMenuAnchorElement(null);\r\n    };\r\n\r\n    // Reporting\r\n    const [reportDialogOpen, setReportDialogOpen] = useState(false);\r\n    const [reportMessage, setReportMessage] = useState(\"\");\r\n\r\n    const handleReportDialogOpen = () => {\r\n        setReportDialogOpen(true);\r\n    };\r\n\r\n    const handleReportDialogClose = () => {\r\n        setReportDialogOpen(false);\r\n        setPostMenuAnchorElement(null);\r\n    };\r\n\r\n    const handleSendReport = () => {\r\n        PostService.reportPost(AuthService.getUsername(), reportMessage, props.id).then(r => {\r\n            console.log(r);\r\n            handleReportDialogClose();\r\n            setSnackbarSeverity(\"success\");\r\n            setSnackbarMessage(\"Thanks for trying to make CoSpace a better place!\");\r\n            setSnackbarOpen(true);\r\n        }).catch(e => {\r\n            console.error(e);\r\n            setSnackbarSeverity(\"error\");\r\n            setSnackbarMessage(\"Something went wrong while reporting the post! Try again later.\");\r\n            setSnackbarOpen(true);\r\n        });\r\n    }\r\n\r\n    const handleAuthorClick = () => history.push(`/profile/${props.author}`);\r\n\r\n\r\n    \r\n    const handleDeletePost = () => {\r\n\r\n       PostService.deleteOwnPost(props.id).then(response => {\r\n            console.log(response.data);\r\n            window.location.reload()\r\n          \r\n       });\r\n    };\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar onClick={handleAuthorClick} aria-label=\"recipe\" className={classes.avatar}>\r\n                            {props.author.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <CardActions>\r\n                            <IconButton aria-label=\"share\">\r\n                                <ShareIcon/>\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"settings\" onClick={handleMenuButtonClick}>\r\n                                <MoreVertIcon/>\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"post-menu\"\r\n                                anchorEl={postMenuAnchorElement}\r\n                                keepMounted\r\n                                open={open}\r\n                                onClose={handlePostMenuClose}>\r\n                                <MenuItem key=\"report\" onClick={handleReportDialogOpen}>\r\n                                    Report\r\n                                </MenuItem>\r\n                                \r\n                                {AuthService.getUsername() === props.author ? \r\n                                <MenuItem key=\"delete\" onClick={handleDeletePost}>\r\n                                    Delete\r\n                                </MenuItem>\r\n                                : null}\r\n                                \r\n                            </Menu>\r\n                        </CardActions>\r\n                    }\r\n                    title={<Box style={{\"cursor\": \"pointer\"}} onClick={handleAuthorClick}>{props.author}</Box>}\r\n                    subheader={`${formatDistance(parseISO(props.created), new Date(), {addSuffix: true})} on ${props.parentName}`}/>\r\n                <CardContent className={classes.postCardContent}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={1} style={{textAlign: \"center\"}}>\r\n                            <IconButton aria-label=\"up-vote\" onClick={handleUpVote}>\r\n                                <KeyboardArrowUpIcon/>\r\n                            </IconButton>\r\n\r\n                            <Box display=\"flex\" flexDirection=\"center\">\r\n                                <Typography className={classes.voteLabel}\r\n                                            variant=\"body1\"\r\n                                            color=\"textSecondary\">{vote}</Typography>\r\n                            </Box>\r\n\r\n                            <IconButton aria-label=\"down-vote\" onClick={handleDownVote}>\r\n                                <KeyboardArrowDownIcon/>\r\n                            </IconButton>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={11}>\r\n                            <Box className={classes.contentBox}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {props.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                    <Box className={classes.media}>\r\n                                        {parse(props.content)}\r\n                                    </Box>\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog open={reportDialogOpen} onClose={handleReportDialogClose} aria-labelledby=\"report-dialog-title\">\r\n                <DialogTitle id=\"report-dialog-title\">Report</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Why should we remove it? Please write down your rationale.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Rationale\"\r\n                        type=\"multiline\"\r\n                        fullWidth\r\n                        onChange={(event) => {\r\n                            setReportMessage(event.target.value)\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleReportDialogClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSendReport} color=\"primary\">\r\n                        Report\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar open={openSnackbar} autoHideDuration={5000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {PostFeedItem} from \"./PostFeedItem\";\r\nimport {List, makeStyles, Typography} from '@material-ui/core';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {PostService} from \"../../service/PostService\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    feedItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function PostFeed({posts}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    \r\n    return (\r\n        <div>\r\n            <List className={classes.root}>\r\n                {posts ? (posts.length > 0 ? posts.map((post, index) => (\r\n                    <Box key={post.id} className={classes.feedItem}>\r\n                        {<PostFeedItem props={post}/>}\r\n                    </Box>\r\n                )) : <Container>\r\n                    <Typography variant={\"h5\"}>\r\n                        It's quiet around here...\r\n                    </Typography>\r\n                </Container>) : history.push(\"/notfound\")}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n    Avatar,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText\r\n} from \"@material-ui/core\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {ClubService} from \"../service/ClubService\";\r\nimport {subDays} from \"date-fns\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport {MemberService} from \"../service/MemberService\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ClubTree from \"../component/common/ClubTree\";\r\nimport {Pagination, ToggleButton, ToggleButtonGroup} from \"@material-ui/lab\";\r\nimport {Add, Edit, FiberNew, TrendingUp, Whatshot} from \"@material-ui/icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AboutFeed from \"../component/AboutFeed\";\r\nimport EventContainer from \"../component/event/EventContainer\";\r\nimport CreatePost from \"../component/CreatePost\";\r\nimport EventItem from \"../component/event/EventItem\";\r\nimport EnrollPanel from \"../component/EnrollPanel\";\r\nimport RequestSubclub from \"../component/RequestSubclub.js\"\r\nimport RateReviewOutlinedIcon from '@material-ui/icons/RateReviewOutlined';\r\nimport TitledSection from \"../component/common/TitledSection\";\r\nimport PostFeed from \"../component/post/PostFeed\";\r\nimport {PostService} from \"../service/PostService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridContainer: {},\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    feedItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    feedTitle: {\r\n        flexGrow: 1\r\n    },\r\n    gridItem: {\r\n        maxHeight: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    gridLeftColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(2.5),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n    gridMiddleColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    gridRightColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(0),\r\n        marginRight: theme.spacing(2.5),\r\n    },\r\n    sectionBox: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    sortingFeedToggleGroup: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n    pagination: {\r\n        display: \"flex\",\r\n        marginRight: theme.spacing(2),\r\n    }\r\n}));\r\n\r\n\r\nconst customFeeds = [\r\n    {isCustom: true, name: \"Popular\", details: \"Popular posts in all clubs and sub-clubs right now.\", children: []},\r\n];\r\n\r\n/**\r\n * TODO: Refactor.\r\n * @param children\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction HomePage() {\r\n    const classes = useStyles();\r\n    const {feedName = \"Popular\", sort = 'today', page = 1} = useParams();\r\n    const history = useHistory();\r\n\r\n    console.log(\"URL params:\", feedName, sort, page);\r\n\r\n    const [state, setState] = useState({\r\n        feedInfo: {name: feedName},\r\n        sorting: sort,\r\n        currentPage: page,\r\n        clubs: customFeeds,\r\n        subClubs: [],\r\n        enrolledSubClubs: [],\r\n        events: [],\r\n        userInfo: {},\r\n        posts: []\r\n    });\r\n\r\n    const handleSorting = (event, sorting) => {\r\n        setState(s => {\r\n            return {...s, sorting: sorting};\r\n        });\r\n    };\r\n\r\n    const isOnSubClub = (feedInfo) => {\r\n        return !(feedInfo.isCustom) && feedInfo.parentName;\r\n    }\r\n\r\n    // Fetch user info\r\n    useEffect(() => {\r\n        if (AuthService.hasLoggedIn()) {\r\n            MemberService.getUserByName(AuthService.getUsername()).then(r => {\r\n                console.log(\"Member info:\", r.data);\r\n                const userInfo = r.data;\r\n                setState(s => {\r\n                    return {...s, userInfo: userInfo};\r\n                });\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    // Fetch stats\r\n    useEffect(() => {\r\n        if (isOnSubClub(state.feedInfo)) {\r\n            ClubService.getSubClubStatistics(state.feedInfo.name, subDays(new Date(), 7), new Date()).then(response => {\r\n                console.log(`Fetched stats of ${state.feedInfo.name}`, response.data);\r\n                const stats = response.data;\r\n                setState(s => {\r\n                    return {\r\n                        ...s, stats: {\r\n                            numberOfMembers: stats.numberOfMembers,\r\n                            numberOfPostsInLastWeek: stats.numberOfPostsInTimeFrame\r\n                        }\r\n                    };\r\n                });\r\n            }).catch(response => {\r\n                console.error(\"Error while fetching sub-club statistics:\", response);\r\n            });\r\n        }\r\n    }, [state.feedInfo]);\r\n\r\n    // Fetch club and sub-clubs\r\n    useEffect(() => {\r\n        ClubService.getSubClubs().then(response => {\r\n            console.log(\"Parsing sub-clubs\");\r\n            console.log(response.data);\r\n            const subClubs = response.data;\r\n            ClubService.parseSubClubs(subClubs).then(tree => {\r\n                console.log(\"Parsed club tree:\", tree);\r\n\r\n                customFeeds.slice().reverse().forEach(customFeed => {\r\n                    tree.splice(0, 0, customFeed);\r\n                });\r\n\r\n                setState(s => {\r\n                    let feedInfo;\r\n                    const clubFilter = tree.filter(club => club.name === s.feedInfo.name)\r\n                    if (clubFilter.length === 0) {\r\n                        const subClubFilter = subClubs.filter(subClub => subClub.name === s.feedInfo.name);\r\n                        feedInfo = subClubFilter[0];\r\n                    } else {\r\n                        feedInfo = clubFilter[0];\r\n                    }\r\n                    return {\r\n                        ...s, feedInfo: feedInfo,  clubs: tree, subClubs: subClubs\r\n                    };\r\n                });\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    // Fetch enrolled sub-clubs:\r\n    useEffect(() => {\r\n        if (AuthService.hasLoggedIn()) {\r\n            MemberService.getEnrolledSubClubsOfCurrentlySignedInUser().then(response => {\r\n                console.log(\"Enrolled sub-clubs:\", response.data);\r\n                const enrolledSubClubs = response.data;\r\n                setState(s => {\r\n                    return {...s, enrolledSubClubs: enrolledSubClubs};\r\n                });\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isOnSubClub(state.feedInfo)) {\r\n            ClubService.getEvents(state.feedInfo.name).then(response => {\r\n                console.log(`Events of ${state.feedInfo.name}`, response.data);\r\n                const events = response.data;\r\n                if (AuthService.hasLoggedIn()) {\r\n                    const allEvents = events.map(event => {\r\n                        event.hasAttended = state.userInfo.attendedEvents\r\n                            .filter(anAttendedEventOfMember => anAttendedEventOfMember.id === event.id).length !== 0;\r\n                        return event;\r\n                    })\r\n\r\n                    setState(s => {\r\n                        return {...s, events: allEvents};\r\n                    });\r\n                } else {\r\n                    setState(s => {\r\n                        return {...s, events: events};\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                console.error(\"Error while fetching events:\", error);\r\n            })\r\n        }\r\n    }, [state.feedInfo, state.userInfo]);\r\n\r\n    // Get posts\r\n    useEffect(() => {\r\n        if (state.feedInfo.name) {\r\n            PostService.getPosts(state.feedInfo.name, state.currentPage - 1, 10, state.sorting).then(response => {\r\n                console.log(`Fetched posts of ${state.feedInfo.name}`);\r\n                const posts = response.data;\r\n                setState(s => {\r\n                    return {...s, posts: posts};\r\n                });\r\n            }).catch(e => {\r\n                console.error(e);\r\n                console.log(`No posts in ${state.feedInfo.name}`);\r\n                setState(s => {\r\n                    return {...s, posts: []};\r\n                });\r\n            });\r\n        }\r\n    }, [state.feedInfo, state.currentPage, state.sorting]);\r\n\r\n    // on enrollment, refresh the enrolled ones\r\n    const handleEnrollment = (isEnrolled) => {\r\n        if (isEnrolled) {\r\n            setState(s => {\r\n                return {...s, enrolledSubClubs: [...state.enrolledSubClubs, state.feedInfo]};\r\n            });\r\n        }\r\n    };\r\n\r\n    // request to being a moderator\r\n    const [modRequestDialogOpen, setModRequestDialogOpen] = React.useState(false);\r\n    const [modRequestResponse, setModRequestResponse] = React.useState(\"\");\r\n\r\n    const handleModeratorRequest = () => {\r\n        MemberService.requestForModerating(state.feedInfo.name).then((response) => {\r\n            setModRequestDialogOpen(true);\r\n            console.log(response.data);\r\n            setModRequestResponse(response.data)\r\n        }).catch((err) => {\r\n            if (401 === err.response.status) {\r\n                console.log(err.response.data);\r\n                setModRequestResponse(err.response.data)\r\n                setModRequestDialogOpen(true);\r\n            }\r\n        })\r\n        // setModRequestDialogOpen(true);\r\n\r\n    };\r\n\r\n    // event for new post creation\r\n    const handleNewPost = (postCreated) => {\r\n        // refresh the posts when the new one sended to db\r\n        // doRefresh(!refreshFeed);\r\n        history.replace(`/feed/${state.feedInfo.name}/new`);\r\n        window.location.reload();\r\n    }\r\n\r\n    const handleClubTreeItemClick = (node) => {\r\n        setState(s => {\r\n            return {...s, feedInfo: node};\r\n        });\r\n        history.push(`/feed/${node.name}`);\r\n    }\r\n\r\n    const handlePageChange = (event, newPage) => {\r\n        console.log(\"Page:\", newPage);\r\n        setState(s => {\r\n            return {...s, currentPage: newPage};\r\n        });\r\n    }\r\n\r\n    const isEnrolled = (feed) => state.enrolledSubClubs ? state.enrolledSubClubs.filter(subClub => subClub.name === feed.name).length !== 0 : false;\r\n\r\n    const getNewlyCreatedSubClubs = () => {\r\n        if (state.subClubs !== null && state.enrolledSubClubs !== null && state.userInfo !== null) {\r\n            const uncommon = [];\r\n            const time = new Date(state.userInfo.created);\r\n            state.subClubs.forEach(subClub => {\r\n                state.enrolledSubClubs.forEach(enrolled => {\r\n                    if (enrolled.name !== subClub.name) {\r\n                        if (new Date(subClub.created) > time) {\r\n                            uncommon.push(subClub);\r\n                        }\r\n                    }\r\n                })\r\n            });\r\n            return uncommon;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const [postDialogOpen, setPostDialogOpen] = useState(false);\r\n    const [enrollDialogOpen, setEnrollDialogOpen] = useState(false);\r\n    const [subClubRequestDialogOpen, setSubClubRequestDialogOpen] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} className={classes.gridContainer}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridLeftColumnBox}>\r\n                        <Box className={classes.sectionBox}>\r\n                            <ClubTree\r\n                                title={\"Browse\"}\r\n                                selected={state.feedInfo.name}\r\n                                callbackOnTreeItemClick={handleClubTreeItemClick}\r\n                                clubs={state.clubs}/>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={6} className={classes.gridItem}>\r\n                    <Box className={classes.gridMiddleColumnBox}>\r\n                        <Box display=\"flex\">\r\n                            <ToggleButtonGroup\r\n                                className={classes.sortingFeedToggleGroup}\r\n                                value={state.sorting}\r\n                                exclusive\r\n                                onChange={handleSorting}\r\n                                aria-label=\"text alignment\">\r\n                                <ToggleButton value=\"today\" aria-label=\"left aligned\">\r\n                                    <Whatshot/>\r\n                                </ToggleButton>\r\n                                <ToggleButton value=\"new\" aria-label=\"centered\">\r\n                                    <FiberNew/>\r\n                                </ToggleButton>\r\n                                <ToggleButton value=\"top\" aria-label=\"right aligned\">\r\n                                    <TrendingUp/>\r\n                                </ToggleButton>\r\n                            </ToggleButtonGroup>\r\n\r\n                            <Pagination page={state.currentPage} onChange={handlePageChange} className={classes.pagination}\r\n                                        count={10} color=\"primary\" variant=\"outlined\" shape=\"rounded\"/>\r\n\r\n\r\n                            {(!(state.feedInfo.isCustom || (!state.feedInfo.parentName))) &&\r\n                            <Button size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={!isEnrolled(state.feedInfo)}\r\n                                    startIcon={<Edit/>}\r\n                                    onClick={() => {\r\n                                        setPostDialogOpen(true);\r\n                                    }}\r\n                                    disableElevation>CREATE POST</Button>}\r\n                        </Box>\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        {/* Feed */}\r\n                        <PostFeed posts={state.posts}/>\r\n\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridRightColumnBox}>\r\n                        <Box className={classes.sectionBox}>\r\n                            {state.feedInfo.name !== undefined &&\r\n                            <AboutFeed feedInfo={state.feedInfo} stats={state.stats}/>}\r\n                        </Box>\r\n                        {state.feedInfo.parentName && <Box className={classes.sectionBox}>\r\n                            <EventContainer\r\n                                events={\r\n                                    <List>\r\n                                        {state.events && state.events.length !== 0 ? state.events.map(event =>\r\n                                            <EventItem\r\n                                                key={event.id}\r\n                                                event={event}\r\n                                                attendCallback={(id) => {\r\n                                                    MemberService.attendEvent(id).then(response => {\r\n                                                        console.log(\"Successfully attended event:\", response.data);\r\n                                                        const aux = state.events.slice();\r\n                                                        aux.filter(event => event.id === response.data.id).forEach(event => {\r\n                                                            event.hasAttended = true;\r\n                                                        })\r\n                                                        setState(s => {\r\n                                                            return {...s, events: aux};\r\n                                                        });\r\n                                                    }).catch(error => {\r\n                                                        console.error(\"Error while attending event:\", error);\r\n                                                    })\r\n                                                }}\r\n                                            />\r\n                                        ) : \"There are no events announced as of now.\"}\r\n                                    </List>\r\n                                }/>\r\n                        </Box>}\r\n\r\n                        {((!isEnrolled(state.feedInfo))\r\n                            && (!(state.feedInfo.isCustom || (!state.feedInfo.parentName)))) &&\r\n                        <Box>\r\n                            <Button size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<Add/>}\r\n                                    onClick={() => {\r\n                                        setEnrollDialogOpen(true);\r\n                                    }}\r\n                                    fullWidth\r\n                                    disableElevation>ENROLL\r\n                            </Button>\r\n                        </Box>}\r\n\r\n                        {(isEnrolled(state.feedInfo)) &&\r\n                        <Box className={classes.button}>\r\n                            <Button size=\"medium\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<RateReviewOutlinedIcon/>}\r\n                                    onClick={() => {\r\n                                        history.push(`/meta/${state.feedInfo.name}`)\r\n                                    }}\r\n                                    fullWidth\r\n                                    disableElevation>{state.feedInfo.name} META\r\n                            </Button>\r\n                        </Box>}\r\n\r\n                        {((!state.feedInfo.isCustom) && (!state.feedInfo.parentName)) &&\r\n                        <Box className={classes.button}>\r\n                            <Button size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<Add/>}\r\n                                    onClick={() => {\r\n                                        setSubClubRequestDialogOpen(true);\r\n                                    }}\r\n                                    fullWidth\r\n                                    disableElevation>REQUEST NEW SUB-CLUB\r\n                            </Button>\r\n                        </Box>}\r\n\r\n                        {((isEnrolled(state.feedInfo))\r\n                            && (!(state.feedInfo.isCustom || (!state.feedInfo.parentName)))\r\n                            && (state.feedInfo.moderatorUsername !== AuthService.getUsername())) &&\r\n                        <Box className={classes.button}>\r\n                            <Button size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<Add/>}\r\n                                    onClick={() => {\r\n                                        handleModeratorRequest()\r\n                                    }}\r\n                                    fullWidth\r\n                                    disableElevation>REQUEST TO BE A MODERATOR\r\n                            </Button>\r\n                        </Box>}\r\n\r\n                        {state.feedInfo.name === \"Popular\" && AuthService.hasJwtToken() && getNewlyCreatedSubClubs().length > 0 &&\r\n                        <Box>\r\n                            <TitledSection titleIcon={<FiberNew/>}\r\n                                           title={\"Newly created sub-clubs\"}>\r\n                                <List>\r\n                                    {getNewlyCreatedSubClubs().map(subClub =>\r\n                                        <ListItem\r\n                                            button\r\n                                            onClick={() => history.push(`/feed/${subClub.name}`)} key={subClub.name}>\r\n                                            <ListItemAvatar className={classes.avatarContainer}>\r\n                                                <Avatar\r\n                                                    className={classes.avatar}>{subClub.name[0].toUpperCase()}</Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={subClub.name}\r\n                                                          secondary={`Sub-club of ${subClub.parentName}`}/>\r\n                                        </ListItem>\r\n                                    )}\r\n                                </List>\r\n                            </TitledSection>\r\n                        </Box>}\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <CreatePost open={postDialogOpen} setOpen={setPostDialogOpen} newPostEvent={handleNewPost}\r\n                        subclub={state.feedInfo}/>\r\n            {(enrollDialogOpen) &&\r\n            <EnrollPanel open={enrollDialogOpen} setOpenDialog={setEnrollDialogOpen} setEnrolled={handleEnrollment}\r\n                         clickedSubClub={state.feedInfo}/>}\r\n\r\n            {(subClubRequestDialogOpen) &&\r\n            <RequestSubclub open={subClubRequestDialogOpen} setOpenDialog={setSubClubRequestDialogOpen}\r\n                            club={state.feedInfo}/>}\r\n\r\n\r\n            <Dialog open={modRequestDialogOpen} onClose={() => {\r\n                setModRequestDialogOpen(false)\r\n            }} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Moderator Request</DialogTitle>\r\n                <DialogContent>\r\n                    <p>{modRequestResponse}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => {\r\n                        setModRequestDialogOpen(false)\r\n                    }} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import axios from 'axios';\r\nimport {headersWithToken} from \"./headers\";\r\nimport {ADMIN,\r\n        BASE_URL,\r\n        ENROLLED_SUBCLUBS,\r\n        REPORTS,\r\n        SEARCH_MEMBER_BY_NAME,\r\n        SUBCLUB_REQUESTS,\r\n        CREATE_CLUB, CREATE_SUBCLUB, DELETE_REPORT, SUB_CLUB, DELETE_SUB_CLUB, MOD_REQUESTS, ASSIGN_MOD} from \"../api_config\";\r\n\r\n\r\nconst searchMembersByName = (username, page, size) => {\r\n    return axios.get(BASE_URL + SEARCH_MEMBER_BY_NAME,headersWithToken({query: username, page: page, size: size}));\r\n}\r\n\r\nconst getEnrolledSubClubs = (username) => {\r\n    return axios.get(BASE_URL + ADMIN + ENROLLED_SUBCLUBS, headersWithToken({username: username}));\r\n}\r\n\r\nconst getPostReports = () => {\r\n    return axios.get(BASE_URL + ADMIN + REPORTS, headersWithToken());\r\n}\r\n\r\nconst getRequestedSubclubs = () => {\r\n    return axios.get(BASE_URL + SUBCLUB_REQUESTS, headersWithToken());\r\n}\r\n\r\nconst createClub = (clubName, clubDetails) => {\r\n    const body = {name:clubName, details:clubDetails}\r\n    return axios.post(BASE_URL + CREATE_CLUB, body, headersWithToken());\r\n}\r\n\r\nconst createSubClub = (body) => {\r\n    return axios.post(BASE_URL + CREATE_SUBCLUB, body, headersWithToken());\r\n}\r\n\r\nconst updateSubClub = (body) => {\r\n    return axios.put(BASE_URL + ADMIN + SUB_CLUB, body, headersWithToken());\r\n}\r\n\r\nconst deleteReport = (reportId) => {\r\n    return axios.post(BASE_URL + ADMIN + DELETE_REPORT, null, headersWithToken({reportId: reportId}));\r\n}\r\n\r\nconst deleteSubClub = (subClubId) => {\r\n    return axios.post(BASE_URL + ADMIN + DELETE_SUB_CLUB, null, headersWithToken({id: subClubId}));\r\n}\r\n\r\nconst getModeratorRequests = () => {\r\n    return axios.get(BASE_URL + ADMIN + MOD_REQUESTS, headersWithToken());\r\n}\r\n\r\nconst assignRandomModerator = (subclubname) => {\r\n    return axios.post(BASE_URL + ADMIN + ASSIGN_MOD, null, headersWithToken({subClubName: subclubname}));\r\n}\r\n\r\n\r\nexport const AdminService = {searchMembersByName, getEnrolledSubClubs, getPostReports, getRequestedSubclubs,\r\n                                updateSubClub, createClub, deleteSubClub, createSubClub, deleteReport, getModeratorRequests, assignRandomModerator}\r\n","import {ListItem, ListItemText} from \"@material-ui/core\";\r\nimport {Person} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport TitledSection from \"../common/TitledSection\";\r\nimport flatten from \"flat\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\n\r\nexport default function MemberInfo({info}) {\r\n\r\n    const flattened = flatten(info);\r\n\r\n    return (\r\n        <TitledSection title={info.username} titleIcon={<Person/>}>\r\n            <List>\r\n                {Object.keys(flattened).map(key => key !== \"username\" ?\r\n                    <ListItem key={key}>\r\n                        <ListItemText>\r\n                            {`${key}: ${flattened[key]}`}\r\n                        </ListItemText>\r\n                    </ListItem> : null\r\n                )}\r\n            </List>\r\n        </TitledSection>\r\n    );\r\n\r\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\r\nimport {InfoOutlined} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n}));\r\n\r\n\r\nexport default function NoResultsFound() {\r\n    const classes = useStyles();\r\n\r\n    return (<ListItem\r\n        key={\"no-result\"}>\r\n        <ListItemAvatar className={classes.avatarContainer}>\r\n            <Avatar className={classes.avatar}><InfoOutlined/></Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={\"No results found\"}/>\r\n    </ListItem>);\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {AdminService} from '../../service/AdminService';\r\nimport {PostFeedItem} from \"../post/PostFeedItem\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {PostService} from \"../../service/PostService\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport NoResultsFound from \"../common/NoResultsFound\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    gridReportInfoContainer: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    gridHorizontalSection: {\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    postFeedItemWrapper: {}\r\n}));\r\n\r\n\r\nfunction ReportedPosts() {\r\n    const classes = useStyles();\r\n    const [postReports, setPostReports] = useState(null);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [selectedReport, setSelectedReport] = useState(null);\r\n    const [selectedPostOwner, setSelectedPostOwner] = useState({});\r\n\r\n    // Get Reports\r\n    useEffect(() => {\r\n        AdminService.getPostReports().then(response => {\r\n            setPostReports(response.data);\r\n        });\r\n    }, [selectedReport]);\r\n\r\n    const handleReportClick = (e, report) => {\r\n        setSelectedReport(report);\r\n        PostService.getPostById(report.postId).then(response => {\r\n            setSelectedPost(response.data);\r\n            AdminService.searchMembersByName(response.data.author, 0, 1).then(response => {\r\n                setSelectedPostOwner(response.data[0]);\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n\r\n        <Grid container>\r\n            <Grid key={1} item xs={4}>\r\n                <Typography variant=\"h6\" className={classes.title}>List of Reports</Typography>\r\n                <Paper variant={\"outlined\"} className={classes.paper}>\r\n                    <List className={classes.root}>\r\n                        {postReports === null || postReports.length === 0 ?\r\n                            <NoResultsFound/> : postReports.map((report) =>\r\n                                <div>\r\n                                    <ListItem\r\n                                        button\r\n                                        key={report.postId}\r\n                                        selected={selectedPost && report.postId === selectedPost.id}\r\n                                        alignItems=\"flex-start\"\r\n                                        onClick={(e) => handleReportClick(e, report)}>\r\n                                        <ListItemIcon>\r\n                                            <ReportOutlinedIcon/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`Reported by: ${report.author}`}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\">\r\n                                                        {`Reason: `}\r\n                                                    </Typography>\r\n                                                    {report.content}\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                </div>\r\n                            )}\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n            <Grid className={classes.gridReportInfoContainer} key={2} container xs={8}>\r\n                {selectedPost ?\r\n                    <Box>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Typography variant=\"h6\" className={classes.title}>Reported Post</Typography>\r\n                            <Box className={classes.postFeedItemWrapper}>{selectedPost ?\r\n                                <PostFeedItem key={selectedPost.postId} props={selectedPost}/> : null}\r\n                            </Box>\r\n                            <Grid container>\r\n\r\n                                <Grid item key={1} xs={6} className={classes.gridHorizontalSection}>\r\n                                    <Typography variant=\"h6\" className={classes.title}>Author Information</Typography>\r\n                                    {selectedPostOwner ? <MemberInfo info={selectedPostOwner}/> : null}\r\n                                </Grid>\r\n\r\n                                <Grid item key={2} xs={6} className={classes.gridHorizontalSection}>\r\n                                    <Typography variant=\"h6\" className={classes.title}>Actions</Typography>\r\n                                    <Grid container spacing={1} >\r\n                                       \r\n\r\n                                        <Grid item key={2} className={classes.button}>\r\n                                            <Button variant=\"outlined\" onClick={() => {\r\n                                                AdminService.deleteReport(selectedReport.id).then(response => {\r\n                                                    console.log(response.data);\r\n                                                    setSelectedReport(null);\r\n                                                    setSelectedPost(null);\r\n                                                    setSelectedPostOwner(null);\r\n                                                })\r\n                                            }}>REMOVE Report</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                    </Box>\r\n                    : <Typography className={classes.title}>Select a report to see the details.</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default ReportedPosts;\r\n","import {React, useEffect, useState} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {AdminService} from '../../service/AdminService'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"50%\",\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    memberInfo: {\r\n        marginBottom: theme.spacing(2),\r\n    }\r\n}));\r\n\r\n\r\nfunction ViewMemberInfo() {\r\n    const classes = useStyles();\r\n\r\n    const [members, setMembers] = useState([]);\r\n    const [selectedMember, setSelectedMember] = useState(null);\r\n\r\n    const onSearchKeyChange = (e) => {\r\n\r\n        AdminService.searchMembersByName(e.target.value, 0, 10).then(response => {\r\n            if (e.target.value.length > 1) {\r\n                setMembers(response.data);\r\n            } else if (e.target.value === \"\") {\r\n                setMembers([]);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedMember !== null) {\r\n            AdminService.getEnrolledSubClubs(selectedMember.username).then(response => {\r\n                setSelectedMember({...selectedMember, \"sub-clubs\": response.data.map(subClub => subClub.name)});\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <FormControl className={classes.form} variant=\"filled\">\r\n                <Autocomplete\r\n                    id=\"member-search-box\"\r\n                    onInput={onSearchKeyChange}\r\n                    onChange={(e, v) => {\r\n                        console.log(\"On select member:\", v);\r\n                        setSelectedMember(v);\r\n                    }}\r\n                    options={members}\r\n                    getOptionLabel={(option) => option.username}\r\n                    renderInput={(params) => <TextField {...params} label=\"Search member\" variant=\"filled\"/>}\r\n                />\r\n            </FormControl>\r\n\r\n            {selectedMember && <MemberInfo className={classes.memberInfo} info={selectedMember}/>}\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nexport default ViewMemberInfo;","import React from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport QuestionLayout from \"../../layout/QuestionLayout\";\r\nimport {Button, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, TextField} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary\r\n    },\r\n    question: {\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    radioGroup: {\r\n        display: \"flex\",\r\n        flexDirection:\"row\",\r\n        flexGrow:\"1\",\r\n    },\r\n    radioButton: {\r\n        marginLeft:theme.spacing(3)\r\n    }\r\n  }));\r\n\r\n\r\nfunction QuestionTextField({id, callBackOnChange}){\r\n    const choices = [\"Q\",\"A\",\"B\",\"C\",\"D\"];\r\n    return (\r\n    <Box display=\"flex\" flexDirection=\"row\" margin=\"4px\">\r\n            <TextField\r\n            autoFocus\r\n            required\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            id={choices[id]}\r\n            label={choices[id]}\r\n            type=\"email\"\r\n            onChange={event => {callBackOnChange(choices[id], event.target.value)}}\r\n            fullWidth\r\n            />\r\n    </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default function CreateQuestion({callBackOnSave, qid}) {\r\n    const classes = useStyles();\r\n    const [questionObject, setQuestion] = React.useState({\r\n            content:\"\", \r\n            answer1:\"\",\r\n            answer2:\"\",\r\n            answer3:\"\",\r\n            answer4:\"\",\r\n            groundTruth:\"\"\r\n        });\r\n    const id2Field = new Map()\r\n    id2Field.set(\"A\", \"answer1\")\r\n    id2Field.set(\"B\", \"answer2\")\r\n    id2Field.set(\"C\", \"answer3\")\r\n    id2Field.set(\"D\", \"answer4\")\r\n    id2Field.set(\"Q\", \"content\")\r\n    const [radioValue, setRadioValue] = React.useState('');\r\n    const onRadioChange = (event) => {\r\n        const updatingField = id2Field.get(event.target.value);\r\n        const groundTruth = questionObject[updatingField]\r\n        setQuestion({...questionObject, groundTruth:groundTruth});\r\n        setRadioValue(event.target.value);\r\n    };\r\n\r\n    function onSaveClick() {\r\n        callBackOnSave(qid, questionObject);\r\n    }\r\n\r\n    function onTextFieldChange(id, value) {\r\n        const updatingField = id2Field.get(id);\r\n        const tempObj = {...questionObject};\r\n        tempObj[updatingField] = value\r\n        // console.log(tempObj);\r\n        setQuestion(tempObj);\r\n        \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Box>\r\n\r\n            <QuestionLayout\r\n                question={<QuestionTextField id={0} callBackOnChange={onTextFieldChange}/>}\r\n                answer1={<QuestionTextField  id={1} callBackOnChange={onTextFieldChange}/>}\r\n                answer2={<QuestionTextField  id={2} callBackOnChange={onTextFieldChange}/>}\r\n                answer3={<QuestionTextField  id={3} callBackOnChange={onTextFieldChange}/>}\r\n                answer4={<QuestionTextField  id={4} callBackOnChange={onTextFieldChange}/>}\r\n            />\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\" marginTop=\"10px\" flexDirection=\"row\">\r\n                <FormControl component=\"fieldset\"> \r\n                    <FormLabel component=\"legend\">Answer</FormLabel>\r\n                    <RadioGroup className={classes.radioGroup} aria-label=\"realAnswer\" name=\"realAnswer\" value={radioValue} onChange={onRadioChange}>\r\n                        <FormControlLabel className={classes.radioButton} value=\"A\" control={<Radio />} label=\"A\" />\r\n                        <FormControlLabel className={classes.radioButton} value=\"B\" control={<Radio />} label=\"B\" />\r\n                        <FormControlLabel className={classes.radioButton} value=\"C\" control={<Radio />} label=\"C\" />\r\n                        <FormControlLabel className={classes.radioButton} value=\"D\" control={<Radio />} label=\"D\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n                <Button\r\n                    size=\"medium\"\r\n                    style={{margin:\"10px\"}}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => {onSaveClick()}}\r\n                    disableElevation> Save\r\n                </Button>\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CreateQuestion from \"./CreateQuestion\";\r\nimport {Box, Button, Grid} from \"@material-ui/core\";\r\nimport {Add} from \"@material-ui/icons\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection:\"column\",\r\n      height:\"60vh\",\r\n\r\n    },\r\n    questions: {\r\n\r\n    },\r\n    divider: {\r\n        margin:theme.spacing(3)\r\n    }\r\n  }));\r\n\r\n\r\nexport default function CreateQuestionnaire({onSubmitTrigger, callBackQuestions, oldQuestions}) {\r\n    const classes = useStyles();\r\n    const [questionNum, setQuestinNum] = useState(1)\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    useEffect(() => {\r\n        const newlist = questions.concat(oldQuestions)\r\n        callBackQuestions(newlist)\r\n    },[onSubmitTrigger])\r\n\r\n    function isQuestionValid(questionObj){\r\n        if (questionObj.content === \"\" || questionObj.answer1 === \"\" || questionObj.answer2 === \"\" ||\r\n        questionObj.answer3 === \"\" || questionObj.answer4 === \"\" || questionObj.groundTruth === \"\") {\r\n            return false\r\n        }\r\n        else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    function saveQuestionObj(qid, questionObj) {\r\n        if (!isQuestionValid(questionObj)) {\r\n            return\r\n        }\r\n        const templist = [...questions];\r\n        if(qid === questions.length) {\r\n            templist.push(questionObj);\r\n        }\r\n        else {\r\n            templist[qid] = questionObj\r\n        }\r\n        setQuestions(templist);\r\n    }\r\n\r\n\r\n\r\n\r\n    function addNewQuestion(event) {\r\n        setQuestinNum(questionNum + 1);\r\n    }\r\n\r\n    return (\r\n        <Grid className={classes.root}>\r\n\r\n            \r\n            <Box component=\"div\"  overflow=\"visible\" flexGrow={1} display=\"flex\" flexDirection=\"column\"  >\r\n                <Fragment>\r\n                {[...Array(questionNum)].map((quest, i) => {\r\n                    return (<Box key={\"q\"+i.toString()}>\r\n                        <h2>Question {i+1}</h2>\r\n                        <CreateQuestion qid={i} callBackOnSave={saveQuestionObj}/>\r\n\r\n                        {i+1 !== questionNum && (\r\n                            <Divider className={classes.divider}/>\r\n                        )}\r\n                    </Box>)\r\n                }\r\n                )}\r\n                </Fragment>\r\n            </Box>\r\n\r\n            <Button\r\n                size=\"medium\" style={{marginTop:\"20px\"}}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Add/>}\r\n                onClick={(event) => {addNewQuestion(event)}}\r\n                disableElevation>\r\n            </Button>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {ClubService} from \"../../service/ClubService\";\r\nimport CreateQuestionnaire from \"../questionnaire/CreateQuestionnaire\";\r\nimport {AdminService} from \"../../service/AdminService\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from \"@material-ui/core\";\r\n\r\nimport {delay} from \"../../util/async\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Assignment, DeleteForever, Update} from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 300,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 0,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    tagText: {\r\n        display: 'flex',\r\n        width: 100,\r\n        flexWrap: 'wrap',\r\n    },\r\n    typography: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    iconButton: {\r\n        margin: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nfunction ManageClub() {\r\n    const classes = useStyles();\r\n\r\n    const [isVisible, setIsVisible] = React.useState(false);\r\n\r\n\r\n    // Dialog ----------------------------------\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDeleteSubClub = () => {\r\n        AdminService.deleteSubClub(selectedClub.id).then(response => {\r\n            window.location.reload()\r\n\r\n           \r\n        });\r\n    }\r\n\r\n\r\n    const editAndSubmit = () => {\r\n        let selectedClubCopy = JSON.parse(JSON.stringify(selectedClub))\r\n        selectedClubCopy.questions = questions;\r\n        setSelectedClub(selectedClubCopy);\r\n\r\n\r\n        const createObject = {\r\n            id: selectedClub.id,\r\n            name: selectedClub.name,\r\n            parentName: selectedClub.parentName,\r\n            questions: questions,\r\n            details: selectedClub.details\r\n        }\r\n\r\n        AdminService.updateSubClub(createObject).then((response) => {\r\n            delay(2000).then(() => window.location.reload());\r\n        })\r\n        setOpen(false);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // ------------------------ QUESTIONNAIRE ------------------------\r\n\r\n    const [openQuestionnaireDialog, setQuestionnaireDialog] = React.useState(false);\r\n    const [submitQuestionnaireTrigger, setSubmitQuestionnaireTrigger] = React.useState(false);\r\n    const [questions, setQuestions] = React.useState([]);\r\n\r\n    const onSubmitQuestionnaire = () => {\r\n        setSubmitQuestionnaireTrigger(!submitQuestionnaireTrigger);\r\n        setQuestionnaireDialog(false);\r\n\r\n        console.log(\"new questions:\", questions);\r\n        let selectedClubCopy = JSON.parse(JSON.stringify(selectedClub))\r\n        selectedClubCopy.questions = questions;\r\n        setSelectedClub(selectedClubCopy);\r\n\r\n    };\r\n\r\n    const handleClickOpenQuestionnaireDialog = () => {\r\n        setQuestionnaireDialog(true);\r\n    };\r\n\r\n    const handleClickCloseQuestionnaireDialog = () => {\r\n        setQuestionnaireDialog(false);\r\n    };\r\n\r\n    const [subClubs, setSubClubs] = useState([]);\r\n    useEffect(() => {\r\n        ClubService.getSubClubs().then(response => {\r\n            console.log(\"All subclasses\", response.data);\r\n            setSubClubs(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const [selectedClubRequestName, setSelectedClubRequestName] = React.useState(\"\");\r\n    const [selectedClub, setSelectedClub] = React.useState({\r\n            created: \"2021-05-26T14:43:28.090+00:00\",\r\n            details: \"\",\r\n            id: 102,\r\n            moderatorUsername: \"\",\r\n            name: \"\",\r\n            parentName: \"\",\r\n            questions: [],\r\n            rating: 0\r\n        }\r\n    );\r\n\r\n    const handleClubRequestNameChange = (event) => {\r\n        setSelectedClubRequestName(event.target.value);\r\n        setSelectedClub(subClubs.filter(subclub => subclub.name === event.target.value)[0]);\r\n        if (event.target.value === \"\") {\r\n            setIsVisible(false);\r\n        } else {\r\n            setIsVisible(true);\r\n        }\r\n    };\r\n\r\n    const handleClubNameChange = (event) => {\r\n        let selectedClubCopy = JSON.parse(JSON.stringify(selectedClub))\r\n        selectedClubCopy.name = event.target.value;\r\n        setSelectedClub(selectedClubCopy);\r\n    };\r\n\r\n    const handleClubDescriptionChange = (event) => {\r\n        let selectedClubCopy = JSON.parse(JSON.stringify(selectedClub))\r\n        selectedClubCopy.details = event.target.value;\r\n        setSelectedClub(selectedClubCopy);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <FormControl variant={\"filled\"} className={classes.formControl}>\r\n                <InputLabel>Sub-club</InputLabel>\r\n                <Select\r\n                    value={selectedClubRequestName.name}\r\n                    onChange={handleClubRequestNameChange}\r\n                    inputProps={{\r\n                        name: '',\r\n                    }}>\r\n                    <option aria-label=\"None\" value=\"\"/>\r\n\r\n                    {subClubs.map((subClub) => (\r\n                        <option value={subClub.name}>{subClub.name}</option>\r\n                    ))}\r\n                </Select>\r\n                <FormHelperText>Select a sub-club to edit</FormHelperText>\r\n            </FormControl>\r\n\r\n            {isVisible ? <Grid container spacing={3}>\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    </Grid>\r\n                    <Grid item xs={5} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    </Grid>\r\n                    <Grid item xs={1} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                        <Box>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"standard-full-width\"\r\n                                label=\"Sub-club name\"\r\n                                variant={\"filled\"}\r\n                                style={{margin: 8}}\r\n                                placeholder=\"Sub-club name\"\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{shrink: true,}}\r\n                                value={selectedClub ? selectedClub.name : \"\"}\r\n                                onChange={handleClubNameChange}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n\r\n                        <Box>\r\n                            <TextField\r\n                                required\r\n                                id=\"standard-full-width\"\r\n                                label=\"Sub-club description\"\r\n                                style={{margin: 8}}\r\n                                variant={\"filled\"}\r\n                                placeholder=\"Sub-club description\"\r\n                                helperText=\"Description should include bla bla\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{shrink: true,}}\r\n                                value={selectedClub ? selectedClub.details : \"\"}\r\n                                onChange={handleClubDescriptionChange}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                        <Box>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<Assignment/>}\r\n                                onClick={handleClickOpenQuestionnaireDialog}\r\n                            >\r\n                                Create a new questionnaire\r\n                            </Button>\r\n\r\n                            {((questions.length < 3) &&\r\n                                <Typography className={classes.typography}>Please add {Math.max(0, 3 - questions.length)} or more\r\n                                    questions.</Typography>)}\r\n\r\n                            <Dialog\r\n                                open={openQuestionnaireDialog} onClose={handleClickCloseQuestionnaireDialog}\r\n                                aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={\"md\"}>\r\n                                <DialogTitle id=\"form-dialog-title\">Create a new questionnaire</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText>\r\n                                        To edit this sub-club, please create a new questionnaire;\r\n                                    </DialogContentText>\r\n\r\n                                    <CreateQuestionnaire onSubmitTrigger={submitQuestionnaireTrigger}\r\n                                                         oldQuestions={questions} callBackQuestions={setQuestions}/>\r\n\r\n\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClickCloseQuestionnaireDialog} color=\"primary\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                    <Button onClick={onSubmitQuestionnaire} color=\"primary\">\r\n                                        Add\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                        <Box>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<Update/>}\r\n                                onClick={handleClickOpen}\r\n                            >\r\n                                Apply\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<DeleteForever/>}\r\n                                onClick={handleDeleteSubClub}\r\n                            >\r\n                                Delete this sub-club\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Box>\r\n                        <Dialog\r\n                            fullScreen={fullScreen}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"responsive-dialog-title\"\r\n                        >\r\n                            <DialogTitle\r\n                                id=\"responsive-dialog-title\">{\"Create a club with the following information?\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    <Typography>Club name: {selectedClub.name}</Typography>\r\n                                    <Typography>Club description: {selectedClub.details} </Typography>\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={editAndSubmit} color=\"primary\" autoFocus>\r\n                                    Apply changes\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Box>\r\n\r\n                </Grid>\r\n                : null}\r\n\r\n\r\n        </Box>);\r\n\r\n}\r\n\r\n\r\nexport default ManageClub;\r\n","import React, {useEffect} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {delay} from \"../../util/async\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport CreateQuestionnaire from \"../questionnaire/CreateQuestionnaire\"\r\nimport {AdminService} from \"../../service/AdminService\";\r\nimport {ClubService} from \"../../service/ClubService\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {useHistory} from \"react-router\";\r\nimport {Add, Assignment} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 300,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 0,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    tagText: {\r\n        display: 'flex',\r\n        width: 100,\r\n        flexWrap: 'wrap',\r\n    },\r\n    questionnaireDialog: {\r\n        minHeight: '80vh',\r\n        maxHeight: '80vh',\r\n    },\r\n    selectFromReqs: {\r\n        marginLeft: \"5vh\"\r\n    },\r\n    typography: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    iconButton: {\r\n        margin: theme.spacing(2),\r\n    }\r\n\r\n}));\r\n\r\nfunction CreateClub() {\r\n    const classes = useStyles();\r\n    const [canCreate, setCanCreate] = React.useState(false);\r\n\r\n    const history = useHistory();\r\n    // ------------------------ CREATE CLUB DIALOG ------------------------\r\n    const [openClubDialog, setClubDialog] = React.useState(false);\r\n    const [createClubName, setCreateClubName] = React.useState(\"\");\r\n    const [createClubDetails, setCreateClubDetails] = React.useState(\"\");\r\n    const [refreshClubsTrigger, setRefreshClubsTrigger] = React.useState(false);\r\n\r\n    const handleCloseCreateClub = () => {\r\n        setCreateClubDetails(\"\")\r\n        setCreateClubName(\"\")\r\n\r\n        setClubDialog(false);\r\n    };\r\n\r\n    const handleSubmitCreateClub = () => {\r\n        AdminService.createClub(createClubName, createClubDetails).then((response) => {\r\n            setRefreshClubsTrigger(!refreshClubsTrigger);\r\n        })\r\n        handleCloseCreateClub()\r\n    };\r\n\r\n    const onClubCreateNameChange = (event) => {\r\n        setCreateClubName(event.target.value);\r\n    }\r\n\r\n    const onClubCreateDetailsChange = (event) => {\r\n        setCreateClubDetails(event.target.value);\r\n    }\r\n\r\n    // ------------------------ QUESTIONNAIRE ------------------------\r\n\r\n    const [openQuestionnaireDialog, setQuestionnaireDialog] = React.useState(false);\r\n    const [submitQuestionnaireTrigger, setSubmitQuestionnaireTrigger] = React.useState(false);\r\n    const [questions, setQuestions] = React.useState([]);\r\n\r\n    const onSubmitQuestionnaire = () => {\r\n        setSubmitQuestionnaireTrigger(!submitQuestionnaireTrigger);\r\n        setQuestionnaireDialog(false);\r\n    };\r\n\r\n    const handleClickOpenQuestionnaireDialog = () => {\r\n        setQuestionnaireDialog(true);\r\n    };\r\n\r\n    const handleClickCloseQuestionnaireDialog = () => {\r\n        setQuestionnaireDialog(false);\r\n    };\r\n\r\n\r\n    // ------------------------ REQUESTED/NEW SUBCLUBS ------------------------\r\n\r\n    const [requests, setRequests] = React.useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        AdminService.getRequestedSubclubs().then((response) => {\r\n            setRequests(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const [selectedSubClubRequest, setSelectedSubClubRequest] = React.useState({});\r\n    const [subclubName, setSubclubName] = React.useState(\"\");\r\n\r\n    const handleClubRequestNameChange = (event) => {\r\n        if (event.target.value === \"\" || event.target.value === undefined) {\r\n            setClubName(\"\")\r\n            setSubclubName(\"\")\r\n            return\r\n        }\r\n        const requestObj = JSON.parse(event.target.value)\r\n        setSelectedSubClubRequest(requestObj);\r\n        setSubclubName(requestObj.subClubName);\r\n        if (createdClubs.includes(requestObj.clubName)) {\r\n            setClubName(requestObj.clubName);\r\n        } else {\r\n            setClubName(\"\")\r\n        }\r\n    };\r\n\r\n    const handleSubClubNameTextChange = (event) => {\r\n        setSubclubName(event.target.value)\r\n        if (!(requests.map((req) => {\r\n            return req.subClubName\r\n        }).includes(event.target.value))) {\r\n        }\r\n    }\r\n\r\n    // ------------------------ CLUBS ------------------------\r\n    const [createdClubs, setCreatedClubs] = React.useState([]);\r\n    const [clubName, setClubName] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        ClubService.getClubs().then((response) => {\r\n            setCreatedClubs(response.data.map((clb) => {\r\n                return clb.name\r\n            }));\r\n        })\r\n    }, [refreshClubsTrigger]);\r\n\r\n\r\n    const handleClubNameChange = (event) => {\r\n        setClubName(event.target.value);\r\n    };\r\n\r\n    // ------------------------ SUBCLUB DETAILS ------------------------\r\n    const [subclubDescription, setSubClubDescription] = React.useState(\"\");\r\n\r\n    const handleClubDescriptionChange = (event) => {\r\n        setSubClubDescription(event.target.value);\r\n    };\r\n\r\n    // ------------------------ KEYWORDS ------------------------\r\n    const [chipData, setChipData] = React.useState([]);\r\n\r\n    const handleChipDelete = (chipToDelete) => () => {\r\n        setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n    };\r\n    // ------------------------------------------------\r\n\r\n    const [tag, setTag] = React.useState(\"\");\r\n\r\n    const handleTagTextFieldChange = (event) => {\r\n        setTag(event.target.value);\r\n    };\r\n\r\n    const addTagClick = () => {\r\n        const newChips = [];\r\n        var i;\r\n        var flag = false;\r\n        for (i = 0; i < chipData.length; i++) {\r\n            if (chipData[i].label === tag) {\r\n                flag = true;\r\n            }\r\n            chipData[i].key = i;\r\n            newChips.push(chipData[i]);\r\n        }\r\n        if (flag) {\r\n\r\n        } else {\r\n            newChips[i] = {key: i, label: tag};\r\n        }\r\n        setChipData(newChips);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (questions.length >= 3 && subclubName !== \"\" && clubName !== \"\" && subclubDescription !== \"\") {\r\n            setCanCreate(true);\r\n        } else {\r\n            setCanCreate(false)\r\n        }\r\n    }, [questions, subclubName, clubName, subclubDescription])\r\n\r\n\r\n    const handleSubmitCreation = (event) => {\r\n\r\n\r\n        \r\n        const createObject = {\r\n            name: subclubName,\r\n            parentName: clubName,\r\n            questions: questions,\r\n            details: subclubDescription\r\n        }\r\n        AdminService.createSubClub(createObject).then((response) => {\r\n            console.log(response.data);\r\n            delay(2000).then(e => {\r\n                history.push(`/feed/${subclubName}/today`)\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Box>\r\n\r\n            <Dialog open={openClubDialog} onClose={handleCloseCreateClub} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add a new parent club</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To add a new club to this website, please enter a club name and a club description.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Club name\"\r\n                        onChange={onClubCreateNameChange}\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Club description\"\r\n                        onChange={onClubCreateDetailsChange}\r\n\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseCreateClub} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button disabled={createClubName === \"\" || createClubDetails === \"\"}\r\n                            onClick={handleSubmitCreateClub} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Box>\r\n                        <div>\r\n                            <FormControl variant=\"filled\" className={classes.formControl}>\r\n                                <InputLabel>Sub-club requests</InputLabel>\r\n                                <Select\r\n                                    onChange={handleClubRequestNameChange}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    {requests.map((req, i) => (\r\n                                        <option key={i}\r\n                                                value={JSON.stringify(req)}>{req.clubName} / {req.subClubName}</option>\r\n                                    ))}\r\n                                </Select>\r\n                                <FormHelperText>Select a sub-club request</FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={5} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Box>\r\n                        <FormControl variant=\"filled\" className={classes.formControl}>\r\n                            <InputLabel>A parent club</InputLabel>\r\n                            <Select\r\n                                required\r\n                                onChange={handleClubNameChange}\r\n                                value={clubName}\r\n                            >\r\n                                <option aria-label=\"None\" value=\"\"/>\r\n                                {createdClubs.map((clb, i) => (\r\n                                    <option key={i} value={clb}>{clb}</option>\r\n                                ))}\r\n                            </Select>\r\n                            <FormHelperText>Select a parent club or add a new one</FormHelperText>\r\n                        </FormControl>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={1} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <IconButton className={classes.iconButton} aria-label=\"add\" onClick={() => {\r\n                        setClubDialog(true)\r\n                    }}>\r\n                        <AddCircleOutlineIcon/>\r\n                    </IconButton>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Box>\r\n                        <div>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"standard-full-width\"\r\n                                variant=\"filled\"\r\n                                label=\"Sub-club name\"\r\n                                style={{margin: 8}}\r\n                                placeholder=\"Sub-club name\"\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{shrink: true,}}\r\n                                value={subclubName}\r\n                                onChange={handleSubClubNameTextChange}\r\n                            />\r\n                        </div>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n\r\n                    <Box>\r\n                        <div>\r\n                            <TextField\r\n                                required\r\n                                variant=\"filled\"\r\n                                id=\"standard-full-width\"\r\n                                label=\"Sub-club description\"\r\n                                style={{margin: 8}}\r\n                                placeholder=\"Sub-club description\"\r\n                                helperText=\"Description should include bla bla\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{shrink: true,}}\r\n                                value={subclubDescription}\r\n                                onChange={handleClubDescriptionChange}\r\n                            />\r\n                        </div>\r\n                    </Box>\r\n                </Grid>\r\n                {/*<Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>*/}\r\n                {/*    <div className={classes.root}><Typography>Related keywords</Typography></div>*/}\r\n                {/*    <Container>*/}\r\n                {/*        <div className={classes.root}>*/}\r\n\r\n                {/*            {(chipData.length === 0 && (*/}\r\n                {/*                <Chip*/}\r\n                {/*                    label=\"Empty\"*/}\r\n                {/*                    className={classes.chip}/>))}*/}\r\n\r\n                {/*            {chipData.map((data) => {*/}\r\n                {/*                return (*/}\r\n                {/*                    <li key={data.key}>*/}\r\n                {/*                        <Chip*/}\r\n                {/*                            label={data.label}*/}\r\n                {/*                            onDelete={handleChipDelete(data)}*/}\r\n                {/*                            className={classes.chip}*/}\r\n                {/*                        />*/}\r\n                {/*                    </li>*/}\r\n                {/*                );*/}\r\n                {/*            })}*/}\r\n                {/*        </div>*/}\r\n                {/*    </Container>*/}\r\n                {/*</Grid>*/}\r\n\r\n                {/*<Grid item xs={5} style={{maxHeight: '100vh', overflow: 'auto'}}>*/}\r\n                {/*    <Typography className={classes.root}>Add new keyword</Typography>*/}\r\n                {/*    <Container>*/}\r\n                {/*        <div>*/}\r\n                {/*            <TextField*/}\r\n                {/*                placeholder=\"some-tag\"*/}\r\n                {/*                className={clsx(classes.margin, classes.textField)}*/}\r\n                {/*                InputProps={{*/}\r\n                {/*                    startAdornment: <InputAdornment position=\"start\">#</InputAdornment>,*/}\r\n                {/*                }}*/}\r\n                {/*                value={tag}*/}\r\n                {/*                onChange={handleTagTextFieldChange}*/}\r\n                {/*            />*/}\r\n                {/*        </div>*/}\r\n                {/*    </Container>*/}\r\n                {/*</Grid>*/}\r\n                {/*<Grid item xs={1}>*/}\r\n                {/*    <Container>*/}\r\n                {/*        <IconButton aria-label=\"add\" onClick={addTagClick}>*/}\r\n                {/*            <AddCircleOutlineIcon/>*/}\r\n                {/*        </IconButton>*/}\r\n                {/*    </Container>*/}\r\n\r\n                {/*</Grid>*/}\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Box>\r\n                        <Box display=\"flex\" flexDirection=\"row\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<Assignment/>}\r\n                                className={classes.button}\r\n                                onClick={handleClickOpenQuestionnaireDialog}\r\n                            >\r\n                                Add a questionnaire\r\n                            </Button>\r\n\r\n                            {((questions.length < 3) &&\r\n                                <Typography className={classes.typography}>Please\r\n                                    add {Math.max(0, 3 - questions.length)} or more\r\n                                    questions.</Typography>)}\r\n                        </Box>\r\n\r\n                        <Dialog\r\n                            open={openQuestionnaireDialog} onClose={handleClickCloseQuestionnaireDialog}\r\n                            aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={\"md\"}>\r\n                            <DialogTitle id=\"form-dialog-title\">Create a questionnaire</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    To add a new sub-club to this website, please create a questionnaire;\r\n                                </DialogContentText>\r\n\r\n                                <CreateQuestionnaire onSubmitTrigger={submitQuestionnaireTrigger}\r\n                                                     oldQuestions={questions} callBackQuestions={setQuestions}/>\r\n\r\n\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClickCloseQuestionnaireDialog} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={onSubmitQuestionnaire} color=\"primary\">\r\n                                    Add\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Box>\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<Add/>}\r\n                        className={classes.button}\r\n                        disabled={!canCreate}\r\n                        onClick={handleSubmitCreation}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n        </Box>);\r\n\r\n}\r\n\r\n\r\nexport default CreateClub;","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {Button, Container, FormControl, FormHelperText, Grid, Select} from \"@material-ui/core\";\r\nimport {ClubService} from \"../../service/ClubService\";\r\nimport {AdminService} from \"../../service/AdminService\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Casino} from \"@material-ui/icons\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 300,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 0,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    tagText: {\r\n        display: 'flex',\r\n        width: 100,\r\n        flexWrap: 'wrap',\r\n    },\r\n    typography: {\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    iconButton: {\r\n        margin: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction ModeratorRequests() {\r\n    const classes = useStyles();\r\n    const [isRequestsVisible, setIsRequestsVisible] = useState(false);\r\n    const [isMemberInfoVisible, setIsMemberInfoVisible] = useState(false);\r\n\r\n    const theme = useTheme();\r\n    const [subClubs, setSubClubs] = useState([]);\r\n    const [selectedSubClub, setSelectedSubClub] = React.useState({});\r\n\r\n    const [selectedModRequest, setSelectedModRequest] = React.useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        AdminService.getModeratorRequests().then(response => {\r\n            setSubClubs(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const handleSubClubNameChange = (event) => {\r\n        setSelectedSubClub(event.target.value);\r\n        if (event.target.value === \"\") {\r\n            setIsRequestsVisible(false);\r\n        } else {\r\n            setIsRequestsVisible(true);\r\n        }\r\n        setIsMemberInfoVisible(false);\r\n    };\r\n\r\n\r\n    const handleRandomSelection = (event) => {\r\n        AdminService.assignRandomModerator(selectedSubClub).then((response) => {\r\n            if (response.data === \"\") {\r\n                setSelectedModRequest(\"\")                \r\n            }\r\n            else{\r\n                setSelectedSubClub(response.data)\r\n                setSelectedModRequest({Moderator: response.data.moderatorUsername})\r\n            }\r\n            setIsMemberInfoVisible(true);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <div>\r\n                    <FormControl variant={\"filled\"} className={classes.formControl}>\r\n                        <InputLabel htmlFor=\"age-native-helper\">Sub-club</InputLabel>\r\n                        <Select\r\n                            onChange={handleSubClubNameChange}\r\n                            inputProps={{\r\n                                name: '',\r\n                            }}>\r\n                            <option aria-label=\"None\" value=\"\"/>\r\n\r\n                            {subClubs.map((subClub) => (\r\n                                <option value={subClub}>{subClub}</option>\r\n                            ))}\r\n                        </Select>\r\n                        <FormHelperText>Select a sub-club</FormHelperText>\r\n                    </FormControl>\r\n                    {(subClubs.length === 0 ) && (\r\n                        <h3>There are no moderation request.</h3>\r\n                    )}\r\n                </div>\r\n            </Box>\r\n\r\n\r\n            {(isRequestsVisible) && (\r\n                <Grid container spacing={3} >\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto', marginTop:\"5vh\"}}>\r\n                        <Button  className={classes.button} size=\"medium\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        startIcon={<Casino/>}\r\n                                        disabled={isMemberInfoVisible}\r\n                                        onClick={() => {\r\n                                            handleRandomSelection()\r\n                                        }}\r\n                                        disableElevation>SELECT A RANDOM MODERATOR\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                        {(isMemberInfoVisible) && (\r\n                            <div>\r\n                                {(selectedModRequest !== \"\") && (<MemberInfo info={selectedModRequest}/>)}                                \r\n                            </div>\r\n                        )}\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            )}\r\n\r\n        </Box>);\r\n\r\n}\r\n\r\n\r\nexport default ModeratorRequests;","import {Route, Switch} from \"react-router-dom\";\r\nimport ReportedPosts from \"../component/admin/ReportedPosts\";\r\nimport ViewMemberInfo from \"../component/admin/ViewMemberInfo\";\r\nimport ManageClub from \"../component/admin/ManageClub\";\r\nimport CreateClub from \"../component/admin/CreateClub\";\r\nimport ModeratorRequests from \"../component/admin/ModeratorRequests\";\r\n\r\nexport default function AdminPanelSwitch() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/admin/create-club\">\r\n                <CreateClub/>\r\n            </Route>\r\n            <Route path=\"/admin/manage-club\">\r\n                <ManageClub/>\r\n            </Route>\r\n            <Route path=\"/admin/view-member-info\">\r\n                <ViewMemberInfo/>\r\n            </Route>\r\n            <Route path=\"/admin/moderator-requests\">\r\n                <ModeratorRequests/>\r\n            </Route>\r\n            <Route path=\"/admin/reported-posts\">\r\n                <ReportedPosts/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Divider, Typography} from \"@material-ui/core\";\r\nimport CoSpaceTreeViewMenu from \"../component/common/CoSpaceTreeViewMenu\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SupervisorAccount} from \"@material-ui/icons\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst adminMenu = [\r\n    {\r\n        text: \"Clubs & Sub-clubs\",\r\n        children: [\r\n            {\r\n                text: \"Create club\",\r\n                path: \"/admin/create-club\"\r\n            },\r\n            {\r\n                text: \"Manage club\",\r\n                path: \"/admin/manage-club\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        text: \"Members\",\r\n        children: [\r\n            {\r\n                text: \"View member information\",\r\n                path: \"/admin/view-member-info\"\r\n            },\r\n            {\r\n                text: \"Assign new moderators\",\r\n                path: \"/admin/moderator-requests\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        text: \"Reports\",\r\n        children: [\r\n            {\r\n                text: \"Reported posts\",\r\n                path: \"/admin/reported-posts\"\r\n            },\r\n        ]\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    gridLeftColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(0),\r\n    },\r\n    gridRightColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\n\r\nfunction AdminPanelLayout({children}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n    const onItemClick = (item) => {\r\n        console.log(item);\r\n        console.log(item.path);\r\n        history.push(item.path);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container className={classes.root}>\r\n\r\n            <Grid item xs={3} className={classes.gridLeftColumnBox}>\r\n                <Box>\r\n                    {/*<Typography variant=\"h4\">Menu</Typography>*/}\r\n                    {/*<Divider className={classes.divider}/>*/}\r\n                    <CoSpaceTreeViewMenu title={\"Menu\"}\r\n                                         titleIcon={<SupervisorAccount/>}\r\n                                         menuItems={adminMenu}\r\n                                         defaultExpanded={adminMenu.map(menuItem => menuItem.text)}\r\n                                         callbackOnTreeItemClick={onItemClick}/>\r\n                </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={9} className={classes.gridRightColumnBox}>\r\n                <Typography variant=\"h4\">Administration Panel</Typography>\r\n                <Divider className={classes.divider}/>\r\n                {children}\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminPanelLayout;","import React from \"react\";\r\nimport AdminPanelSwitch from \"../router/AdminPanelSwitch\";\r\nimport AdminPanelLayout from \"../layout/AdminPanelLayout\";\r\n\r\nfunction AdminPage() {\r\n    return (\r\n        <AdminPanelLayout>\r\n            <AdminPanelSwitch/>\r\n        </AdminPanelLayout>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminPage;","import axios from 'axios';\r\nimport {BASE_URL, MEMBER, PRIVATE_MESSAGE} from \"../api_config.js\";\r\nimport {headersWithToken} from \"./headers\";\r\n\r\n\r\nconst getPrivateMessages = () => {\r\n    return axios.get(BASE_URL + MEMBER + PRIVATE_MESSAGE, headersWithToken())\r\n}\r\n\r\n\r\nconst send = (receiverUsername, content) => {\r\n    return axios.post(BASE_URL + MEMBER + PRIVATE_MESSAGE, {\r\n        receiverUsername: receiverUsername,\r\n        content: content\r\n    }, headersWithToken())\r\n}\r\n\r\nexport const PrivateMessagingService = {getPrivateMessages, send};","import {Container, Divider, Grid, Paper, Typography} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {AuthService} from \"../../service/AuthService\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {PrivateMessagingService} from \"../../service/PrivateMessagingService\"\r\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\r\nimport {MeetingRoom, SupervisorAccount} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    usernameContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    dateRegisteredContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\n\r\nexport default function AboutMember({hasCommonSubClub, isSelf, username, timeRegistered, numberOfPostsInLastWeek}) {\r\n    console.log(\"Populating AboutMember section: \" + username);\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n\r\n                <Grid container className={classes.usernameContainer}>\r\n                    <Grid key={1} item className={classes.avatarContainer}>\r\n                        <Avatar className={classes.avatar}> {username[0].toUpperCase()} </Avatar>\r\n                    </Grid>\r\n                    <Grid key={2} item>\r\n                        <Typography variant=\"h5\">\r\n                            {username}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {numberOfPostsInLastWeek !== undefined &&\r\n                    <Box><Divider className={classes.divider}/>\r\n                        <Grid container className={classes.divider} justify=\"center\">\r\n                            <Grid key={2} item>\r\n                                <Container>\r\n                                    <Typography variant=\"h6\">\r\n                                        {numberOfPostsInLastWeek}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        {\"posts last week\"}\r\n                                    </Typography>\r\n                                </Container>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                }\r\n\r\n                <Divider className={classes.divider}/>\r\n                <Grid container className={classes.dateRegisteredContainer}>\r\n                    <Grid key={1} item>\r\n                        <Container><CakeIcon/> </Container>\r\n                    </Grid>\r\n                    <Grid key={2} item>\r\n                        <Typography variant=\"body1\">\r\n                            {`Registered on ${new Date(timeRegistered).toLocaleString(navigator.language, {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: 'numeric'\r\n                            })}`}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider}/>\r\n\r\n                {\r\n                    isSelf ? null :\r\n                        <Grid container className={classes.buttonContainer}>\r\n                            <Tooltip\r\n                                title={!hasCommonSubClub ? \"You are not a member of a common club or sub club!\" : \"Send a private message!\"}>\r\n                                <span className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        startIcon={<EmailOutlinedIcon/>}\r\n                                        disabled={!hasCommonSubClub}\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        onClick={() => {\r\n\r\n                                            PrivateMessagingService.send(username, \"\").then(response => {\r\n                                                console.log(response.data);\r\n                                                history.push(\"/pm\");\r\n                                            })\r\n\r\n                                        }}\r\n                                    >Send Message</Button>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                }\r\n\r\n                {AuthService.getUsername() === username && <Box>\r\n                    <Grid container className={classes.buttonContainer}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<MeetingRoom/>}\r\n                            className={classes.button}\r\n                            onClick={(event) => {\r\n                                AuthService.logout()\r\n                                history.push(\"/sign-in\")\r\n                            }}\r\n                        >\r\n                            Logout\r\n                        </Button>\r\n\r\n                        {AuthService.getAuthRoles().includes(\"ADMIN\") && <Button\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            startIcon={<SupervisorAccount/>}\r\n                            className={classes.button}\r\n                            onClick={(event) => {\r\n                                history.push(\"/admin\")\r\n                            }}\r\n                        >\r\n                            Admin Panel\r\n                        </Button>}\r\n                    </Grid>\r\n                </Box>\r\n                }\r\n\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import {List, ListItem, ListItemAvatar, ListItemText} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {EmojiSymbols} from \"@material-ui/icons\";\r\nimport TitledSection from '../common/TitledSection';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    usernameContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    dateRegisteredContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\n\r\nexport default function InterestRates({interests, isSelf}) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    let title = \"Interests\"\r\n    if (isSelf) {\r\n        title = \"My \" + title;\r\n    }\r\n    else {\r\n        title = \"Common \" + title;\r\n    }\r\n\r\n    return (\r\n            <Box>\r\n                <TitledSection titleIcon={<EmojiSymbols/>}\r\n                            title={title}>\r\n                    {(interests.length !== 0) && (\r\n                        <List>\r\n                            {interests.map(interest =>\r\n                            <ListItem>\r\n                                <ListItemAvatar className={classes.avatarContainer}>\r\n                                    <Avatar\r\n                                        className={classes.avatar}>{interest.subClubName[0].toUpperCase()}</Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={interest.subClubName}\r\n                                            secondary={`% ${interest.interestRate}`}/>\r\n                            </ListItem>\r\n                            )}\r\n                        </List>)}\r\n                    {(interests.length === 0) && (\r\n                        <p style={{marginLeft:\"2vh\"}}>{isSelf ? (\"Not enrolled to any sub-club yet.\") : (\"No common interests.\")}</p>\r\n                    )}\r\n\r\n                </TitledSection>\r\n            </Box>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Divider, Typography} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ClubTree from '../component/common/ClubTree';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {AccountCircle, PublicOutlined} from \"@material-ui/icons\";\r\nimport PostFeed from \"../component/post/PostFeed\";\r\nimport {MemberService} from \"../service/MemberService\";\r\nimport AboutMember from \"../component/profile/AboutMember\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport InterestRates from '../component/profile/InterestRates';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridContainer: {},\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    feedItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    feedTitle: {\r\n        flexGrow: 1\r\n    },\r\n    gridItem: {\r\n        maxHeight: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    gridLeftColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(2.5),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n    gridMiddleColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    gridRightColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(0),\r\n        marginRight: theme.spacing(2.5),\r\n    },\r\n    sectionBox: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    sortingFeedToggleGroup: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\n\r\nexport default function ProfilePage() {\r\n    const params = useParams();\r\n    const username = params.username;\r\n\r\n    console.log(\"Profile Page: \" + username);\r\n\r\n    const classes = useStyles();\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [commonClubsAndSubClubs, setCommonClubsAndSubClubs] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n    const [subClub, setSubClub] = useState({name: \"Loading...\"});\r\n    const [interests, setInterests] = useState([]);\r\n\r\n    useEffect(() => {\r\n        MemberService.getUserByName(username).then(response => {\r\n            setUser(response.data);\r\n        });\r\n    }, [username])\r\n\r\n\r\n    // Get the member's enrolled sub-clubs\r\n    useEffect(() => {\r\n        MemberService.getCommonSubClubs(username).then(response => {\r\n            console.log(`Common sub-clubs of ${username} and ${AuthService.getUsername()}`, response.data);\r\n            const clubsToSubClubs = {};\r\n            response.data.forEach(aSubClub => {\r\n                if (!(aSubClub.parentName in clubsToSubClubs)) {\r\n                    clubsToSubClubs[aSubClub.parentName] = []\r\n                }\r\n                clubsToSubClubs[aSubClub.parentName].push(aSubClub);\r\n            });\r\n            const clubsAsList = [];\r\n            for (let k in clubsToSubClubs) {\r\n                clubsAsList.push({name: k, children: clubsToSubClubs[k]})\r\n            }\r\n            setCommonClubsAndSubClubs(clubsAsList);\r\n        }).catch(error => {\r\n            console.error(`Error while fetching common sub-clubs of ${username} and ${AuthService.getUsername()}`, error);\r\n        });\r\n    }, [username]);\r\n\r\n    const handleClubTreeItemClick = (node) => {\r\n        if (node.parentName !== undefined) {\r\n            setSubClub(node);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (commonClubsAndSubClubs.length > 0) {\r\n            setSubClub(commonClubsAndSubClubs[0].children[0]);\r\n        }\r\n    }, [commonClubsAndSubClubs]);\r\n\r\n    useEffect(() => {\r\n        MemberService.getPostsByAuthorAndSubClub(username, subClub.name).then(response => {\r\n            console.log(`Posts of ${username} on ${subClub.name}`, response.data);\r\n            setPosts(response.data);\r\n        }).catch(error => {\r\n            console.error(`Error while fetching posts of ${username} on ${subClub.name}`, error);\r\n        })\r\n    }, [username, subClub]);\r\n\r\n    useEffect(() => {\r\n        MemberService.getEnrollmentsInfo(username).then(response => {\r\n            console.log(`Interests of ${username}`, response.data);\r\n            setInterests(response.data);\r\n        }).catch(error => {\r\n            console.error(`Error while fetching interests of ${username}`, error);\r\n        })\r\n    }, [username]);\r\n\r\n\r\n    const isSelf = AuthService.getUsername() === username;\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} className={classes.gridContainer}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridLeftColumnBox}>\r\n\r\n                        <Box className={classes.sectionBox}>\r\n                            <ClubTree\r\n                                titleIcon={isSelf ? <AccountCircle/> : <PublicOutlined/>}\r\n                                callbackOnTreeItemClick={handleClubTreeItemClick}\r\n                                clubs={commonClubsAndSubClubs}\r\n                                selected={subClub.name}\r\n                                title={isSelf ? \"Your Clubs\" : \"Common Clubs\"}/>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.gridItem}>\r\n                    <Box className={classes.gridMiddleColumnBox}>\r\n                        <Box display=\"flex\">\r\n                            <Typography variant={\"h4\"}>{user ? user.username : \"User\"}'s posts\r\n                                {subClub.name === \"Loading...\" ? \"\" : ` in ${subClub.name}`}</Typography>\r\n                        </Box>\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        <PostFeed posts={posts}/>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridRightColumnBox}>\r\n                        <Box className={classes.sectionBox}>\r\n                            <AboutMember\r\n                                hasCommonSubClub={commonClubsAndSubClubs.length > 0}\r\n                                isSelf={isSelf}\r\n                                username={username}\r\n                                timeRegistered={user ? user.created : null}\r\n                            />\r\n                        </Box>\r\n                        <Box className={classes.sectionBox}>\r\n                            <InterestRates\r\n                                isSelf={isSelf}\r\n                                interests={interests}\r\n                            />\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Box, Typography} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: \"5%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        marginTop: \"2%\"\r\n    },\r\n});\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Container component=\"main\" className={classes.root}>\r\n            <Typography variant=\"h2\">\r\n                Page not found :(\r\n            </Typography>\r\n            <Box className={classes.button}>\r\n                <Button variant=\"outlined\"\r\n                        onClick={() => history.push(\"/\")}>\r\n                    Go to home page\r\n                </Button></Box>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport {Link, Typography} from \"@material-ui/core\";\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://github.com/hu-overengineers\">\r\n                overengineers\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from \"../component/common/Copyright\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {delay} from \"../util/async\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUpPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n\r\n    const [open, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"uname\"\r\n                                label=\"Username\"\r\n                                name=\"uname\"\r\n                                autoComplete=\"username\"\r\n                                value={username}\r\n                                onChange={(event) => {\r\n                                    setUsername(event.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                value={email}\r\n                                onChange={(event) => {\r\n                                    setEmail(event.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={(event) => {\r\n                                    setPassword(event.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={(event) => {\r\n                            event.preventDefault();\r\n                            console.log(\"Sign up button clicked.\");\r\n                            AuthService.register({\r\n                                \"email\": email,\r\n                                \"username\": username,\r\n                                \"password\": password\r\n                            }).then(r => {\r\n                                console.log(\"Response: \" + r.data.toString())\r\n                                setSnackbarSeverity(\"success\");\r\n                                setSnackbarMessage(\"You've registered successfully!\");\r\n                                setSnackbarOpen(true);\r\n                                delay(1000).then(() => {\r\n                                        history.push(\"/sign-in\");\r\n                                    }\r\n                                );\r\n                            }).catch(e => {\r\n                                setSnackbarSeverity(\"error\");\r\n                                if (e.response.status === 409) {\r\n                                    setSnackbarMessage(e.response.data);\r\n                                } else {\r\n                                    setSnackbarMessage(\"Something went wrong: \" + e.response.data.toString());\r\n                                }\r\n                                setSnackbarOpen(true);\r\n                            })\r\n                        }}>\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/sign-in\" variant=\"body2\">\r\n                                Already have an account? Sign in.\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright/>\r\n            </Box>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Copyright from \"../component/common/Copyright\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {delay} from \"../util/async\";\r\nimport {MemberService} from \"../service/MemberService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignInPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [username, setUsername] = React.useState(\"\");\r\n\r\n    const [open, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n\r\n                <Avatar className={classes.avatar}> <LockOutlinedIcon/> </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\"> Sign in </Typography>\r\n\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={(event) => {\r\n                            setUsername(event.target.value)\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => {\r\n                            setPassword(event.target.value)\r\n                        }}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={(event) => {\r\n                            event.preventDefault();\r\n                            console.log(\"Sign in button clicked.\");\r\n                            AuthService.login(username, password).then(r => {\r\n                                console.log(\"Response: \" + JSON.stringify(r.data));\r\n                                AuthService.saveJwtToken(r.data.token);\r\n                                AuthService.saveAuthRoles(r.data.auth);\r\n                                setSnackbarSeverity(\"success\");\r\n                                setSnackbarMessage(\"Welcome back!\");\r\n                                setSnackbarOpen(true);\r\n\r\n                                delay(1000).then(() => {\r\n                                    if(r.data.enrollmentCount === 0){\r\n                                        history.push(\"/subclub-recommendation\");\r\n                                    }\r\n                                    else{\r\n                                        history.push(\"/\")\r\n                                    }\r\n                                })\r\n                            }).catch(e => {\r\n                                setSnackbarSeverity(\"error\");\r\n                                if (e.response !== undefined && e.response.status === 401) {\r\n                                    setSnackbarMessage(\"Entered credentials are incorrect.\");\r\n                                } else {\r\n                                    setSnackbarMessage(\"Something went wrong!\");\r\n                                }\r\n                                setSnackbarOpen(true);\r\n                            })\r\n                        }}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"/password-reset\" variant=\"body2\"> Forgot password? </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"/sign-up\" variant=\"body2\"> {\"Don't have an account? Sign up.\"} </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright/>\r\n            </Box>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Copyright from \"../component/common/Copyright\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {delay} from \"../util/async\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\r\nimport DoneOutlineOutlinedIcon from '@material-ui/icons/DoneOutlineOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    infoText: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\nfunction TypeEmailPage() {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [isSend, setIsSend] = React.useState(false);\r\n\r\n    const [open, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline/>\r\n\r\n        {isSend ? \r\n        \r\n        <div className={classes.paper}>\r\n\r\n            <Avatar className={classes.avatar}> <DoneOutlineOutlinedIcon/> </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Email sent successfully! </Typography>\r\n\r\n            \r\n            <Typography className={classes.infoText} component= \"body2\" align=\"center\">\r\n                A password reset link was sent. Click the link in the email to create a new password. \r\n                If you do not receive an email within 5 minutes, please click the re-send email link below.\r\n            </Typography>\r\n\r\n\r\n            <Container>\r\n                <Grid container>\r\n                    <Grid key={1} item>\r\n                        <Container>\r\n                            <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                    onClick={() => {\r\n                                        setIsSend(false);\r\n                                        history.push(\"/password-reset\");\r\n                                    }}\r\n                                >Re-send</Button>\r\n                            </Container>\r\n                    </Grid>\r\n                    <Grid key={2} item>\r\n                        <Container>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                    onClick={(event) => {\r\n                                        history.push(\"/\");\r\n                                    }}\r\n                                >Back to Home</Button>\r\n                        </Container>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n        :       \r\n        <div className={classes.paper}>\r\n\r\n            <Avatar className={classes.avatar}> <VpnKeyOutlinedIcon/> </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Reset Password </Typography>\r\n\r\n            \r\n            <Typography className={classes.infoText} component= \"body2\" align=\"center\">\r\n                Enter your email address that you used to register. \r\n                We'll send you an email with your username and a link to reset your password.\r\n            </Typography>\r\n\r\n            <form className={classes.form} noValidate>\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    className={classes.margin}\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    label=\"E-mail\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <MailOutlineIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                        }}\r\n                    onChange={(event) => {\r\n                        setEmail(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={(event) => {\r\n                        event.preventDefault();\r\n                        AuthService.resetPassword(email).then(r => {\r\n                            console.log(r.data.message);\r\n                            setSnackbarSeverity(\"success\");\r\n                            setSnackbarMessage(r.data.message);\r\n                            setSnackbarOpen(true);\r\n\r\n                            delay(200).then(() => {\r\n                                setIsSend(true);\r\n                            })\r\n                        }).catch(e => {\r\n                            setSnackbarSeverity(\"error\");\r\n                            if (e.response !== undefined && e.response.status === 401) {\r\n                                setSnackbarMessage(\"Entered credentials are incorrect.\");\r\n                            } else {\r\n                                setSnackbarMessage(\"Something went wrong!\");\r\n                            }\r\n                            setSnackbarOpen(true);\r\n                        })\r\n                    }}\r\n                >\r\n                    Reset Password\r\n                </Button>\r\n            </form>\r\n        </div>\r\n\r\n        }\r\n        <Box mt={8}>\r\n            <Copyright/>\r\n        </Box>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n            <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                {snackbarMessage}\r\n            </Alert>\r\n        </Snackbar>\r\n    </Container>\r\n    )\r\n}\r\n\r\nfunction TypeNewPasswordPage(probs) {\r\n    const token = probs.passwordResetToken;\r\n\r\n    console.log(token);\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    const [newPassword, setNewPassword] = React.useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n    const [passwordsIsMatch, setPasswordsIsMatch] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (newPassword === confirmPassword) {\r\n            setPasswordsIsMatch(true);\r\n        }else{\r\n            setPasswordsIsMatch(false);\r\n        }\r\n\r\n\r\n    }, [newPassword, confirmPassword])\r\n\r\n    const [open, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline/>\r\n        <div className={classes.paper}>\r\n\r\n            <Avatar className={classes.avatar}> <VpnKeyOutlinedIcon/> </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Reset Password </Typography>\r\n\r\n\r\n            <form className={classes.form} noValidate>\r\n\r\n                <TextField\r\n                    error = {!passwordsIsMatch}\r\n                    helperText= {passwordsIsMatch ?  null :\"Passwords does not match!\"}\r\n\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Create new password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n\r\n                    onChange={(event) => {\r\n                        setNewPassword(event.target.value);\r\n\r\n                    }}\r\n                />\r\n\r\n                <TextField\r\n\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Confirm your password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n\r\n                    error = {!passwordsIsMatch}\r\n                    helperText= {passwordsIsMatch ?  null :\"Passwords does not match!\"}\r\n\r\n                    onChange={(event) => {\r\n                        setConfirmPassword(event.target.value);\r\n\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n                    disabled={!passwordsIsMatch}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={(event) => {\r\n                        event.preventDefault();\r\n\r\n                        AuthService.changePasswordWithToken(newPassword, token).then(r => {\r\n                            console.log(r.data.message);\r\n                            setSnackbarSeverity(\"success\");\r\n                            setSnackbarMessage(r.data.message);\r\n                            setSnackbarOpen(true);\r\n\r\n                            delay(1000).then(() => {\r\n                                history.push(\"/sign-in\");\r\n                            })\r\n                        }).catch(e => {\r\n                            setSnackbarSeverity(\"error\");\r\n                            if (e.response !== undefined && e.response.status === 401) {\r\n                                setSnackbarMessage(\"Entered credentials are incorrect.\");\r\n                            } else {\r\n                                setSnackbarMessage(\"Something went wrong!\");\r\n                            }\r\n                            setSnackbarOpen(true);}) \r\n                    }}\r\n                >\r\n                    Reset Password\r\n                </Button>\r\n            </form>\r\n        </div>\r\n\r\n        \r\n        <Box mt={8}>\r\n            <Copyright/>\r\n        </Box>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n            <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                {snackbarMessage}\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nfunction PasswordResetPage() {\r\n    const {token} = useParams();\r\n    return (\r\n        <div>\r\n            {token ? <TypeNewPasswordPage passwordResetToken = {token}/> : <TypeEmailPage/>} \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordResetPage;","import {Avatar, ListItem, ListItemIcon, ListItemText,} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  avatar: {\r\n    color: theme.palette.getContrastText('#00e3aa'),\r\n    backgroundColor: '#00e3aa',\r\n  },\r\n}));\r\n\r\nfunction PrivateMessageUserItem(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      className={classes.root}\r\n      selected={props.selected}\r\n      key={props.username}\r\n      onClick={() => props.callback(props.username)}\r\n    >\r\n      <ListItemIcon>\r\n        <Avatar className={classes.avatar} alt={props.username}>\r\n          {\" \"}\r\n          {props.username[0].toUpperCase()}{\" \"}\r\n        </Avatar>\r\n      </ListItemIcon>\r\n      <ListItemText primary={props.username}>{props.username}</ListItemText>\r\n    </ListItem>\r\n  );\r\n}\r\nexport default PrivateMessageUserItem;\r\n","import PrivateMessageUserItem from \"./PrivateMessageUserItem\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nfunction PrivateMessageUserItemList(props) {\r\n  console.log(\"Selected:\", props.selectedUser);\r\n  return (\r\n  <List>\r\n      {props.users.map((user) => {\r\n         return <PrivateMessageUserItem selected={props.selectedUser === user} callback={props.callback} key={user} username={user}/>\r\n    })}\r\n  </List>\r\n\r\n  );\r\n}\r\nexport default PrivateMessageUserItemList;\r\n","import ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {AuthService} from \"../../service/AuthService\";\r\nimport {format} from \"date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    messageArea: {\r\n        height: \"70vh\",\r\n        overflowY: \"auto\",\r\n    },\r\n}));\r\n\r\n\r\nfunction PrivateMessageFeed({messages}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const scrollRef = useRef(null);\r\n\r\n    /* whenever the list changes we need to scroll our\r\n       last list item into view */\r\n    useEffect(() => {\r\n        if (scrollRef.current) {\r\n            scrollRef.current.scrollIntoView({behaviour: \"smooth\"});\r\n        }\r\n    }, [messages]);\r\n\r\n    return (\r\n        <List className={classes.messageArea}>\r\n            {messages.map(message =>\r\n                <ListItem key={message.id}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <ListItemText\r\n                                align={message.senderUsername === AuthService.getUsername() ? \"right\" : \"left\"}\r\n                                primary={message.content}\r\n                                secondary={format(new Date(message.created), \"dd.MM.yyyy HH:mm\")}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </ListItem>)}\r\n            {/* this is the last item that scrolls into\r\n             view when the effect is run */}\r\n            <li ref={scrollRef}/>\r\n        </List>\r\n    );\r\n}\r\n\r\n\r\nexport default PrivateMessageFeed;","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport PrivateMessageUserItemList from \"../component/pm/PrivateMessageUserItemList\";\r\nimport PrivateMessageFeed from \"../component/pm/PrivateMessageFeed\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport {PrivateMessagingService} from \"../service/PrivateMessagingService\";\r\nimport {unstable_batchedUpdates} from \"react-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    divider: {\r\n\r\n    },\r\n    chatSection: {\r\n        width: \"100%\",\r\n    },\r\n    headBG: {\r\n        backgroundColor: \"#e0e0e0\",\r\n    },\r\n    borderRight500: {\r\n        borderRight: `1px solid ${theme.palette.secondary.dark}`,\r\n    },\r\n    messageArea: {\r\n        height: \"70vh\",\r\n        overflowY: \"auto\",\r\n    },\r\n    marginAll: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(2),\r\n        marginLeft: theme.spacing(12),\r\n        marginRight: theme.spacing(12),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n}));\r\n\r\nfunction PrivateMessagePage() {\r\n    const classes = useStyles();\r\n\r\n    const [userList, setUserList] = useState([]);\r\n    const [selectedUser, setUser] = useState(null);\r\n    const [filteredMessages, setFilteredMessages] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageContent, setMessageContent] = useState(null);\r\n\r\n    useEffect(() => {\r\n        PrivateMessagingService.getPrivateMessages().then(response => {\r\n            console.log(\"PM:\", response.data);\r\n            setMessages(response.data);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const self = AuthService.getUsername();\r\n\r\n        const usersSet = new Set();\r\n        messages.forEach((message) => {\r\n            if (message.senderUsername === self) {\r\n                usersSet.add(message.receiverUsername);\r\n            } else if (message.receiverUsername === self) {\r\n                usersSet.add(message.senderUsername);\r\n            }\r\n        });\r\n        let sortedUserList = [...usersSet];\r\n\r\n        sortedUserList.sort((user1, user2) => {\r\n            let common1 = messages.filter(\r\n                (message) => (message.senderUsername === user1 || message.receiverUsername === user1) \r\n            );\r\n            let common2 = messages.filter(\r\n                (message) => (message.senderUsername === user2 || message.receiverUsername === user2)\r\n            );\r\n\r\n            return Math.max.apply(Math, common2.map(message => new Date(message.created).getTime())) -\r\n                Math.max.apply(Math, common1.map(message => new Date(message.created).getTime()));\r\n        });\r\n\r\n        sortedUserList = sortedUserList.filter(user => {\r\n            let receivedMessages = messages.filter(message => message.senderUsername === user && message.receiverUsername === self);\r\n            if (receivedMessages.length === 1) {\r\n                return receivedMessages[0].content !== \"\";\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        setUserList(sortedUserList);\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"User List:\", userList);\r\n        if (selectedUser === null && userList.length > 0) setUser(userList[0]);\r\n    }, [userList])\r\n\r\n    useEffect(() => {\r\n        let sortedFilteredMessages = messages.filter(message => message.senderUsername === selectedUser || message.receiverUsername === selectedUser);\r\n        sortedFilteredMessages.sort((message1, message2) => message1.timestamp <= message2.timestamp);\r\n        sortedFilteredMessages = sortedFilteredMessages.filter(message => message.content !== \"\");\r\n        setFilteredMessages(sortedFilteredMessages);\r\n    }, [messages, selectedUser]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (messageContent === null || messageContent === \"\") return;\r\n        PrivateMessagingService.send(selectedUser, messageContent).then(response => {\r\n            const aux = messages.slice();\r\n            aux.push(response.data);\r\n            unstable_batchedUpdates(() => {\r\n                setMessages(aux);\r\n                setMessageContent(\"\");\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.marginAll}>\r\n            <Grid container className={classes.title}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" className=\"header-message\">\r\n                        Private Messages\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Paper variant={\"outlined\"}>\r\n                <Grid container className={classes.chatSection}>\r\n                    <Grid item xs={3} className={classes.borderRight500}>\r\n                        <PrivateMessageUserItemList\r\n                            users={userList}\r\n                            selectedUser={selectedUser}\r\n                            callback={(username) => {\r\n                                console.log(\"Clicked:\", username);\r\n                                setUser(username);\r\n                            }}\r\n                            username={AuthService.getUsername()}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <PrivateMessageFeed messages={filteredMessages}/>\r\n                        <Divider className={classes.divider}/>\r\n                        <Grid container style={{padding: \"20px\"}}>\r\n                            <Grid item xs={11}>\r\n                                <TextField\r\n                                    value={messageContent}\r\n                                    label=\"Type something...\"\r\n                                    onChange={(event) => setMessageContent(event.target.value)}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={1} align=\"right\">\r\n                                <Fab disabled={selectedUser === null} onClick={() => handleSendMessage()} color=\"primary\" aria-label=\"add\">\r\n                                    <SendIcon/>\r\n                                </Fab>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrivateMessagePage;\r\n","import axios from 'axios';\r\nimport {BASE_URL, EVENT, MODERATOR, REPORTS, DELETE_REPORT, DELETE_POST, BAN, DISMISS_LIST, DISMISS} from \"../api_config\";\r\nimport {headersWithToken} from \"./headers\";\r\n\r\n\r\nconst createEvent = (title, details, date, isOnline, location, utilLink) => {\r\n    return axios.post(BASE_URL + MODERATOR + EVENT, {\r\n        title: title,\r\n        details: details,\r\n        date: date,\r\n        isOnline: isOnline,\r\n        location: location,\r\n        utilLink: utilLink,\r\n    }, headersWithToken());\r\n}\r\n\r\nconst getEvents = () => {\r\n    return axios.get(BASE_URL + MODERATOR + EVENT, headersWithToken());\r\n}\r\n\r\nconst updateEvent = (event) => {\r\n    return axios.put(BASE_URL + MODERATOR + EVENT, event, headersWithToken());\r\n}\r\n\r\nconst deleteEvent = (eventId) => {\r\n    return axios.delete(BASE_URL + MODERATOR + EVENT, {id: eventId}, headersWithToken());\r\n}\r\n\r\nconst getPostReports = () => {\r\n    return axios.get(BASE_URL + MODERATOR + REPORTS, headersWithToken());\r\n}\r\n\r\nconst deleteReport = (reportId) => {\r\n    return axios.post(BASE_URL + MODERATOR + DELETE_REPORT, null, headersWithToken({reportId: reportId}));\r\n}\r\n\r\nconst deletePost = (postId) => {\r\n    return axios.post(BASE_URL + MODERATOR + DELETE_POST, null, headersWithToken({postId: postId}));\r\n}\r\n\r\nconst ban = (username, subClubName, reason) => {\r\n    return axios.post(BASE_URL + MODERATOR + BAN, null,\r\n        headersWithToken( \r\n            {username: username, \r\n        subClubName: subClubName, \r\n        reason: reason}));\r\n}\r\n\r\nconst getDismissList = () => {\r\n    return axios.get(BASE_URL + MODERATOR + DISMISS_LIST, headersWithToken());\r\n}\r\n\r\nconst dismiss = (username) => {\r\n    return axios.post(BASE_URL + MODERATOR + DISMISS, headersWithToken({username: username}));\r\n\r\n}\r\n\r\nexport const ModeratorService = {createEvent, getEvents, updateEvent, deleteEvent, getPostReports, deleteReport, dismiss,  deletePost, ban, getDismissList};","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {FormControlLabel, FormGroup, Snackbar, Switch, TextField, Typography} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider,} from '@material-ui/pickers';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"date-fns\"; // DO NOT REMOVE, OR YOU WILL BE DOOMED!\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {ModeratorService} from \"../../service/ModeratorService\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {delay} from \"../../util/async\";\r\nimport {Event} from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    explanation: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    formInput: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    switchInput: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    dateInput: {\r\n        marginTop: 0,\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n    },\r\n    submitButton: {}\r\n}));\r\n\r\n\r\nconst inputFields = [\r\n    {\r\n        name: \"title\",\r\n        label: \"Event title\",\r\n        id: \"title\",\r\n        type: \"text\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"details\",\r\n        label: \"Event details\",\r\n        id: \"details-input\",\r\n        multiline: true,\r\n        type: \"text\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"date\",\r\n        label: \"Date and time\",\r\n        id: \"date\",\r\n        type: \"date\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"isOnline\",\r\n        label: \"Will it be online?\",\r\n        id: \"is-online\",\r\n        type: \"switch\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"utilLink\",\r\n        label: \"When2meet\",\r\n        id: \"util-link\",\r\n        type: \"text\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"location\",\r\n        conditionalLabel: {\r\n            condition: \"isOnline\",\r\n            correct: \"URL of the event medium\",\r\n            wrong: \"Location of the event\"\r\n        },\r\n        id: \"location\",\r\n        type: \"text\",\r\n        required: true,\r\n    },\r\n];\r\n\r\n\r\nconst initialFormValues = {\r\n    title: null,\r\n    details: null,\r\n    date: new Date(),\r\n    isOnline: false,\r\n    location: null,\r\n    utilLink: null,\r\n}\r\n\r\n\r\nexport function CreateEvent() {\r\n    const classes = useStyles();\r\n\r\n    const [eventCreated, setEventCreated] = useState(false);\r\n\r\n    // We'll update \"values\" as the form updates\r\n    const [values, setValues] = useState(initialFormValues);\r\n    // \"errors\" is used to check the form for errors\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validate = (fieldValues = values) => {\r\n        // this function will check if the form values are valid\r\n        let errorsUpdate = {...errors}\r\n\r\n        const requiredFields = inputFields.filter(input => input.required).map(input => input.name);\r\n\r\n        requiredFields.forEach((name) => {\r\n            if (name in fieldValues)\r\n                errorsUpdate[name] = fieldValues[name] ? \"\" : \"This field is required.\"\r\n        });\r\n\r\n        setErrors({\r\n            ...errorsUpdate\r\n        });\r\n    }\r\n\r\n    const handleInputValue = (e = values) => {\r\n        // this function will be triggered by the text field's onBlur and onChange events\r\n        console.log(\"Input event:\", e);\r\n        const {name, value} = e.target;\r\n        console.log(\"Handle input value:\", name, value);\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n        validate({[name]: value});\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        // this function will be triggered by the submit event\r\n        console.log(\"Creating event:\", values);\r\n        ModeratorService.createEvent(\r\n            values.title,\r\n            values.details,\r\n            values.date.toISOString(),\r\n            values.isOnline === \"true\",\r\n            values.location,\r\n            values.utilLink,\r\n        ).then(response => {\r\n            console.log(\"Event created:\", response);\r\n            setSnackbarSeverity(\"success\");\r\n            setSnackbarMessage(\"Event successfully created!\");\r\n            setSnackbarOpen(true);\r\n            setEventCreated(true);\r\n            delay(2000).then(() => window.location.reload());\r\n        }).catch(error => {\r\n            console.error(\"Error while creating event:\", error);\r\n            setSnackbarSeverity(\"error\");\r\n            setSnackbarMessage(\"Something is wrong. \" + error);\r\n            setSnackbarOpen(true);\r\n        });\r\n    }\r\n\r\n    const formIsValid = (fieldValues = values) => {\r\n        // this function will check if the form values are valid and return a boolean value\r\n\r\n        const requiredFields = inputFields.filter(i => i.required).map(i => i.name);\r\n        console.log(\"Required fields:\", requiredFields);\r\n        console.log(\"Is valid fields:\", fieldValues);\r\n\r\n        let isValid = true;\r\n        requiredFields.forEach((name) => {\r\n            isValid = isValid && (fieldValues[name] !== undefined && fieldValues[name] !== null);\r\n        });\r\n\r\n        isValid = isValid && Object.values(errors).every((x) => x === \"\");\r\n\r\n        console.log(\"Is valid:\", isValid);\r\n\r\n        return isValid;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Values:\", values);\r\n    }, [values]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Errors:\", errors);\r\n    }, [errors]);\r\n\r\n    // Snackbar\r\n    const [openSnackbar, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography className={classes.explanation}>Create an event for your sub-club.</Typography>\r\n            <FormGroup className={classes.form}>\r\n                {inputFields.map((inputField) => {\r\n                    return (\r\n                        (() => {\r\n                            switch (inputField.type) {\r\n                                case \"text\":\r\n                                    return (\r\n                                        <TextField\r\n                                            className={classes.formInput}\r\n                                            key={inputField.id}\r\n                                            onBlur={handleInputValue}\r\n                                            variant={\"filled\"}\r\n                                            onChange={handleInputValue}\r\n                                            required={inputField.required}\r\n                                            disabled={eventCreated}\r\n                                            name={inputField.name}\r\n                                            value={values[inputField.name]}\r\n                                            label={inputField.conditionalLabel === undefined ? inputField.label :\r\n                                                ((values[inputField.conditionalLabel.condition] === \"true\")\r\n                                                    ? inputField.conditionalLabel.correct\r\n                                                    : inputField.conditionalLabel.wrong)\r\n                                            }\r\n                                            multiline={inputField.multiline ?? false}\r\n                                            rows={inputField.rows}\r\n                                            autoComplete=\"none\"\r\n                                            {...(errors[inputField.name] && {\r\n                                                error: true,\r\n                                                helperText: errors[inputField.name]\r\n                                            })}\r\n\r\n                                        />);\r\n                                case \"date\":\r\n                                    return (\r\n                                        <MuiPickersUtilsProvider\r\n                                            utils={DateFnsUtils}\r\n                                            name={inputField.name}\r\n                                            className={classes.formInput}\r\n                                            key={inputField.id}>\r\n                                            <KeyboardDateTimePicker\r\n                                                disableToolbar\r\n                                                format=\"MM.dd.yyyy HH:mm\"\r\n                                                margin=\"normal\"\r\n                                                className={classes.dateInput}\r\n                                                disabled={eventCreated}\r\n                                                id={inputField.id}\r\n                                                name={inputField.name}\r\n                                                label={inputField.label}\r\n                                                required={inputField.required}\r\n                                                value={values[inputField.name]}\r\n                                                inputVariant={\"filled\"}\r\n                                                onChange={(date) => {\r\n                                                    handleInputValue({target: {name: inputField.name, value: date}});\r\n                                                }}\r\n                                                KeyboardButtonProps={{\r\n                                                    'aria-label': 'change date',\r\n                                                }}\r\n                                                {...(errors[inputField.name] && {\r\n                                                    error: true,\r\n                                                    helperText: errors[inputField.name]\r\n                                                })}\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>);\r\n                                case \"switch\":\r\n                                    return (\r\n                                        <Box className={classes.switchInput}>\r\n                                            <FormControlLabel\r\n                                                control={<Switch\r\n                                                    key={inputField.id}\r\n                                                    id={inputField.id}\r\n                                                    name={inputField.name}\r\n                                                    disabled={eventCreated}\r\n                                                    label={inputField.label}\r\n                                                    value={values[inputField.name]}\r\n                                                    onChange={(e) => {\r\n                                                        console.log(\"Switch:\", e.target.checked, typeof e.target.checked);\r\n                                                        e.target.value = e.target.checked;\r\n                                                        handleInputValue(e);\r\n                                                    }}\r\n                                                    color={\"primary\"}\r\n                                                />} label={inputField.label}/>\r\n                                        </Box>\r\n                                    );\r\n                                default:\r\n                                    return null;\r\n                            }\r\n                        })()\r\n                    )\r\n                })}\r\n                <Button\r\n                    className={classes.submitButton}\r\n                    key={\"submit\"}\r\n                    type=\"submit\"\r\n                    variant={\"outlined\"}\r\n                    startIcon={<Event/>}\r\n                    onClick={handleFormSubmit}\r\n                    disabled={!formIsValid() || eventCreated}>\r\n                    CREATE EVENT\r\n                </Button>\r\n            </FormGroup>\r\n            <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Box>\r\n    );\r\n}\r\n","import { Box, Button, Grid, List, ListItem, ListItemIcon, ListItemText, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {ModeratorService} from \"../../service/ModeratorService\";\r\nimport NoResultsFound from \"../common/NoResultsFound\";\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport MemberInfo from \"../admin/MemberInfo\";\r\nimport {delay} from \"../../util/async\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    gridReportInfoContainer: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        display: \"flex\"\r\n    },\r\n    gridHorizontalSection: {\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    dismissBtn : {\r\n        marginTop: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nexport default function DismissList() {\r\n    const classes = useStyles();\r\n\r\n    const [dismissList, setDismissList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        ModeratorService.getDismissList().then(response => {\r\n            \r\n            setDismissList(response.data);\r\n        });\r\n    }, []);\r\n    \r\n    const [selectedMember, setSelectedMember] = useState(null);\r\n\r\n    const handleMemberClick = (e, member) => {\r\n        setSelectedMember(member)\r\n    }\r\n\r\n    const handleDismissClick = () => {\r\n        ModeratorService.dismiss(selectedMember.username).then(response => {\r\n            \r\n            delay(1000).then(e => {\r\n                window.location.reload();\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n        <Grid key={1} item xs={6}>\r\n            <Typography variant=\"h6\" className={classes.title}>List of Dismissible Members</Typography>\r\n            <Paper variant={\"outlined\"} className={classes.paper}>\r\n                <List className={classes.root}>\r\n                    {dismissList === null || dismissList.length === 0 ?\r\n                        <NoResultsFound/> : dismissList.map((member) =>\r\n                            <div>\r\n                                <ListItem\r\n                                    button\r\n                                    key={member.email}\r\n                                    alignItems=\"flex-start\"\r\n                                    onClick={(e) => handleMemberClick(e, member)}>\r\n                                    <ListItemIcon>\r\n                                        <ReportOutlinedIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={`Member Name: ${member.username}`}\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body2\"\r\n                                                    className={classes.inline}\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                </Typography>\r\n                                                You can dismiss this member.\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                            </div>\r\n                        )}\r\n                </List>\r\n            </Paper>\r\n        </Grid>\r\n        <Grid className={classes.gridReportInfoContainer} key={2} container xs={6}>\r\n            {selectedMember ?\r\n                <Box>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\" className={classes.title}>Selected Member</Typography>\r\n                        <Box>\r\n                            {selectedMember ? <MemberInfo info={selectedMember}/> : null}\r\n                        </Box>\r\n                        <Button className={classes.dismissBtn} variant=\"outlined\" onClick={handleDismissClick}>Dismiss </Button>\r\n                    </Grid>\r\n                </Box>\r\n            : <Typography className={classes.title}>Select a member to see the details.</Typography>}\r\n        </Grid>\r\n\r\n    </Grid>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {FormControlLabel, FormGroup,  Switch, TextField, Typography} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider,} from '@material-ui/pickers';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"date-fns\"; // DO NOT REMOVE, OR YOU WILL BE DOOMED!\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {ModeratorService} from \"../../service/ModeratorService\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DeleteForever,  Update} from \"@material-ui/icons\";\r\nimport {delay} from \"../../util/async\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    explanation: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    formInput: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    switchInput: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    dateInput: {\r\n        marginTop: 0,\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n    },\r\n    submitButton: {\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst initialFormValues = {\r\n    id: -1,\r\n    title: null,\r\n    details: null,\r\n    date: new Date(),\r\n    isOnline: false,\r\n    location: null,\r\n    utilLink: null,\r\n}\r\n\r\n\r\nexport function ManageEvent() {\r\n    const classes = useStyles();\r\n\r\n    const [events, setEvents] = useState([initialFormValues]);\r\n    const [selectedEvent, setSelectedEvent] = useState(initialFormValues);\r\n    const [eventChanged, setEventChanged] = useState(false);\r\n\r\n\r\n    useEffect(()=> {\r\n        ModeratorService.getEvents().then(response => {\r\n            setEvents(response.data);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Box>\r\n            <Typography className={classes.explanation}>Edit this event for your sub-club.</Typography>\r\n\r\n            <FormControl className={classes.form} variant=\"filled\">\r\n                <InputLabel >Select an event to edit</InputLabel>\r\n                <Select className={classes.formInput}\r\n                    value={selectedEvent ?  selectedEvent.id : -1}\r\n                    onChange={(e) => {\r\n                        let id = e.target.value;\r\n                        if (id !== -1) {\r\n                            setSelectedEvent(events.find(e => e.id === id));\r\n                            console.log(selectedEvent);\r\n                        }else {\r\n                            setSelectedEvent(initialFormValues);\r\n                        }\r\n                    }}\r\n                >\r\n                    <MenuItem key ={-1} value={-1}>\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n\r\n                    {events.map((event) => (\r\n                        <MenuItem key={event ? event.id : -1} filled value={event ? event.id : -1}>{event.title}</MenuItem>\r\n                    ))}\r\n\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {selectedEvent.id === -1 ? null : \r\n                <FormGroup className={classes.form}>\r\n\r\n                    <TextField\r\n                        className={classes.formInput}\r\n                        key=\"event title\"\r\n                        required\r\n                        variant={\"filled\"}\r\n                        onChange={(e) => {\r\n                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                            eventCopy.title = e.target.value;\r\n                            setSelectedEvent(eventCopy);\r\n                        }}\r\n                        disabled={eventChanged}\r\n                        value ={selectedEvent.title}\r\n                        label = \"Event title\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className={classes.formInput}\r\n                        key=\"event details\"\r\n                        required\r\n                        variant={\"filled\"}\r\n                        disabled={eventChanged}\r\n                        onChange={(e) => {\r\n                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                            eventCopy.details = e.target.value;\r\n                            setSelectedEvent(eventCopy);\r\n                        }}\r\n                        value ={selectedEvent.details}\r\n                        label = \"Event details\"\r\n\r\n                    />\r\n\r\n                    <MuiPickersUtilsProvider\r\n                        utils={DateFnsUtils}\r\n                        \r\n                        className={classes.formInput}\r\n                        key=\"{inputField.id}\">\r\n                        <KeyboardDateTimePicker\r\n                            className={classes.dateInput}\r\n                            disableToolbar\r\n                            required\r\n                            inputVariant={\"filled\"}\r\n                            format=\"MM.dd.yyyy HH:mm\"\r\n                            margin=\"normal\"\r\n                            name=\"{inputField.name}\"\r\n                            label=\"Date and time\"\r\n                            value={selectedEvent.date}\r\n                            disabled={eventChanged}\r\n                            onChange={(date) => {\r\n                                let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                                eventCopy.date = date;\r\n                                setSelectedEvent(eventCopy);\r\n                            }}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n\r\n                    <Box className={classes.switchInput}>\r\n                        <FormControlLabel\r\n                            control={<Switch\r\n                                        key=\"{inputField.id}\"\r\n                                        name=\"{inputField.name}\"\r\n                                        label=\"Will it be online?\"\r\n                                        color={\"primary\"}\r\n                                        disabled={eventChanged}\r\n                                        onChange={(e) => {\r\n                                            e.target.value = e.target.checked;\r\n                                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                                            eventCopy.isOnline = e.target.value;\r\n                                            setSelectedEvent(eventCopy);\r\n                                        }}\r\n                            />} label=\"Will it be online?\"/>\r\n                    </Box>\r\n\r\n                    <TextField\r\n                        className={classes.formInput}\r\n                        key=\"event location\"\r\n                        required\r\n                        variant={\"filled\"}\r\n                        disabled={eventChanged}\r\n                        onChange={(e) => {\r\n                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent))\r\n                            eventCopy.location = e.target.value;\r\n                            setSelectedEvent(eventCopy);\r\n                        }}\r\n                        value ={selectedEvent.location}\r\n                        label = \"Location of event\"\r\n\r\n                    />\r\n\r\n                    <TextField\r\n                        className={classes.formInput}\r\n                        key=\"event util link\"\r\n                        required\r\n                        variant={\"filled\"}\r\n                        disabled={eventChanged}\r\n                        onChange={(e) => {\r\n                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent))\r\n                            eventCopy.utilLink = e.target.value;\r\n                            setSelectedEvent(eventCopy);\r\n                        }}\r\n                        value ={selectedEvent.utilLink}\r\n                        label = \"When2meet\"\r\n\r\n                    />\r\n\r\n                    <Button\r\n                        className={classes.submitButton}\r\n                        key={\"submit\"}\r\n                        type=\"submit\"\r\n                        variant={\"outlined\"}\r\n                        disabled={eventChanged}\r\n                        startIcon={<Update/>}\r\n                        onClick={() =>{\r\n                            console.log(\"event will be: \", selectedEvent);\r\n                            ModeratorService.updateEvent(selectedEvent).then(response => {\r\n                                console.log(\"Successfully updated:\", response.data);\r\n                                setEventChanged(true);\r\n                                delay(2000).then(() => window.location.reload());\r\n                            })\r\n                        }}\r\n                        >\r\n                        EDIT EVENT\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.submitButton}\r\n                        key={\"delete\"}\r\n                        type=\"submit\"\r\n                        variant={\"outlined\"}\r\n                        disabled={eventChanged}\r\n                        startIcon={<DeleteForever/>}\r\n                        onClick={() =>{\r\n                            ModeratorService.deleteEvent(selectedEvent.id).then(response => {\r\n                                console.log(\"Successfully deleted:\", response.data);\r\n                                setEventChanged(true);\r\n                                delay(2000).then(() => window.location.reload());\r\n                            })\r\n                        }}\r\n                        \r\n                        >\r\n                        DELETE EVENT\r\n                    </Button>\r\n\r\n                </FormGroup>\r\n\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {AdminService} from '../../service/AdminService';\r\nimport {ModeratorService} from '../../service/ModeratorService';\r\nimport {PostFeedItem} from \"../post/PostFeedItem\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {PostService} from \"../../service/PostService\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MemberInfo from \"../admin/MemberInfo\";\r\nimport NoResultsFound from \"../common/NoResultsFound\";\r\nimport {delay} from \"../../util/async\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    gridReportInfoContainer: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        display: \"flex\"\r\n    },\r\n    gridHorizontalSection: {\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport function ReportedPosts() {\r\n    const classes = useStyles();\r\n\r\n    const [postReports, setPostReports] = useState(null);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [selectedReport, setSelectedReport] = useState(null);\r\n    const [selectedPostOwner, setSelectedPostOwner] = useState({});\r\n\r\n\r\n    // Get Reports\r\n    useEffect(() => {\r\n        ModeratorService.getPostReports().then(response => {\r\n            setPostReports(response.data);\r\n        });\r\n    }, [selectedReport]);\r\n\r\n    const handleReportClick = (e, report) => {\r\n        setSelectedReport(report);\r\n        PostService.getPostById(report.postId).then(response => {\r\n            setSelectedPost(response.data);\r\n            AdminService.searchMembersByName(response.data.author, 0, 1).then(response => {\r\n                setSelectedPostOwner(response.data[0]);\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid key={1} item xs={4}>\r\n                <Typography variant=\"h6\" className={classes.title}>List of Reports</Typography>\r\n                <Paper variant={\"outlined\"} className={classes.paper}>\r\n                    <List className={classes.root}>\r\n                        {postReports === null || postReports.length === 0 ?\r\n                            <NoResultsFound/> : postReports.map((report) =>\r\n                                <div>\r\n                                    <ListItem\r\n                                        button\r\n                                        key={report.postId}\r\n                                        selected={selectedPost && report.postId === selectedPost.id}\r\n                                        alignItems=\"flex-start\"\r\n                                        onClick={(e) => handleReportClick(e, report)}>\r\n                                        <ListItemIcon>\r\n                                            <ReportOutlinedIcon/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`Reported by: ${report.author}`}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {`Reason: `}\r\n                                                    </Typography>\r\n                                                    {report.content}\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                </div>\r\n                            )}\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n            <Grid className={classes.gridReportInfoContainer} key={2} container xs={8}>\r\n                {selectedPost ?\r\n                    <Box>\r\n\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" className={classes.title}>Reported Post</Typography>\r\n                            <Box>\r\n                                {selectedPost ? <PostFeedItem key={selectedPost.postId} props={selectedPost}/> : null}\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container>\r\n                            <Grid item key={1} xs={6} className={classes.gridHorizontalSection}>\r\n                                <Typography variant=\"h6\" className={classes.title}>Author Information</Typography>\r\n                                {selectedPostOwner ? <MemberInfo info={selectedPostOwner}/> : null}\r\n                            </Grid>\r\n\r\n                            <Grid item key={2} xs={6} className={classes.gridHorizontalSection}>\r\n                                <Typography variant=\"h6\" className={classes.title}>Actions</Typography>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item key={1} className={classes.button}>\r\n                                        <Button variant=\"outlined\" onClick={() => {\r\n                                            ModeratorService.ban(selectedPostOwner.username, selectedPost.parentName, \"no-reason\").then(response => {\r\n\r\n                                                ModeratorService.deletePost(selectedPost.id).then(response => {\r\n                                                    console.log(\"DELETE POST\", response.data);\r\n                                                    setSelectedReport(null);\r\n                                                    setSelectedPost(null);\r\n                                                    delay(1000).then(e => {\r\n                                                        window.location.reload();\r\n                                                    });\r\n                                                   \r\n                                                })\r\n                                            })\r\n                                        }}>Ban Member</Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item key={2} className={classes.button}>\r\n                                        <Button variant=\"outlined\" onClick={() => {\r\n                                            ModeratorService.deleteReport(selectedReport.id).then(response => {\r\n                                                console.log(\"DELETE REPORT\", response.data);\r\n                                                setSelectedReport(null);\r\n                                                setSelectedPost(null);\r\n                                                setSelectedPostOwner(null);\r\n                                            })\r\n                                        }}>Delete Report</Button>\r\n                                    </Grid>\r\n                                    <Grid item key={3} className={classes.button}>\r\n                                        <Button variant=\"outlined\" onClick={() => {\r\n                                            ModeratorService.deletePost(selectedPost.id).then(response => {\r\n                                                console.log(\"DELETE POST\", response.data);\r\n                                                setSelectedReport(null);\r\n                                                setSelectedPost(null);\r\n                                            })\r\n                                        }}>Delete Post</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                    </Box>\r\n                    : <Typography className={classes.title}>Select a report to see the details.</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import {Route, Switch} from \"react-router-dom\";\r\nimport {CreateEvent} from \"../component/mod/CreateEvent\";\r\nimport DismissList from \"../component/mod/DismissList\";\r\nimport {ManageEvent} from \"../component/mod/ManageEvent\";\r\nimport {ReportedPosts} from \"../component/mod/ReportedPosts\";\r\n\r\nexport default function ModeratorPanelSwitch() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/mod/create-event\">\r\n                <CreateEvent/>\r\n            </Route>\r\n            <Route path=\"/mod/manage-event\">\r\n                <ManageEvent/>\r\n            </Route>\r\n            <Route path=\"/mod/reported-posts\">\r\n                <ReportedPosts/>\r\n            </Route>\r\n            <Route path=\"/mod/dismiss\">\r\n                <DismissList/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Divider, Typography} from \"@material-ui/core\";\r\nimport CoSpaceTreeViewMenu from \"../component/common/CoSpaceTreeViewMenu\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SupervisorAccount} from \"@material-ui/icons\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst modMenu = [\r\n    {\r\n        text: \"Events\",\r\n        children: [\r\n            {\r\n                text: \"Create event\",\r\n                path: \"/mod/create-event\"\r\n            },\r\n            {\r\n                text: \"Manage event\",\r\n                path: \"/mod/manage-event\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        text: \"Reports\",\r\n        children: [\r\n            {\r\n                text: \"Reported posts\",\r\n                path: \"/mod/reported-posts\"\r\n            },\r\n            {\r\n                text: \"Dismiss list\",\r\n                path: \"/mod/dismiss\"\r\n            },\r\n        ]\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    gridLeftColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(0),\r\n    },\r\n    gridRightColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\n\r\nfunction ModeratorPanelLayout({children}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n    const onItemClick = (item) => {\r\n        console.log(item);\r\n        console.log(item.path);\r\n        history.push(item.path);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container className={classes.root}>\r\n\r\n            <Grid item xs={3} className={classes.gridLeftColumnBox}>\r\n                <Box>\r\n                    {/*<Typography variant=\"h4\">Menu</Typography>*/}\r\n                    {/*<Divider className={classes.divider}/>*/}\r\n                    <CoSpaceTreeViewMenu title={\"Menu\"}\r\n                                         titleIcon={<SupervisorAccount/>}\r\n                                         menuItems={modMenu}\r\n                                         defaultExpanded={modMenu.map(menuItem => menuItem.text)}\r\n                                         callbackOnTreeItemClick={onItemClick}/>\r\n                </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={9} className={classes.gridRightColumnBox}>\r\n                <Typography variant=\"h4\">Moderator Panel</Typography>\r\n                <Divider className={classes.divider}/>\r\n                <Grid item xs={12}>\r\n                    {children}\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default ModeratorPanelLayout;","import React from \"react\";\r\nimport ModeratorPanelSwitch from \"../router/ModeratorPanelSwitch\";\r\nimport ModeratorPanelLayout from \"../layout/ModeratorPanelLayout\";\r\n\r\nfunction ModeratorPage() {\r\n    return (\r\n        <ModeratorPanelLayout>\r\n            <ModeratorPanelSwitch/>\r\n        </ModeratorPanelLayout>\r\n    );\r\n}\r\n\r\nexport default ModeratorPage;","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, IconButton, Typography } from \"@material-ui/core\";\r\nimport { MoreVertOutlined } from \"@material-ui/icons\";\r\nimport {formatDistance} from \"date-fns\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: (review) => {\r\n            if (review.rating === 5) {\r\n                return \"#57bb8a\";\r\n            }\r\n            if (review.rating === 4) {\r\n                return \"#9ace6a\";\r\n            }\r\n            if (review.rating === 3) {\r\n                return \"#ffcf02\";\r\n            }\r\n            if (review.rating === 2) {\r\n                return \"#ff9f02\";\r\n            }\r\n            if (review.rating === 1) {\r\n                return \"#ff6f31\";\r\n            }\r\n            return \"#ffffff\";\r\n            \r\n        }\r\n    },\r\n})\r\n\r\nexport default function ReviewCard({review}) {\r\n\r\n    const classes = useStyles(review);\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar className={classes.avatar}>\r\n                            {review.rating}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton>\r\n                            <MoreVertOutlined/>\r\n                        </IconButton>\r\n                    }\r\n                    title={review.author}\r\n                    subheader ={formatDistance(new Date(review.created), new Date())}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant = \"body\" color=\"textSecondary\">\r\n                        {review.content}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport {headersWithToken} from \"./headers\";\r\nimport {BASE_URL,SUB_CLUB,\r\n        REVIEWS, REVIEW} from \"../api_config\";\r\n\r\n\r\n\r\n        \r\nconst getReviews = (subClubName) => {\r\n    return axios.get(BASE_URL + SUB_CLUB + REVIEWS, headersWithToken({subClubName: subClubName}));\r\n}\r\n\r\n\r\n\r\nconst makeReview = (subClubName, content, rating, authorName) => {\r\n    let body = {\r\n        content: content,\r\n        rating: rating,\r\n        author: authorName,\r\n        parentName: subClubName,\r\n    };\r\n    console.log(BASE_URL + SUB_CLUB + REVIEW, body, headersWithToken({subClubName: subClubName}));\r\n    return axios.post(BASE_URL + SUB_CLUB + REVIEW, body, headersWithToken({subClubName: subClubName}));\r\n}\r\n\r\n\r\nexport const ReviewService = {getReviews, makeReview}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Box, Button, Dialog, DialogTitle, TextField, Typography} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport AboutFeed from \"../AboutFeed\";\r\nimport RateReviewOutlinedIcon from '@material-ui/icons/RateReviewOutlined';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport {Stack} from '@devexpress/dx-react-chart';\r\nimport {ReviewService} from \"../../service/ReviewService\";\r\nimport {BarSeries, Chart, ValueAxis,} from '@devexpress/dx-react-chart-material-ui';\r\nimport {useHistory} from \"react-router\";\r\nimport {delay} from \"../../util/async\";\r\nimport {ClubService} from \"../../service/ClubService\";\r\nimport {AuthService} from \"../../service/AuthService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3)\r\n    },\r\n    ratingStars: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    dialogTextField: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    numReviewsText: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    }\r\n\r\n}))\r\n\r\n\r\nexport default function SummaryCard({subClubName, reviews}) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [hover, setHover] = useState(-1);\r\n    const [subClubInfo, setSubClubInfo] = useState(null);\r\n\r\n    useEffect(() => {\r\n        ClubService.getSubClubs().then(subClubs => {\r\n            const subClub = subClubs.data.filter(subClub => subClub.name === subClubName)[0];\r\n            ClubService.getSubClubStatistics(subClub.name).then(subClubStats => {\r\n                subClub.numberOfMembers = subClubStats.data.numberOfMembers;\r\n                subClub.numberOfPostsInLastWeek = subClubStats.data.numberOfPostsInTimeFrame;\r\n                setSubClubInfo(subClub);\r\n            });\r\n        });\r\n    }, [subClubName]);\r\n\r\n    const labels = {\r\n        1: 'Useless',\r\n        2: 'Lots of bad posts',\r\n        3: 'OK',\r\n        4: 'Good place to hang out',\r\n        5: 'Excellent people and quality',\r\n    };\r\n\r\n\r\n    const handleDialogClose = (event) => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n\r\n    const onClickSubmit = (event) => {\r\n\r\n        ReviewService.makeReview(\r\n            subClubName,\r\n            inputContent,\r\n            inputRating,\r\n            AuthService.getUsername()).then(response => {\r\n            console.log(\"RESPONSE\", response.data);\r\n            setOpenDialog(false);\r\n\r\n            delay(1000).then(() => window.location.reload());\r\n\r\n        });\r\n    }\r\n    const onContentChange = (event) => {\r\n        setInputContent(event.target.value);\r\n    }\r\n\r\n    const [inputRating, setInputRating] = React.useState(3);\r\n    const [inputContent, setInputContent] = useState(\"\");\r\n\r\n\r\n    let totalRating = 0;\r\n    let rateStructure = {\r\n        state: '+1',\r\n        one: 0,\r\n        two: 0,\r\n        three: 0,\r\n        four: 0,\r\n        five: 0\r\n    }\r\n    for (let i = 0; i < reviews.length; i++) {\r\n        totalRating += reviews[i].rating;\r\n        if (reviews[i].rating === 1) {\r\n            rateStructure.one += 1;\r\n        } else if (reviews[i].rating === 2) {\r\n            rateStructure.two += 1;\r\n        } else if (reviews[i].rating === 3) {\r\n            rateStructure.three += 1;\r\n        } else if (reviews[i].rating === 4) {\r\n            rateStructure.four += 1;\r\n        } else if (reviews[i].rating === 5) {\r\n            rateStructure.five += 1;\r\n        }\r\n    }\r\n\r\n    rateStructure.one = rateStructure.one / totalRating;\r\n    rateStructure.two = rateStructure.two / totalRating;\r\n    rateStructure.three = rateStructure.three / totalRating;\r\n    rateStructure.four = rateStructure.four / totalRating;\r\n    rateStructure.five = rateStructure.five / totalRating;\r\n\r\n    return (subClubInfo ?\r\n        <div>\r\n            <Paper>\r\n                <Container className={classes.root}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid key=\"1\" item xs={4}>\r\n                            <Typography color=\"textSecondary\" variant=\"h2\"\r\n                                        align=\"left\">{(totalRating / reviews.length).toPrecision(3)}</Typography>\r\n                            <Rating value={(totalRating / reviews.length).toPrecision(3)} readOnly/>\r\n\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <PermIdentityOutlinedIcon className={classes.numReviewsText}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography className={classes.numReviewsText} color=\"textSecondary\" variant=\"body1\">\r\n                                        {reviews.length} total\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Box>\r\n                                <Button size=\"medium\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        startIcon={<RateReviewOutlinedIcon/>}\r\n                                        onClick={() => {\r\n                                            setOpenDialog(true);\r\n                                        }}\r\n                                        fullWidth\r\n                                        disableElevation>Write a Review\r\n                                </Button>\r\n                            </Box>\r\n\r\n\r\n                        </Grid>\r\n                        <Grid key=\"3\" item xs={4}>\r\n                            <Paper>\r\n                                <Chart data={[rateStructure]} rotated height=\"250\">\r\n\r\n                                    <ValueAxis/>\r\n                                    <BarSeries\r\n                                        valueField=\"five\"\r\n                                        argumentField=\"state\"\r\n\r\n                                        color=\"#57bb8a\"\r\n                                    />\r\n\r\n                                    <BarSeries\r\n                                        valueField=\"four\"\r\n                                        argumentField=\"state\"\r\n                                        color=\"#9ace6a\"\r\n\r\n                                    />\r\n                                    <BarSeries\r\n                                        valueField=\"three\"\r\n                                        argumentField=\"state\"\r\n                                        color=\"#ffcf02\"\r\n                                    />\r\n\r\n                                    <BarSeries\r\n                                        valueField=\"two\"\r\n                                        argumentField=\"state\"\r\n                                        color=\"#ff9f02\"\r\n                                    />\r\n\r\n                                    <BarSeries\r\n                                        valueField=\"one\"\r\n                                        argumentField=\"state\"\r\n                                        color=\"#ff6f31\"\r\n                                    />\r\n                                    <Stack/>\r\n                                </Chart>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid key=\"2\" item xs={4}>\r\n                            <AboutFeed feedInfo={subClubInfo}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Dialog open={openDialog} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\"\r\n                    fullWidth={true} maxWidth={\"md\"}>\r\n\r\n                <DialogTitle id=\"form-dialog-title\">Meta / {subClubInfo.name}</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className={classes.ratingStars}>\r\n\r\n                        <Rating\r\n                            required\r\n                            value={inputRating}\r\n                            onChange={(event, newValue) => {\r\n                                setInputRating(newValue);\r\n                            }}\r\n                            onChangeActive={(event, newHover) => {\r\n                                setHover(newHover);\r\n                            }}\r\n                        />\r\n                        {inputRating !== null && <Box ml={2}>{labels[hover !== -1 ? hover : inputRating]}</Box>}\r\n                    </div>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        required\r\n                        multiline\r\n                        className={classes.dialogTextField}\r\n                        label=\"Your opinions\"\r\n                        rows={5}\r\n                        variant=\"filled\"\r\n                        type=\"input\"\r\n                        onChange={onContentChange}\r\n                        fullWidth\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={handleDialogClose}\r\n                        color=\"primary\">\r\n                        Exit\r\n                    </Button>\r\n                    <Button\r\n                        onClick={onClickSubmit}\r\n\r\n                        color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div> : <div/>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ReviewCard from \"../component/meta/ReviewCard\";\r\nimport SummaryCard from \"../component/meta/SummaryCard\";\r\nimport Masonry from \"react-masonry-css\"\r\nimport { ReviewService } from \"../service/ReviewService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    summaryContainer: {\r\n        paddingTop: theme.spacing(3),\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function MetaPanelPage() {\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    const subClubName = params.subClubName;\r\n\r\n  \r\n\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        ReviewService.getReviews(subClubName).then(response => {\r\n            console.log(\"get reviews\", response.data);\r\n            setReviews(response.data);\r\n        });\r\n    }, [subClubName])\r\n\r\n    return (\r\n        \r\n        <Container>\r\n\r\n            <Container className={classes.summaryContainer}>\r\n                <SummaryCard subClubName = {subClubName} reviews={reviews}/>\r\n            </Container>\r\n        \r\n\r\n            <Container>\r\n                <Masonry\r\n                    breakpointCols={3}\r\n                    className=\"my-masonry-grid\"\r\n                    columnClassName=\"my-masonry-grid_column\"\r\n                >\r\n                    {reviews.map(review => (\r\n                        <div key={review.author}>\r\n                            <ReviewCard review={review}/>\r\n                        </div>       \r\n                    ))}    \r\n                </Masonry>\r\n            </Container>\r\n\r\n        </Container>\r\n    )\r\n}","import axios from 'axios';\r\nimport {BASE_URL, SEARCH} from \"../api_config.js\";\r\n\r\n\r\nconst search = (query, page = 0, size = 5) => {\r\n    return axios.get(BASE_URL + SEARCH, {\r\n        params: {\r\n            query: query,\r\n            page: page,\r\n            size: size\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const SearchService = {search};","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {Avatar, Box, ListItem, ListItemAvatar, ListItemText, Paper, Typography} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PostFeed from \"../component/post/PostFeed\";\r\nimport {SearchService} from \"../service/SearchService\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {Person} from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport NoResultsFound from \"../component/common/NoResultsFound\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: \"5%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    gridContainer: {},\r\n    gridItem: {\r\n        maxHeight: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    gridLeftColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(2.5),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n    gridMiddleColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    gridRightColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(0),\r\n        marginRight: theme.spacing(2.5),\r\n    },\r\n    sectionBox: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n    usernameContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SearchResultsPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    const [searchResults, setSearchResults] = useState({\r\n        posts: [],\r\n        clubs: [],\r\n        subClubs: [],\r\n        members: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        SearchService.search(params.query.trim()).then(r => {\r\n            setSearchResults(r.data);\r\n        });\r\n    }, [params]);\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} className={classes.gridContainer}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridLeftColumnBox}>\r\n                        {/* Left empty */}\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.gridItem}>\r\n                    <Box className={classes.gridMiddleColumnBox}>\r\n                        <Typography className={classes.title} variant={\"h4\"}>Clubs & Sub-clubs</Typography>\r\n                        <Divider className={classes.divider}/>\r\n                        <Paper variant={\"outlined\"}>\r\n                            <List>\r\n                                {searchResults.clubs.length === 0 || searchResults.subClubs.length === 0 ?\r\n                                    <NoResultsFound/>\r\n                                    : searchResults.clubs.slice(0, 2).map(club =>\r\n                                        <ListItem button\r\n                                                  key={club.name}\r\n                                                  onClick={() => history.push(`/feed/${club.name}`)}>\r\n                                            <ListItemAvatar className={classes.avatarContainer}>\r\n                                                <Avatar className={classes.avatar}>{club.name[0].toUpperCase()}</Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={club.name} secondary={\"Club\"}/>\r\n                                        </ListItem>)}\r\n                                {searchResults.subClubs.slice(0, 3).map(subClub =>\r\n                                    <ListItem\r\n                                        onClick={() => history.push(`/feed/${subClub.name}`)} key={subClub.name}>\r\n                                        <ListItemAvatar className={classes.avatarContainer}>\r\n                                            <Avatar className={classes.avatar}>{subClub.name[0].toUpperCase()}</Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={subClub.name}\r\n                                                      secondary={`Sub-club of ${subClub.parentName}`}/>\r\n                                    </ListItem>)}\r\n                            </List>\r\n                        </Paper>\r\n\r\n                        <Typography className={classes.title} variant={\"h4\"}>Members</Typography>\r\n                        <Divider className={classes.divider}/>\r\n                        <Paper variant={\"outlined\"}>\r\n                            <List>\r\n                                {searchResults.members.length === 0 ? <NoResultsFound/>\r\n                                    : searchResults.members.map(member =>\r\n                                        <ListItem\r\n                                            button\r\n                                            key={member.username}\r\n                                            onClick={() => history.push(`/profile/${member.username}`)}>\r\n                                            <ListItemAvatar className={classes.avatarContainer}>\r\n                                                <Avatar className={classes.avatar}><Person/></Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText>\r\n                                                {member.username}\r\n                                            </ListItemText>\r\n                                        </ListItem>)}\r\n                            </List>\r\n                        </Paper>\r\n\r\n                        <Typography className={classes.title} variant={\"h4\"}>Posts</Typography>\r\n                        <Divider className={classes.divider}/>\r\n                        <Box>\r\n                            {searchResults.posts.length === 0 ? <NoResultsFound/> :\r\n                                <PostFeed posts={searchResults.posts}/>}\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridRightColumnBox}>\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Divider, Grid, Typography, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ClubService} from \"../service/ClubService\";\r\nimport Questionnaire from \"../component/questionnaire/Questionnaire\";\r\nimport { MemberService } from \"../service/MemberService\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    gridRightColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5),\r\n    },\r\n    submitButton: {\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(5)\r\n\r\n    },\r\n}));\r\n\r\nfunction PostSubmit({enrolledSubClubs}) {\r\n    const [open, setOpen] = useState(true);\r\n    const history = useHistory();\r\n    return (\r\n        <Dialog open={open} onClose={() => {setOpen(false)}} aria-labelledby=\"form-dialog-title\" maxWidth={\"md\"}>\r\n\r\n        <DialogTitle id=\"form-dialog-title\">Recommended Sub-clubs</DialogTitle>\r\n        <DialogContent> \r\n            <Box margin=\"10px\">\r\n                {enrolledSubClubs.map(sc => {\r\n                    return (<h3>{sc}</h3>)\r\n                })}\r\n            </Box>\r\n\r\n                \r\n        </DialogContent>\r\n        <DialogActions>\r\n                    <Button \r\n                        onClick={(event) => {history.push(\"/\")}}\r\n                        color=\"primary\">\r\n                        Go to Feed\r\n                    </Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n\r\n    )\r\n}\r\n\r\nfunction SubClubRecommend() {\r\n    const classes = useStyles();\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const [givenAnswers, setGivenAnswers] = useState([]);\r\n    const [enrolledSubs, setEnrolledSubs] = useState([]);\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        ClubService.getRandomQuestionnaire().then((response) => {\r\n            setQuestions(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const handleSubmit = () => {\r\n        MemberService.bulkEnrollment(givenAnswers).then((response) => {\r\n            let enrollments_list = response.data.split(\"[\")[1]\r\n            enrollments_list = enrollments_list.split(\"]\")[0].split(\", \")\r\n            setEnrolledSubs(enrollments_list)\r\n            setSubmitted(true)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} className={classes.gridRightColumnBox}>\r\n                <Typography variant=\"h4\">Sub-club Recommendation Form</Typography>\r\n                <Divider className={classes.divider}/>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n\r\n\r\n                {(questions.length !== 0) && (<Questionnaire questions={questions} callBackOnAnswer={setGivenAnswers}/>)}\r\n\r\n                <Button className={classes.submitButton}\r\n                        size=\"medium\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                            handleSubmit()\r\n                        }}\r\n                        fullWidth\r\n                        disableElevation>SUBMIT\r\n                </Button>\r\n\r\n                {(submitted) && (<PostSubmit enrolledSubClubs={enrolledSubs}></PostSubmit>)}\r\n\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SubClubRecommend;","import {Route, Switch} from \"react-router-dom\";\r\nimport PostFeed from \"../component/post/PostFeed\";\r\nimport HomePage from \"../page/HomePage\";\r\nimport React from \"react\";\r\n\r\nexport default function HomePageSwitch() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/feed/:feedName/:sort?/:page?\">\r\n                <HomePage/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport MainLayout from \"../layout/MainLayout\";\r\nimport HomePage from \"../page/HomePage\";\r\nimport AdminPage from \"../page/AdminPage\";\r\nimport ProfilePage from \"../page/ProfilePage\";\r\nimport NotFoundPage from \"../page/NotFoundPage\";\r\nimport SignUpPage from \"../page/SignUpPage\";\r\nimport SignInPage from \"../page/SignInPage\";\r\nimport PasswordResetPage from '../page/PasswordResetPage';\r\nimport PrivateMessagePage from \"../page/PrivateMessagePage\";\r\nimport ModeratorPage from \"../page/ModeratorPage\";\r\nimport MetaPanelPage from \"../page/MetaPanelPage\";\r\nimport SearchResultsPage from \"../page/SearchResultsPage\";\r\nimport SubClubRecommend from \"../page/SubClubRecommend\"\r\nimport HomePageSwitch from \"./HomePageSwitch\";\r\n\r\n\r\nexport default function MainRouter() {\r\n    return (\r\n        <Router>\r\n            <MainLayout>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <HomePage/>\r\n                    </Route>\r\n                    <Route path=\"/feed\">\r\n                        <HomePageSwitch/>\r\n                    </Route>\r\n                    <Route path=\"/admin\">\r\n                        <AdminPage/>\r\n                    </Route>\r\n                    <Route path=\"/profile/:username\">\r\n                        <ProfilePage/>\r\n                    </Route>\r\n                    <Route path=\"/sign-up\">\r\n                        <SignUpPage/>\r\n                    </Route>\r\n                    <Route path=\"/sign-in\">\r\n                        <SignInPage/>\r\n                    </Route>\r\n                    <Route path=\"/subclub-recommendation\">\r\n                        <SubClubRecommend/>\r\n                    </Route>\r\n                    <Route path=\"/password-reset/:token?\">\r\n                        <PasswordResetPage/>\r\n                    </Route>    \r\n                    <Route path=\"/pm\">\r\n                        <PrivateMessagePage/>\r\n                    </Route>\r\n                    <Route path=\"/mod\">\r\n                        <ModeratorPage/>\r\n                    </Route>\r\n                    <Route path=\"/meta/:subClubName\">\r\n                        <MetaPanelPage/>\r\n                    </Route>\r\n                    <Route path=\"/search/:query\">\r\n                        <SearchResultsPage/>\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                        <NotFoundPage/>\r\n                    </Route>\r\n                </Switch>\r\n            </MainLayout>\r\n        </Router>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport MainRouter from \"./router/MainRouter\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nfunction App() {\r\n\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n    const theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme(prefersDarkMode ?\r\n                // A useful theme editor can be found here: https://bareynol.github.io/mui-theme-creator/#\r\n                // For theming, change colors and parameters here.\r\n                {\r\n                    overrides: {\r\n                        MuiAppBar: {\r\n                            colorPrimary: {\r\n                                backgroundColor: \"#171c23\",\r\n                                color: \"#ffffff\"\r\n                            },\r\n                        }\r\n                    },\r\n                    palette: {\r\n                        type: 'dark',\r\n                        primary: {\r\n                            main: '#00e3aa',\r\n                        },\r\n                        secondary: {\r\n                            //main: '#ffffff',\r\n                            main: '#00e3aa',\r\n                        },\r\n                        background: {\r\n                            default: '#12161b',\r\n                            paper: '#1a1f26',\r\n                        },\r\n                        typography: {\r\n                            fontFamily: ['Inter', 'Roboto', 'Arial', 'sans-serif'],\r\n                        },\r\n                    },\r\n                } :\r\n                {\r\n                    overrides: {\r\n                        MuiAppBar: {\r\n                            colorPrimary: {\r\n                                backgroundColor: \"#ffffff\",\r\n                                color: \"#12151a\"\r\n                            },\r\n                        }\r\n                    },\r\n                    palette: {\r\n                        type: 'light',\r\n                        primary: {\r\n                            main: '#00e3aa',\r\n                        },\r\n                        secondary: {\r\n                            //main: '#ffffff',\r\n                            main: '#00e3aa',\r\n                        },\r\n                        background: {\r\n                            default: '#fafafa',\r\n                            paper: '#ffffff',\r\n                        },\r\n                        typography: {\r\n                            fontFamily: ['Inter', 'Roboto', 'Arial', 'sans-serif'],\r\n                        },\r\n                    },\r\n                }),\r\n        [prefersDarkMode],\r\n    );\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n            <MainRouter/>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n// ReactDOM.render(\r\n//     <React.StrictMode>\r\n//         <App/>\r\n//     </React.StrictMode>,\r\n//     document.getElementById('root')\r\n// );\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n    <App/>,\r\n    rootElement\r\n)"],"sourceRoot":""}