{"version":3,"sources":["resource/logo.png","api_config.js","service/headers.js","service/AuthService.js","component/PrimaryAppBar.js","layout/MainLayout.js","service/ClubService.js","service/MemberService.js","component/common/CoSpaceTreeViewMenu.js","component/common/ClubTree.js","component/AboutFeed.js","component/event/EventContainer.js","service/PostService.js","component/CreatePost.js","component/event/EventItem.js","util/redirect.js","layout/QuestionLayout.js","component/questionnaire/Question.js","component/questionnaire/Questionnaire.js","component/EnrollPanel.js","util/async.js","component/RequestSubclub.js","layout/PostFeedLayout.js","component/post/PostFeedItem.js","component/post/PostFeed.js","router/PostFeedSwitch.js","page/HomePage.js","service/AdminService.js","component/common/TitledSection.js","component/admin/MemberInfo.js","component/common/NoResultsFound.js","component/admin/ReportedPosts.js","component/admin/ViewMemberInfo.js","component/questionnaire/CreateQuestion.js","component/questionnaire/CreateQuestionnaire.js","component/admin/ManageClub.js","component/admin/CreateClub.js","router/AdminPanelSwitch.js","layout/AdminPanelLayout.js","page/AdminPage.js","service/PrivateMessagingService.js","component/profile/AboutMember.js","page/ProfilePage.js","page/NotFoundPage.js","component/common/Copyright.js","page/SignUpPage.js","page/SignInPage.js","page/PasswordResetPage.js","component/pm/PrivateMessageUserItem.js","component/pm/PrivateMessageUserItemList.js","component/pm/PrivateMessageFeed.js","page/PrivateMessagePage.js","service/ModeratorService.js","component/mod/CreateEvent.js","component/mod/ManageEvent.js","component/mod/ReportedPosts.js","router/ModeratorPanelSwitch.js","layout/ModeratorPanelLayout.js","page/ModeratorPage.js","component/meta/ReviewCard.js","service/ReviewService.js","component/meta/SummaryCard.js","page/MetaPanelPage.js","service/SearchService.js","page/SearchResultsPage.js","router/MainRouter.js","App.js","index.js"],"names":["BASE_URL","process","REACT_APP_API_BASE_URL","AUTH","SUB_CLUB","SUB_CLUB_STATS","MODERATOR","EVENT","GET_POSTS","REVIEW","MEMBER","ADMIN","REPORTS","DELETE_REPORT","ENROLLED_SUBCLUBS","PRIVATE_MESSAGE","SEARCH","headersWithToken","params","token","AuthService","getJwtToken","headers","saveUsername","username","localStorage","setItem","getAuthRoles","getItem","login","pass","axios","post","password","register","userData","logout","removeItem","loginWithToken","saveJwtToken","hasJwtToken","getUsername","removeUsername","resetPassword","email","changePasswordWithToken","newPassword","isAdmin","saveAuthRoles","roles","useStyles","makeStyles","theme","grow","flexGrow","title","marginLeft","spacing","search","position","borderRadius","shape","backgroundColor","fade","palette","text","primary","width","breakpoints","up","marginRight","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","searchInputRoot","color","searchInput","paddingLeft","transition","transitions","create","logo","maxWidth","appBar","PrimaryAppBar","classes","history","useHistory","useState","searchQuery","setSearchQuery","className","AppBar","variant","Toolbar","src","style","alt","onClick","push","Typography","fontWeight","InputBase","placeholder","root","input","onChange","event","target","value","onKeyUp","key","preventDefault","inputProps","IconButton","Message","toolbar","mixins","MainLayout","props","Box","children","getClubs","get","parseSubClubs","subClubs","a","clubs","tree","data","forEach","club","filter","subClub","parentName","name","ClubService","getSubClubs","getSubClubStatistics","subClubName","startTime","subDays","Date","endTime","start","toISOString","end","getEvents","getSubClubQuestions","subclubName","MemberService","answers","author","eventId","details","body","clubName","divider","marginTop","marginBottom","sectionTitle","sectionBody","sectionRoot","sectionClub","treeViewTitleContainer","flexDirection","treeViewTitleIconContainer","useTreeItemStyles","action","hover","content","secondary","paddingTop","paddingBottom","paddingRight","typography","fontWeightMedium","group","expanded","selected","label","iconContainer","renderTree","node","callback","TreeItem","onLabelClick","nodeId","treeItemText","Array","isArray","map","childNode","CoSpaceTreeViewMenu","titleIcon","menuItems","callbackOnTreeItemClick","expandIcon","collapseIcon","defaultExpanded","defaultSelected","emptyText","treeClasses","undefined","treeItemIcon","PublicOutlined","Paper","Grid","container","item","Divider","TreeView","defaultCollapseIcon","defaultExpandIcon","length","menuItem","index","ClubTree","nameToClubObject","mapNameToToClubObject","console","log","mapToMenuItem","inner","PeopleAltOutlined","feedNameContainer","avatarContainer","avatar","getContrastText","dateCreatedContainer","buttonContainer","button","AboutFeed","feedInfo","Avatar","toUpperCase","isCustom","justify","Container","numberOfMembers","numberOfPostsInLastWeek","created","toLocaleString","navigator","language","year","month","day","moderatorUsername","Button","startIcon","SupervisorAccount","EventContainer","events","PostService","feed","page","size","sort","newPost","message","postId","id","CreatePost","onEditorStateChange","editorState","setState","onTitleChange","titleState","handleClose","resetForm","setOpen","share","state","draftToHtml","convertToRaw","getCurrentContent","subclub","then","result","newPostEvent","EditorState","createEmpty","border_props","borderColor","this","Dialog","open","onClose","aria-labelledby","fullWidth","DialogTitle","DialogContent","TextField","autoFocus","margin","type","border","editorStyle","DialogActions","Component","listItem","listItemText","iconAttended","main","iconUnattended","iconButton","chips","flexWrap","EventItem","attendCallback","ListItem","ListItemAvatar","hasAttended","EventAvailable","Event","ListItemText","Fragment","c","List","component","formatRelative","date","toString","isOnline","Chip","icon","Public","location","includes","url","newWindow","window","opener","openInNewTab","PinDrop","paper","textAlign","question","Answer","xs","sm","md","QuestionLayout","answer1","answer2","answer3","answer4","AnswerButton","answerText","locked","callBack","disableElevation","Question","callBackOnChange","React","setLocked","givenAnswerId","setGivenAnswerId","handleAnswerClick","newGivenAnswerId","temp_locked","useEffect","elevation","questionBox","Questionnaire","questions","callBackOnAnswer","q","groundTruth","givenAnswers","setGivenAnswers","handleQuestionAnswering","question_id","newGivenAnswer","givenAnswerIndex","findIndex","givenAnswer","tempList","quest","QuestionnaireEntrance","PostQuestionnaire","bg_color","result_text","response","setEnrolled","score","direction","EnrollPanel","clickedSubClub","setOpenDialog","onQuestionnaire","setOnQuestionnaire","setQuestions","submitted","setSubmitted","enrollResponse","setEnrollResponse","handleDialogClose","finally","delay","Promise","res","setTimeout","nameValue","setNameValue","detailValue","setDetailValue","nameEmpty","setNameEmpty","required","error","multiline","rowsMax","catch","err","disabled","gridContainer","feedItem","feedTitle","gridItem","maxHeight","overflow","gridLeftColumnBox","gridMiddleColumnBox","gridRightColumnBox","sectionBox","sortingFeedToggleGroup","list","customFeeds","PostFeedLayout","sorting","setSorting","setClubs","enrolledSubClubs","setEnrolledSubClubs","setFeed","setEvents","refreshFeed","doRefresh","postDialogOpen","setPostDialogOpen","enrollDialogOpen","setEnrollDialogOpen","subclubRequestDialogOpen","setSubclubRequestDialogOpen","numberOfPostsInTimeFrame","slice","reverse","customFeed","splice","attendedEventsResponse","allEvents","anAttendedEventOfMember","replace","modRequestDialogOpen","setModRequestDialogOpen","modRequestResponse","setModRequestResponse","isEnrolled","ToggleButtonGroup","exclusive","aria-label","ToggleButton","Whatshot","FiberNew","TrendingUp","Edit","aux","Add","status","postCreated","media","expand","transform","duration","shortest","expandOpen","cursor","voteLabel","postCardContent","contentBox","contentTypography","PostFeedItem","voting","vote","setVote","openSnackbar","setSnackbarOpen","severity","setSnackbarSeverity","snackbarMessage","setSnackbarMessage","handleSnackbarClose","reason","postMenuAnchorElement","setPostMenuAnchorElement","Boolean","reportDialogOpen","setReportDialogOpen","reportMessage","setReportMessage","handleReportDialogClose","handleAuthorClick","Card","CardHeader","charAt","CardActions","currentTarget","Menu","anchorEl","keepMounted","MenuItem","subheader","formatDistance","parseISO","addSuffix","CardContent","e","gutterBottom","parse","DialogContentText","r","Snackbar","autoHideDuration","Alert","PostFeed","preloadedPosts","useParams","feedName","postsInFeed","setPostsInFeed","PostFeedSwitch","path","HomePage","AdminService","query","put","clubDetails","subClubId","reportId","titleContainer","titleIconContainer","TitledSection","MemberInfo","info","flattened","flatten","Person","Object","keys","NoResultsFound","InfoOutlined","inline","gridReportInfoContainer","gridHorizontalSection","ReportedPosts","postReports","setPostReports","selectedPost","setSelectedPost","selectedReport","setSelectedReport","selectedPostOwner","setSelectedPostOwner","report","handleReportClick","ListItemIcon","postFeedItemWrapper","form","memberInfo","ViewMemberInfo","members","setMembers","selectedMember","setSelectedMember","FormControl","Autocomplete","onInput","v","options","getOptionLabel","option","renderInput","radioGroup","radioButton","QuestionTextField","choices","CreateQuestion","callBackOnSave","qid","questionObject","setQuestion","id2Field","Map","set","radioValue","setRadioValue","onTextFieldChange","updatingField","tempObj","FormLabel","RadioGroup","FormControlLabel","control","Radio","CreateQuestionnaire","onSubmitTrigger","callBackQuestions","oldQuestions","questionNum","setQuestinNum","saveQuestionObj","questionObj","isQuestionValid","templist","newlist","concat","i","formControl","minWidth","selectEmpty","listStyle","chip","tagText","ManageClub","isVisible","setIsVisible","useTheme","fullScreen","useMediaQuery","down","openQuestionnaireDialog","setQuestionnaireDialog","submitQuestionnaireTrigger","setSubmitQuestionnaireTrigger","handleClickCloseQuestionnaireDialog","setSubClubs","selectedClubRequestName","setSelectedClubRequestName","rating","selectedClub","setSelectedClub","InputLabel","Select","FormHelperText","InputLabelProps","shrink","selectedClubCopy","JSON","stringify","helperText","submit","Math","max","createObject","reload","questionnaireDialog","minHeight","selectFromReqs","CreateClub","canCreate","setCanCreate","openClubDialog","setClubDialog","createClubName","setCreateClubName","createClubDetails","setCreateClubDetails","refreshClubsTrigger","setRefreshClubsTrigger","handleCloseCreateClub","requests","setRequests","setSelectedSubClubRequest","setSubclubName","createdClubs","setCreatedClubs","setClubName","clb","subclubDescription","setSubClubDescription","chipData","setChipData","tag","setTag","requestObj","req","onDelete","chipToDelete","clsx","textField","InputProps","startAdornment","InputAdornment","newChips","flag","chp","AdminPanelSwitch","adminMenu","AdminPanelLayout","AdminPage","PrivateMessagingService","receiverUsername","usernameContainer","dateRegisteredContainer","AboutMember","hasCommonSubClub","isSelf","timeRegistered","Tooltip","MeetingRoom","ProfilePage","user","setUser","commonClubsAndSubClubs","setCommonClubsAndSubClubs","posts","setPosts","setSubClub","sortingOrder","setSortingOrder","clubsToSubClubs","aSubClub","clubsAsList","k","NotFoundPage","Copyright","align","Link","href","getFullYear","SignUpPage","setPassword","setUsername","setEmail","CssBaseline","noValidate","autoComplete","mt","SignInPage","Checkbox","auth","infoText","TypeEmailPage","isSend","setIsSend","TypeNewPasswordPage","probs","passwordResetToken","setNewPassword","confirmPassword","setConfirmPassword","passwordsIsMatch","setPasswordsIsMatch","PasswordResetPage","PrivateMessageUserItem","PrivateMessageUserItemList","selectedUser","users","messageArea","overflowY","PrivateMessageFeed","messages","scrollRef","useRef","current","scrollIntoView","behaviour","senderUsername","format","ref","table","chatSection","headBG","borderRight500","borderRight","marginAll","PrivateMessagePage","userList","setUserList","filteredMessages","setFilteredMessages","setMessages","messageContent","setMessageContent","self","usersSet","Set","add","sortedUserList","user1","user2","common1","common2","apply","getTime","receivedMessages","sortedFilteredMessages","message1","message2","timestamp","Fab","unstable_batchedUpdates","ModeratorService","utilLink","delete","explanation","formInput","switchInput","dateInput","submitButton","inputFields","conditionalLabel","condition","correct","wrong","initialFormValues","CreateEvent","eventCreated","setEventCreated","values","setValues","errors","setErrors","validate","fieldValues","errorsUpdate","requiredFields","handleInputValue","FormGroup","inputField","onBlur","rows","utils","DateFnsUtils","disableToolbar","inputVariant","KeyboardButtonProps","Switch","checked","isValid","every","x","formIsValid","ManageEvent","selectedEvent","setSelectedEvent","eventChanged","setEventChanged","find","filled","eventCopy","Update","DeleteForever","ModeratorPanelSwitch","modMenu","ModeratorPanelLayout","ModeratorPage","review","ReviewCard","MoreVertOutlined","ReviewService","authorName","ratingStars","dialogTextField","numReviewsText","SummaryCard","reviews","openDialog","setHover","subClubInfo","setSubClubInfo","subClubStats","inputRating","setInputRating","inputContent","setInputContent","totalRating","rateStructure","one","two","three","four","five","toPrecision","Rating","readOnly","rotated","valueField","argumentField","newValue","onChangeActive","newHover","ml","1","2","3","4","5","summaryContainer","MetaPanelPage","setReviews","breakpointCols","columnClassName","SearchService","SearchResultsPage","searchResults","setSearchResults","trim","member","MainRouter","exact","App","useMemo","createMuiTheme","overrides","MuiAppBar","colorPrimary","background","default","fontFamily","ThemeProvider","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4f38032f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.08e987d0.png\";","/** Contains the api constants.  */\r\n\r\nexport const BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:8080\";\r\nexport const AUTH = \"/auth\";\r\nexport const LOGIN = \"/auth/login\";\r\nexport const REGISTER = \"/auth/register\";\r\n\r\nexport const CLUB_LIST = \"/club/all\";\r\nexport const SUB_CLUB = \"/subclub\";\r\nexport const COMMON_SUB_CLUBS = \"/common-subclubs\";\r\nexport const SUB_CLUB_LIST = \"/subclub/all\";\r\nexport const SUB_CLUB_STATS = \"/subclub/statistics\";\r\nexport const SUB_CLUB_EVENTS = \"/subclub/events\";\r\nexport const ATTEND_SUB_CLUB_EVENT = \"/subclub/attend-event\";\r\nexport const SUB_CLUB_QUESTIONNAIRE = \"/subclub/questionnaire-sub\";\r\nexport const ONE_SUB_CLUB_ENROLL = \"/subclub/enroll-subclub\";\r\nexport const DELETE_SUB_CLUB = \"/delete-sub-club\";\r\nexport const MODERATOR = \"/moderator\";\r\nexport const EVENT = \"/event\";\r\nexport const DELETE_POST = \"/delete-post\";\r\nexport const DELETE_OWN_POST = \"/delete-own-by-id\";\r\nexport const BAN = \"/ban\"\r\nexport const POST = \"/post\";\r\n// TODO: Fix some inconsistencies in naming.\r\nexport const GET_POSTS = \"/post\";\r\nexport const CREATE_POST = \"/post/create\";\r\nexport const REPORT_POST = \"/post/report\";\r\nexport const UPVOTE_POST = \"/post/upvote\";\r\nexport const DOWNVOTE_POST = \"/post/downvote\";\r\nexport const GET_POSTS_BY_AUTHOR = \"/by-author\";\r\nexport const TRENDS = \"/trends\";\r\nexport const FEED = \"/feed\";\r\nexport const REVIEWS = \"/reviews\"\r\nexport const REVIEW = \"/review\"\r\nexport const MEMBER = \"/member\";\r\nexport const ADMIN = \"/admin\";\r\nexport const REPORTS = \"/reports\";\r\nexport const DELETE_REPORT = \"/delete-report\";\r\nexport const ENROLLED_SUBCLUBS = \"/enrolled-subclubs\";\r\nexport const ATTENDED_EVENTS = \"/attended-events\";\r\nexport const PRIVATE_MESSAGE = \"/private-message\";\r\nexport const REQUEST_SUBCLUB= \"/request-subclub\";\r\nexport const SUBCLUB_REQUESTS = \"/admin/subclub-requests\";\r\nexport const CREATE_CLUB = \"/admin/create-club\";\r\nexport const CREATE_SUBCLUB = \"/admin/create-sub-club\";\r\nexport const SEARCH = \"/search\";\r\nexport const LOGIN_WITH_TOKEN = \"/auth/login_with_token\";\r\nexport const MOD_REQUEST = \"/subclub/mod-request\";\r\n\r\nexport const SEARCH_MEMBER_BY_NAME = \"/admin/search-member\"\r\nexport const RESET_PASSWORD = \"/reset-password\";\r\nexport const CHANGE_PASSWORD_WITH_TOKEN = \"/change-password-token\";\r\n\r\n","/**\r\n * Credit: Umut Emre Bayramoğlu\r\n * https://github.com/CommunITU/communitu-frontend\r\n */\r\n\r\nimport {AuthService} from \"./AuthService\";\r\n\r\nexport const headersWithToken = (params) => {\r\n    const token = AuthService.getJwtToken();\r\n    return {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n\r\n        },\r\n        params: params\r\n    }\r\n}\r\n\r\nexport const fileUploadWithToken = () => {\r\n    const token = AuthService.getJwtToken();\r\n    return {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        }\r\n    }\r\n}\r\n\r\nexport const baseHeaders = () => {\r\n    return {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const baseHeadersNoCors = () => {\r\n    return {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Credit: Umut Emre Bayramoğlu\r\n * https://github.com/CommunITU/communitu-frontend\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n    AUTH,\r\n    BASE_URL,\r\n    CHANGE_PASSWORD_WITH_TOKEN,\r\n    LOGIN,\r\n    LOGIN_WITH_TOKEN,\r\n    REGISTER,\r\n    RESET_PASSWORD\r\n} from \"../api_config\";\r\nimport {headersWithToken} from \"./headers\";\r\n\r\nconst login = (username, pass) => {\r\n    saveUsername(username);\r\n    return axios.post(BASE_URL + LOGIN, {username: username, password: pass})\r\n}\r\n\r\nconst saveUsername = (username) => {\r\n    localStorage.setItem('username', username);\r\n}\r\n\r\nconst getUsername = () => {\r\n    return localStorage.getItem(\"username\")\r\n}\r\n\r\nconst removeUsername = () => {\r\n    localStorage.removeItem('username');\r\n}\r\n\r\nconst register = (userData) => {\r\n    return axios.post(BASE_URL + REGISTER, userData)\r\n}\r\n\r\nconst loginWithToken = () => {\r\n    return axios.post(BASE_URL + LOGIN_WITH_TOKEN, {}, headersWithToken())\r\n}\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem('login_token');\r\n    localStorage.removeItem(\"auth_roles\")\r\n};\r\n\r\nconst saveJwtToken = (token) => {\r\n    localStorage.setItem('login_token', token);\r\n}\r\n\r\nconst getJwtToken = () => {\r\n    return localStorage.getItem('login_token');\r\n}\r\n\r\nconst hasJwtToken = () => {\r\n    let jwt = localStorage.getItem('login_token');\r\n    return jwt != null;\r\n}\r\n\r\nconst saveAuthRoles = (roles) => {\r\n    localStorage.setItem(\"auth_roles\", roles);\r\n}\r\n\r\nconst getAuthRoles = () => {\r\n    return localStorage.getItem(\"auth_roles\");\r\n}\r\n\r\nconst isAdmin = () => {\r\n    return \"ADMIN\" in getAuthRoles();\r\n}\r\n\r\nconst resetPassword = (email) => {\r\n    return axios.post(BASE_URL + AUTH + RESET_PASSWORD, null,{params: {email: email}});\r\n}\r\n\r\nconst changePasswordWithToken = (newPassword, token) => {\r\n    return axios.post(BASE_URL +  AUTH + CHANGE_PASSWORD_WITH_TOKEN, null, {params: {token: token, newPassword: newPassword}});\r\n}\r\n\r\n\r\nexport const AuthService = {\r\n    login, register, logout, loginWithToken, saveJwtToken, getJwtToken, hasJwtToken,\r\n    getUsername,\r\n    removeUsername,\r\n    resetPassword,changePasswordWithToken, \r\n    isAdmin, saveAuthRoles, getAuthRoles\r\n};\r\n","import React, {useState} from 'react';\r\nimport {fade, makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {InputBase} from \"@material-ui/core\";\r\nimport logo from '../resource/logo.png';\r\nimport {Message} from \"@material-ui/icons\";\r\nimport {AuthService} from \"../service/AuthService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 0,\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    search: {\r\n        flexGrow: 1,\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.text.primary, 0.20),\r\n        },\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(50),\r\n            marginRight: theme.spacing(50),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    searchInputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    searchInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    logo: {\r\n        maxWidth: '50px',\r\n    },\r\n    appBar: {}\r\n}));\r\n\r\nexport default function PrimaryAppBar() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"fixed\" variant=\"outlined\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <img src={logo} style={{\"cursor\": \"pointer\"}} alt=\"CoSpace\" className={classes.logo}\r\n                         color={'#00e3aa'}\r\n                         onClick={() => history.push(\"/\")}/>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        style={{color: '#00e3aa', fontWeight: 'bold', \"cursor\": \"pointer\"}}\r\n                        className={classes.title}\r\n                        onClick={() => history.push(\"/feed/Popular\")}\r\n                    >\r\n                        CoSpace\r\n                    </Typography>\r\n\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon/>\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search anything…\"\r\n                            classes={{\r\n                                root: classes.searchInputRoot,\r\n                                input: classes.searchInput,\r\n                            }}\r\n                            onChange={(event => {\r\n                                setSearchQuery(event.target.value);\r\n                            })}\r\n                            onKeyUp={(event) => {\r\n                                if (event.key === \"Enter\") {\r\n                                    event.preventDefault();\r\n                                    history.push(`/search/${searchQuery}`)\r\n                                }\r\n                            }}\r\n                            inputProps={{'aria-label': 'search'}}\r\n                        />\r\n                    </div>\r\n\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            history.push(\"/pm\");\r\n                        }}\r\n                    >\r\n                        <Message/>\r\n                    </IconButton>\r\n\r\n                    <IconButton\r\n                        // TODO: Add logic to go SignInPage.\r\n                        onClick={() => {\r\n                            if (AuthService.hasJwtToken()) {\r\n                                // history.push(\"/sign-in\")\r\n                                history.push(\"/profile/\" + AuthService.getUsername())\r\n                            } else {\r\n                                history.push(\"/sign-up\")\r\n                            }\r\n                        }}\r\n                    >\r\n                        <AccountCircle/>\r\n                    </IconButton>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PrimaryAppBar from \"../component/PrimaryAppBar\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // Load app bar information from the theme\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nexport default function MainLayout(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box>\r\n            <PrimaryAppBar/>\r\n\r\n            {/* side drawer */}\r\n            {/* <div>side drawer</div> */}\r\n\r\n            {/* main content */}\r\n            <Box>\r\n                {/* Shift content by appbar width */}\r\n                <div className={classes.toolbar}/>\r\n                {props.children}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import axios from 'axios';\r\nimport {\r\n    BASE_URL,\r\n    CLUB_LIST,\r\n    SUB_CLUB_EVENTS,\r\n    SUB_CLUB_LIST,\r\n    SUB_CLUB_QUESTIONNAIRE,\r\n    SUB_CLUB_STATS\r\n} from \"../api_config\";\r\nimport {headersWithToken} from \"./headers\";\r\nimport {subDays} from \"date-fns\";\r\n\r\nconst getClubs = () => {\r\n    return axios.get(BASE_URL + CLUB_LIST)\r\n}\r\n\r\nconst getSubClubs = () => {\r\n    return axios.get(BASE_URL + SUB_CLUB_LIST)\r\n}\r\n\r\nconst getSubClubStatistics = (subClubName, startTime = subDays(new Date(), 7), endTime = new Date()) => {\r\n    return axios.get(BASE_URL + SUB_CLUB_STATS, {\r\n        params: {\r\n            subClubName: subClubName,\r\n            start: startTime.toISOString(),\r\n            end: endTime.toISOString(),\r\n        }\r\n    });\r\n}\r\n\r\nconst getEvents = (subClubName) => {\r\n    return axios.get(BASE_URL + SUB_CLUB_EVENTS, {\r\n        params: {\r\n            subClubName: subClubName\r\n        }\r\n    });\r\n}\r\n\r\nconst getSubClubQuestions = (subclubName) => {\r\n    return axios.get(BASE_URL + SUB_CLUB_QUESTIONNAIRE, headersWithToken({subClubName:subclubName}));\r\n}\r\n\r\nconst parseSubClubs = async (subClubs) => {\r\n\r\n    const clubs = await getClubs();\r\n\r\n    const tree = [];\r\n    clubs.data.forEach(club => {\r\n        club.children = subClubs.filter(subClub => subClub.parentName === club.name);\r\n        tree.push(club)\r\n    })\r\n\r\n    return tree;\r\n}\r\n\r\n\r\nexport const ClubService = {getClubs, getSubClubs, parseSubClubs, getSubClubStatistics, getEvents, getSubClubQuestions};\r\n","import axios from 'axios';\r\nimport {\r\n    ATTEND_SUB_CLUB_EVENT,\r\n    ATTENDED_EVENTS,\r\n    BASE_URL,\r\n    COMMON_SUB_CLUBS,\r\n    ENROLLED_SUBCLUBS,\r\n    GET_POSTS,\r\n    GET_POSTS_BY_AUTHOR,\r\n    MEMBER,\r\n    ONE_SUB_CLUB_ENROLL,\r\n    SUB_CLUB,\r\n    REQUEST_SUBCLUB,\r\n    MOD_REQUEST\r\n} from \"../api_config.js\";\r\nimport {headersWithToken} from \"./headers\";\r\n\r\nconst getEnrolledSubClubsOfCurrentlySignedInUser = () => {\r\n    return axios.get(BASE_URL + MEMBER + ENROLLED_SUBCLUBS, headersWithToken());\r\n}\r\n\r\nconst getAttendedEventsOfCurrentlySignedInUser = () => {\r\n    return axios.get(BASE_URL + MEMBER + ATTENDED_EVENTS, headersWithToken());\r\n}\r\n\r\nconst getCommonSubClubs = (username) => {\r\n    return axios.get(BASE_URL + SUB_CLUB + COMMON_SUB_CLUBS, headersWithToken({username: username}))\r\n}\r\n\r\nconst enrollToSubClub = (answers) => {\r\n    return axios.post(BASE_URL + ONE_SUB_CLUB_ENROLL, answers, headersWithToken());\r\n}\r\n\r\nconst getPostsByAuthorAndSubClub = (author, subClubName) => {\r\n    return axios.get(BASE_URL + GET_POSTS + GET_POSTS_BY_AUTHOR, {params: {username: author, subClubName: subClubName}})\r\n}\r\n\r\nconst attendEvent = (eventId) => {\r\n    return axios.post(BASE_URL + ATTEND_SUB_CLUB_EVENT, null, headersWithToken({eventId: eventId}))\r\n}\r\n\r\nconst requestSubClub = (parentName, subclubName, details) => {\r\n    const body = {subClubName:subclubName, clubName:parentName}\r\n    return axios.post(BASE_URL + MEMBER + REQUEST_SUBCLUB, body, headersWithToken());\r\n}\r\n\r\nconst requestForModerating = (subclubName) => {\r\n    return axios.post(BASE_URL + MOD_REQUEST, {}, headersWithToken({subClubName:subclubName}));\r\n}\r\n\r\nconst getUserByName = (username) => {\r\n    return axios.get(BASE_URL + MEMBER, {params: {username: username}});\r\n}\r\n\r\nexport const MemberService = {\r\n    getEnrolledSubClubsOfCurrentlySignedInUser,\r\n    enrollToSubClub,\r\n    getPostsByAuthorAndSubClub,\r\n    getCommonSubClubs,\r\n    getAttendedEventsOfCurrentlySignedInUser,\r\n    attendEvent,\r\n    requestSubClub,\r\n    requestForModerating,\r\n    getUserByName\r\n};","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Divider, Grid, Paper, Typography} from \"@material-ui/core\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport React from \"react\";\r\nimport {PublicOutlined} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionClub: {\r\n        height: 216,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n    root: {},\r\n    treeViewTitleContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    treeViewTitleIconContainer: {\r\n        marginTop: theme.spacing(0.5),\r\n        marginBottom: theme.spacing(0),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n}));\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.primary,\r\n        '&:hover > $content': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n        '&:focus > $content': {\r\n            backgroundColor: '#afffea',\r\n            color: 'var(--tree-view-color)',\r\n        },\r\n        '&$selected > $content': {\r\n            //backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n            backgroundColor: '#00e3aa',\r\n            color: 'var(--tree-view-color)',\r\n\r\n        },\r\n        '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    content: {\r\n        color: theme.palette.text.secondary,\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    group: {\r\n        marginLeft: 0,\r\n        '& $content': {\r\n            paddingLeft: theme.spacing(2),\r\n        },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n        fontWeight: 'inherit',\r\n        color: 'inherit',\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    iconContainer: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction renderTree(node, classes, callback) {\r\n    const onTreeItemClick = () => {\r\n        callback(node);\r\n    }\r\n    return (\r\n        <TreeItem className={classes.root} onClick={onTreeItemClick}\r\n                  onLabelClick={event => {\r\n                      event.preventDefault()\r\n                  }}\r\n                  key={node.text} nodeId={node.text} label={<Box className={classes.treeItemText}>{node.text}</Box>}\r\n                  classes={{\r\n                      root: classes.root,\r\n                      content: classes.content,\r\n                      expanded: classes.expanded,\r\n                      selected: classes.selected,\r\n                      group: classes.group,\r\n                      label: classes.label,\r\n                      iconContainer: classes.iconContainer\r\n                  }}>\r\n            {Array.isArray(node.children) ? node.children.map((childNode) => renderTree(childNode, classes, callback)) : null}\r\n        </TreeItem>\r\n    );\r\n}\r\n\r\nexport default function CoSpaceTreeViewMenu(\r\n    {\r\n        title,\r\n        titleIcon,\r\n        menuItems,\r\n        callbackOnTreeItemClick,\r\n        expandIcon,\r\n        collapseIcon,\r\n        defaultExpanded,\r\n        expanded,\r\n        selected,\r\n        defaultSelected,\r\n        emptyText = \"There's nothing to look here.\"\r\n    }) {\r\n    const classes = useStyles();\r\n    const treeClasses = useTreeItemStyles();\r\n\r\n    if (expandIcon === undefined) expandIcon = <ChevronRightIcon className={treeClasses.treeItemIcon}/>;\r\n    if (collapseIcon === undefined) collapseIcon = <Box><ExpandMoreIcon className={treeClasses.treeItemIcon}/></Box>;\r\n    if (titleIcon === undefined) titleIcon = <PublicOutlined/>;\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n                <Grid container>\r\n                    <Box key={1} item className={classes.treeViewTitleIconContainer}>\r\n                        {titleIcon}\r\n                    </Box>\r\n                    <Grid key={2} item className={classes.treeViewTitleContainer}>\r\n                        <Typography variant=\"h6\" className={classes.sectionTitle}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider}/>\r\n                <TreeView\r\n                    defaultCollapseIcon={collapseIcon}\r\n                    defaultExpanded={defaultExpanded}\r\n                    expanded={expanded}\r\n                    defaultSelected={defaultSelected}\r\n                    selected={selected}\r\n                    defaultExpandIcon={expandIcon}>\r\n                    {menuItems && menuItems.length !== 0 ? menuItems.map((menuItem, index) => (\r\n                        renderTree(menuItem, treeClasses, callbackOnTreeItemClick)\r\n                    )) : <Typography className={treeClasses.label}>{emptyText}</Typography>}\r\n\r\n                </TreeView>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CoSpaceTreeViewMenu from \"./CoSpaceTreeViewMenu\";\r\nimport {PeopleAltOutlined, PublicOutlined} from \"@material-ui/icons\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    treeItemIcon: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n}));\r\n\r\nexport default function ClubTree(\r\n    {\r\n        clubs,\r\n        selected,\r\n        callbackOnTreeItemClick,\r\n        title = \"Clubs & Sub-clubs\",\r\n        titleIcon = <PublicOutlined/>\r\n    }) {\r\n    const classes = useStyles();\r\n\r\n    const nameToClubObject = {}\r\n    const mapNameToToClubObject = (club) => {\r\n        nameToClubObject[club.name] = club;\r\n        if (Array.isArray(club.children)) {\r\n            club.children.forEach(mapNameToToClubObject)\r\n        }\r\n    }\r\n    clubs.forEach(mapNameToToClubObject)\r\n\r\n    console.log(nameToClubObject)\r\n\r\n    const mapToMenuItem = (club) => {\r\n        return {\r\n            text: club.name,\r\n            children: Array.isArray(club.children) ? club.children.map((inner) => mapToMenuItem(inner)) : null\r\n        }\r\n    }\r\n\r\n    const handleMenuItemClick = (menuItem) => {\r\n        console.log(`Menu Item:`);\r\n        console.log(menuItem)\r\n        console.log(`Club Obj:`);\r\n        console.log(nameToClubObject[menuItem.text])\r\n        callbackOnTreeItemClick(nameToClubObject[menuItem.text])\r\n    }\r\n\r\n    const menuItems = clubs.map((club) => mapToMenuItem(club))\r\n\r\n    return (\r\n        <CoSpaceTreeViewMenu\r\n            title={title}\r\n            titleIcon={titleIcon}\r\n            selected={selected}\r\n            expandIcon={<PeopleAltOutlined className={classes.treeItemIcon}/>}\r\n            collapseIcon={<PeopleAltOutlined className={classes.treeItemIcon}/>}\r\n            expanded={menuItems.map(menuItem => menuItem.text)}\r\n            menuItems={menuItems}\r\n            callbackOnTreeItemClick={handleMenuItemClick}/>\r\n    );\r\n}","import {Container, Divider, Grid, Paper, Typography} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SupervisorAccount} from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    feedNameContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    dateCreatedContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport default function AboutFeed({feedInfo}) {\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n\r\n                <Grid container>\r\n                    <Grid key={1} item className={classes.avatarContainer}>\r\n                        <Avatar className={classes.avatar}> {feedInfo.name[0].toUpperCase()} </Avatar>\r\n                    </Grid>\r\n                    <Grid key={2} item className={classes.feedNameContainer}>\r\n                        <Typography variant=\"h5\">\r\n                            {feedInfo.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Divider className={classes.divider}/>\r\n\r\n                <Typography className={classes.sectionBody}>\r\n                    {feedInfo.details}\r\n                </Typography>\r\n\r\n                {(!feedInfo.isCustom) &&  // If it's not a custom feed like popular or random\r\n                <Box>\r\n                    {feedInfo.parentName &&  // If it's a sub-club\r\n                    <Box>\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        <Grid container justify=\"center\">\r\n                            <Grid key={1} item>\r\n                                <Container>\r\n                                    <Typography variant=\"h6\">\r\n                                        {feedInfo.numberOfMembers}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        {\"members\"}\r\n                                    </Typography>\r\n                                </Container>\r\n                            </Grid>\r\n\r\n                            {<Grid key={2} item>\r\n                                <Container>\r\n                                    <Typography variant=\"h6\">\r\n                                        {feedInfo.numberOfPostsInLastWeek}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        {\"posts last week\"}\r\n                                    </Typography>\r\n                                </Container>\r\n                            </Grid>}\r\n                        </Grid>\r\n                    </Box>}\r\n\r\n                    <Divider className={classes.divider}/>\r\n\r\n                    <Grid container className={classes.dateCreatedContainer}>\r\n                        <Grid key={1} item>\r\n                            <Container><CakeIcon/> </Container>\r\n                        </Grid>\r\n                        <Grid key={2} item>\r\n                            <Typography variant=\"body1\">\r\n                                {`Created, ${new Date(feedInfo.created).toLocaleString(navigator.language, {\r\n                                    year: 'numeric',\r\n                                    month: 'long',\r\n                                    day: 'numeric'\r\n                                })}`}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {feedInfo.moderatorUsername === AuthService.getUsername() &&\r\n                    <Box>\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        <Grid container className={classes.buttonContainer}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SupervisorAccount/>}\r\n                                onClick={(event) => {\r\n                                    history.push(\"/mod\")\r\n                                }}>\r\n                                MODERATOR PANEL\r\n                            </Button>\r\n                        </Grid>\r\n                    </Box>}\r\n                </Box>}\r\n\r\n\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import {Divider, Paper, Typography} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    }\r\n}));\r\n\r\n\r\nexport default function EventContainer({events}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n                <Typography variant=\"h6\" className={classes.sectionTitle}>\r\n                    Events\r\n                </Typography>\r\n                <Divider className={classes.divider}/>\r\n                <Typography className={classes.sectionBody}>\r\n                    {events}\r\n                </Typography>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import axios from 'axios';\r\nimport {BASE_URL, CREATE_POST, DOWNVOTE_POST, FEED, GET_POSTS, REPORT_POST, UPVOTE_POST, DELETE_OWN_POST, POST} from \"../api_config\";\r\nimport {headersWithToken} from \"./headers\";\r\nimport {subDays} from \"date-fns\";\r\n\r\nconst getPosts = (feed, page, size, sort) => {\r\n    return axios.get(BASE_URL + GET_POSTS + FEED, {\r\n        params: {\r\n            name: feed,\r\n            page: page,\r\n            size: size,\r\n            start: (() => {\r\n                switch (sort) {\r\n                    case \"today\":  return subDays(new Date(), 1).toISOString();\r\n                    case \"new\": return subDays(new Date(), 30).toISOString();\r\n                    case \"top\": return subDays(new Date(), 7).toISOString();\r\n                    default:\r\n                        break;\r\n                }\r\n            })(),\r\n            end: new Date().toISOString(),\r\n            sort: (() => {\r\n                switch (sort) {\r\n                    case \"today\":  return \"voting,desc\";\r\n                    case \"new\": return \"created,desc\";\r\n                    case \"top\": return \"voting,desc\";\r\n                    default:\r\n                        break;\r\n                }\r\n            })()\r\n        }\r\n    })\r\n}\r\n\r\nconst createPost = (newPost) => {\r\n    return axios.post(BASE_URL + CREATE_POST, newPost, headersWithToken());\r\n}\r\n\r\nconst reportPost = (author, message, postId) => {\r\n    return axios.post(BASE_URL + REPORT_POST, {author: author, content: message, postId: postId}, headersWithToken());\r\n}\r\n\r\nconst upvotePost = (postId) => {\r\n    return axios.post(BASE_URL + UPVOTE_POST, null, headersWithToken({postId: postId}))\r\n}\r\n\r\nconst downvotePost = (postId) => {\r\n    return axios.post(BASE_URL + DOWNVOTE_POST, null, headersWithToken({postId: postId}))\r\n}\r\n\r\nconst getPostById = (postId) => {\r\n    return axios.get(BASE_URL + GET_POSTS, {params: {postId: postId}})\r\n};\r\n\r\nconst deleteOwnPost = (postId) => {\r\n    return axios.post(BASE_URL + POST + DELETE_OWN_POST, null, headersWithToken({id: postId}));\r\n}\r\n\r\nexport const PostService = {getPosts, createPost, reportPost, upvotePost, downvotePost, getPostById, deleteOwnPost};\r\n","import React, {Component} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport {convertToRaw, EditorState} from 'draft-js';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport {PostService} from \"../service/PostService\";\r\n\r\nclass CreatePost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editorState: EditorState.createEmpty(),\r\n            title: \"\"\r\n        };\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({editorState: editorState});\r\n    };\r\n\r\n    onTitleChange = (titleState) => {\r\n        this.setState({title: titleState.target.value})\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.resetForm();\r\n        this.props.setOpen(false);\r\n    };\r\n\r\n    share = () => {\r\n        //const current = new Date();\r\n        const post = {\r\n            title: this.state.title,\r\n            content: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())),\r\n            // time: current.toLocaleString(),\r\n            parentName: this.props.subclub.name,\r\n        }\r\n        PostService.createPost(post).then(result => {\r\n            this.props.newPostEvent();\r\n            console.log(\"post created on dialog\");\r\n        })\r\n        this.handleClose()\r\n\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({title: \"\"});\r\n        this.setState({editorState: EditorState.createEmpty()});\r\n    }\r\n\r\n\r\n    border_props = {\r\n        padding: 1,\r\n        borderColor: 'grey.500',\r\n    };\r\n\r\n\r\n    render() {\r\n        const {editorState} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Dialog open={this.props.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\"\r\n                        fullWidth={true} maxWidth={\"md\"}>\r\n                    <DialogTitle id=\"form-dialog-title\">Create Post</DialogTitle>\r\n                    <DialogContent style={{height: '600px'}}>\r\n\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            value={this.state.title}\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            type=\"input\"\r\n                            onChange={this.onTitleChange}\r\n                            fullWidth\r\n                        />\r\n                        <Box border={1} {...this.border_props}>\r\n                            <Editor style={{height: 'auto'}}\r\n                                    editorState={editorState}\r\n                                    placeholder=\"Content\"\r\n                                    editorStyle={{height: '400px'}}\r\n                                    onEditorStateChange={this.onEditorStateChange}\r\n                            />\r\n                        </Box>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.share} color=\"primary\">\r\n                            Share\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatePost;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport {Chip, IconButton, List, ListItem, ListItemAvatar, ListItemText, makeStyles} from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Event, EventAvailable, PinDrop, Public} from \"@material-ui/icons\";\r\nimport {formatRelative} from \"date-fns\";\r\nimport {openInNewTab} from \"../../util/redirect\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(0),\r\n        padding: theme.spacing(0),\r\n    },\r\n    listItem: {\r\n        alignItems: \"flex-start\",\r\n        margin: theme.spacing(0),\r\n        padding: theme.spacing(0),\r\n    },\r\n    listItemText: {\r\n        margin: theme.spacing(0),\r\n        padding: theme.spacing(0),\r\n    },\r\n    iconAttended: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    iconUnattended: {\r\n        color: theme.palette.text,\r\n    },\r\n    iconButton: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    chips: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    }\r\n}));\r\n\r\nexport default function EventItem(\r\n    {\r\n        event,\r\n        attendCallback,\r\n    }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <ListItem key={event.id} className={classes.listItem}>\r\n                <ListItemAvatar>\r\n                    <IconButton variant={\"outlined\"} className={classes.iconButton}\r\n                                onClick={() => attendCallback(event.id)}>\r\n                        {event.hasAttended ? <EventAvailable className={classes.iconAttended}/> :\r\n                            <Event className={classes.iconUnattended}/>}\r\n                    </IconButton>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    className={classes.listItemText}\r\n                    primary={event.title}\r\n                    secondary={\r\n                        <React.Fragment c>\r\n                            <List>\r\n                                <Typography\r\n                                    key={0}\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    color=\"textPrimary\">\r\n                                    {`${formatRelative(new Date(event.date), new Date()).toString()}`}\r\n                                </Typography>\r\n                                <Box key={1}>{event.details}</Box>\r\n                                <Box key={2} className={classes.chips}>\r\n                                    {event.isOnline &&\r\n                                    <Chip variant={\"outlined\"} size=\"small\" color=\"primary\" label={\"Online\"}\r\n                                          icon={<Public/>}/>}\r\n                                    <Chip variant={\"outlined\"} size=\"small\" color=\"primary\" label={event.location}\r\n                                          onClick={event.location.includes(\"http\") ? (() => openInNewTab(event.location)) : null}\r\n                                          icon={<PinDrop/>}/>\r\n                                </Box>\r\n                            </List>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n        </Box>\r\n    );\r\n}","export const openInNewTab = (url) => {\r\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n    if (newWindow) newWindow.opener = null\r\n}","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary\r\n    },\r\n    question: {\r\n        marginBottom:theme.spacing(1)\r\n    }\r\n  }));\r\n\r\n  function Answer({children }) {\r\n    return (\r\n      <Grid item xs={12} sm={6} md={6}>\r\n        {children}\r\n      </Grid>\r\n    );\r\n  }\r\n\r\nexport default function QuestionLayout(props) {\r\n    const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Grid container spacing={1}>\r\n            <Grid item sm={12} className={classes.question}>\r\n                {props.question}\r\n            </Grid>\r\n            <Answer children={props.answer1} />\r\n            <Answer children={props.answer2} />\r\n            <Answer children={props.answer3} />\r\n            <Answer children={props.answer4} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }","import React, {useEffect} from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport QuestionLayout from \"../../layout/QuestionLayout\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.primary\r\n    },\r\n    question: {\r\n        marginBottom:theme.spacing(1)\r\n    }\r\n  }));\r\n\r\n\r\nfunction AnswerButton({id, answerText, locked, callBack}){\r\n    return (\r\n        <Button size=\"medium\"\r\n        variant={(locked) ? \"contained\" : \"outlined\"}\r\n        color=\"primary\"\r\n        fullWidth={true}\r\n        // disabled={disable && !locked}\r\n        onClick={() => {callBack(id)}}\r\n        disableElevation>{answerText}</Button>\r\n    )\r\n}\r\n\r\nexport default function Question({question, callBackOnChange}) {\r\n    const classes = useStyles();\r\n    const [locked, setLocked] = React.useState([false, false, false, false]);\r\n    const [givenAnswerId, setGivenAnswerId] = React.useState();\r\n\r\n    useEffect(() => {\r\n        if (givenAnswerId === undefined) {\r\n            return;\r\n        }\r\n        callBackOnChange(question.id, question[\"answer\"+(givenAnswerId+1).toString()]);\r\n    }, [givenAnswerId])\r\n\r\n    function handleAnswerClick(newGivenAnswerId) {\r\n        let temp_locked = [...locked];\r\n        temp_locked[newGivenAnswerId] = true;\r\n        // if any previous answer\r\n        if(givenAnswerId !== newGivenAnswerId){\r\n            temp_locked[givenAnswerId] = false;\r\n        }\r\n        setLocked(temp_locked);\r\n        setGivenAnswerId(newGivenAnswerId);\r\n    }\r\n\r\n    return (\r\n        <QuestionLayout\r\n            question={<Paper elevation={3} variant=\"outlined\" className={classes.paper}> {question.content} </Paper>}\r\n            answer1={<AnswerButton id={0} answerText={question.answer1} callBack={handleAnswerClick} locked={locked[0]}/>}\r\n            answer2={<AnswerButton id={1} answerText={question.answer2} callBack={handleAnswerClick} locked={locked[1]}/>}\r\n            answer3={<AnswerButton id={2} answerText={question.answer3} callBack={handleAnswerClick} locked={locked[2]}/>}\r\n            answer4={<AnswerButton id={3} answerText={question.answer4} callBack={handleAnswerClick} locked={locked[3]}/>}\r\n        />\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Question from \"./Question\";\r\nimport {Box, Grid} from \"@material-ui/core\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    questionBox: {\r\n      margin: theme.spacing(5),\r\n      marginTop: theme.spacing(0)\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(5)\r\n    }\r\n  }));\r\n\r\n\r\nexport default function Questionnaire({questions, callBackOnAnswer}) {\r\n    const classes = useStyles();\r\n    const [givenAnswers, setGivenAnswers] = useState(questions.map((q) => {return {id:q.id, groundTruth:\"\", parentName:q.parentName}}));\r\n\r\n    useEffect(() => {\r\n      // since the questionnaire is open once, pass the empty answers at the begenning\r\n      callBackOnAnswer(givenAnswers);\r\n    }, [])\r\n    \r\n\r\n    const handleQuestionAnswering = (question_id, newGivenAnswer) => {\r\n      console.log(givenAnswers);\r\n      let givenAnswerIndex = givenAnswers.findIndex(a => a.id === question_id)\r\n      let givenAnswer = givenAnswers[givenAnswerIndex]\r\n      givenAnswer.groundTruth = newGivenAnswer;\r\n      const tempList = [...givenAnswers];\r\n      tempList[givenAnswerIndex] = givenAnswer;\r\n      setGivenAnswers(tempList);\r\n      callBackOnAnswer(givenAnswers)\r\n    }\r\n\r\n    return (\r\n        <Grid style={{ }}>\r\n          {questions.map((quest, index) => {\r\n              return (<Box className={classes.questionBox} key={\"q\"+index.toString()}>\r\n                  <h2 style={{padding:\"10px\"}}>Question {index+1}</h2>\r\n                  <Question question={quest} callBackOnChange={handleQuestionAnswering}/>\r\n                  {index+1 !== questions.length && (\r\n                      <Divider className={classes.divider}/>\r\n                  )}\r\n              </Box>)\r\n          }\r\n          )}\r\n\r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Grid, Paper} from \"@material-ui/core\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Questionnaire from './questionnaire/Questionnaire';\r\nimport {ClubService} from '../service/ClubService';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {MemberService} from \"../service/MemberService\";\r\n\r\n\r\nfunction QuestionnaireEntrance() {\r\n    return(\r\n        <Box padding=\"50px\">\r\n            <p>For enrolling a subclub, you have to take the subclub questionnaire.</p>\r\n            <p>If your score is higher than %50, then you can enroll.</p>\r\n            <p>After reading the following rules, click to the next button for taking the questionnaire</p>\r\n\r\n            <h3 style={{ paddingTop:\"50px\", paddingBottom:\"20px\"}}>Enterence Rules</h3>\r\n\r\n            <ul>\r\n                <li>Do not use internet or any other resources.</li>\r\n                <li>Give answer for all the questions, empty answers will be considered as wrong.</li>\r\n                <li>After submittion there will be not editing for answers.</li>\r\n            </ul> \r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction PostQuestionnaire({response, setEnrolled}) {\r\n    let bg_color;\r\n    let result_text;\r\n    response = response[0]\r\n    if (response[\"Interest Rate\"] === undefined) {\r\n        bg_color = \"#ff8a93\"\r\n        result_text = \"Sorry, you failed before so you cannot enroll again!\"\r\n    }\r\n    else{\r\n        let score = response[\"Interest Rate\"]\r\n        const enrolled = score >= 50;\r\n        if (enrolled) {\r\n            bg_color = \"#00e3aa\"\r\n            result_text = \"Congrats! You are successfully enrolled with score: \"+score\r\n        }\r\n        else{\r\n            bg_color = \"#ff8a93\"\r\n            result_text = \"Sorry, you failed with score: \"+score    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{height:\"50vh\"}}>\r\n            <Paper elevation={3} variant=\"outlined\" style={{width:\"75%\", textAlign:\"center\", padding:\"50px\", backgroundColor:bg_color}} >\r\n                {result_text}\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default function EnrollPanel({clickedSubClub, open, setOpenDialog, setEnrolled}) {\r\n    const [onQuestionnaire, setOnQuestionnaire] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [givenAnswers, setGivenAnswers] = useState([]);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [enrollResponse, setEnrollResponse] = useState();\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        ClubService.getSubClubQuestions(clickedSubClub.name).then((response) => {\r\n            setQuestions(response.data);\r\n        })\r\n    },[])\r\n\r\n    const handleDialogClose = (event) => {\r\n        setOnQuestionnaire(false);\r\n        setOpenDialog(false);\r\n\r\n    };\r\n\r\n    const handleNext = (event) => {\r\n        if (!onQuestionnaire) {\r\n            setOnQuestionnaire(true);\r\n        }\r\n        else{\r\n            console.log(\"given answers on submit\", givenAnswers);\r\n            MemberService.enrollToSubClub(givenAnswers).then((response) => {\r\n                console.log(\"Response: \" + response.data);\r\n                if (response.data[0].Message === \"Success\") {\r\n                    setEnrolled(true)\r\n                }\r\n                else{\r\n                    setEnrolled(false);\r\n                }\r\n                setEnrollResponse(response.data)\r\n            }).finally(() => {\r\n                setSubmitted(true);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n            <Dialog open={open} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\"\r\n                fullWidth={true} maxWidth={\"md\"}>\r\n\r\n                <DialogTitle id=\"form-dialog-title\">Enrolling to {clickedSubClub.name}</DialogTitle>\r\n                <DialogContent style={{height: '600px'}}>\r\n                        {(!onQuestionnaire) && <QuestionnaireEntrance/>}\r\n                        {(onQuestionnaire) && \r\n                            <Box margin=\"10px\">\r\n                                {(!submitted) && <Questionnaire questions={questions} callBackOnAnswer={setGivenAnswers}/>}\r\n                                {(submitted) && <PostQuestionnaire response={enrollResponse} setEnrolled={setEnrolled}/>}\r\n\r\n                            </Box>\r\n                        }\r\n                        \r\n                </DialogContent>\r\n                <DialogActions>\r\n                            <Button \r\n                                onClick={handleDialogClose}\r\n                                color=\"primary\">\r\n                                Exit\r\n                            </Button>\r\n                            {(!submitted && (\r\n                                <Button\r\n                                    onClick={handleNext}\r\n                                    color=\"primary\">\r\n                                    Next\r\n                                </Button>\r\n                                ))}\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n    )\r\n}","export const delay = (delay: number) => {\r\n    return new Promise(res => setTimeout(res, delay));\r\n}","import React, {useState} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MemberService } from '../service/MemberService';\r\nimport {delay} from \"../util/async\";\r\n\r\n\r\nexport default function EnrollPanel({open, setOpenDialog, club}) {\r\n\r\n    const [nameValue, setNameValue] = useState(\"\");\r\n    const [detailValue, setDetailValue] = useState(\"\");\r\n    const [nameEmpty, setNameEmpty] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    \r\n    const handleDialogClose = (event) => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const onNameChange = (event) => {\r\n        setNameValue(event.target.value)\r\n        setNameEmpty(false);\r\n    }\r\n\r\n    const onDetailsChange = (event) => {\r\n        setDetailValue(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        if (nameValue === \"\" || nameValue === undefined) { \r\n            setNameEmpty(true);\r\n            return\r\n        }        \r\n        MemberService.requestSubClub(club.name, nameValue, detailValue).then((response) => {\r\n            console.log(response.data);\r\n            setSubmitted(true);\r\n            delay(1000).then(() => {\r\n                setOpenDialog(false);\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n            <Dialog open={open} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\"\r\n                fullWidth={true} maxWidth={\"md\"}>\r\n\r\n                <DialogTitle id=\"form-dialog-title\">Request SubClub for {club.name}</DialogTitle>\r\n                <DialogContent >\r\n\r\n                    <TextField\r\n                            autoFocus\r\n                            required\r\n                            error={nameEmpty}\r\n                            label=\"Sub-club name\"\r\n                            variant=\"outlined\"\r\n                            type=\"input\"\r\n                            onChange={onNameChange}\r\n                            fullWidth\r\n                            />\r\n                    <TextField \r\n                        style={{marginTop:\"5vh\"}}\r\n                        id=\"outlined-multiline\"\r\n                        label=\"Details\"\r\n                        multiline\r\n                        rowsMax={4}\r\n                        onChange={onDetailsChange}\r\n\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        />\r\n                        \r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                            <Button \r\n                                onClick={handleDialogClose}\r\n                                color=\"primary\">\r\n                                Exit\r\n                            </Button>\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                disabled={submitted}\r\n                                color=\"primary\">\r\n                                Request\r\n                            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Divider, List} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ClubService} from \"../service/ClubService\";\r\nimport {subDays} from \"date-fns\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport {MemberService} from \"../service/MemberService\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ClubTree from \"../component/common/ClubTree\";\r\nimport {ToggleButton, ToggleButtonGroup} from \"@material-ui/lab\";\r\nimport {Add, Edit, FiberNew, TrendingUp, Whatshot} from \"@material-ui/icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AboutFeed from \"../component/AboutFeed\";\r\nimport EventContainer from \"../component/event/EventContainer\";\r\nimport CreatePost from \"../component/CreatePost\";\r\nimport EventItem from \"../component/event/EventItem\";\r\nimport EnrollPanel from \"../component/EnrollPanel\";\r\nimport RequestSubclub from \"../component/RequestSubclub.js\"\r\nimport RateReviewOutlinedIcon from '@material-ui/icons/RateReviewOutlined';\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridContainer: {},\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    feedItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    feedTitle: {\r\n        flexGrow: 1\r\n    },\r\n    gridItem: {\r\n        maxHeight: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    gridLeftColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(2.5),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n    gridMiddleColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    gridRightColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(0),\r\n        marginRight: theme.spacing(2.5),\r\n    },\r\n    sectionBox: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    sortingFeedToggleGroup: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nconst customFeeds = [\r\n    {isCustom: true, name: \"Popular\", details: \"Popular posts in all clubs and sub-clubs right now.\", children: []},\r\n];\r\n\r\n\r\nfunction PostFeedLayout({children}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [sorting, setSorting] = useState('today');\r\n\r\n    const handleSorting = (event, sorting) => {\r\n        console.log(\"Sorting order: \" + sorting);\r\n        setSorting(sorting);\r\n    };\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [sorting])\r\n\r\n    // Clubs and sub-clubs\r\n    const [clubs, setClubs] = useState(customFeeds);\r\n    const [enrolledSubClubs, setEnrolledSubClubs] = useState([]);\r\n    const [feed, setFeed] = useState(customFeeds[0]);\r\n    const [events, setEvents] = useState([]);\r\n\r\n    // Refresh event for posts\r\n    const [refreshFeed, doRefresh] = useState(0)\r\n    const [postDialogOpen, setPostDialogOpen] = React.useState(false);\r\n    const [enrollDialogOpen, setEnrollDialogOpen] = React.useState(false);\r\n    const [subclubRequestDialogOpen, setSubclubRequestDialogOpen] = React.useState(false);\r\n\r\n    // Get stats\r\n    useEffect(() => {\r\n        if (!(feed.isCustom) || feed.parentName) {\r\n            ClubService.getSubClubStatistics(feed.name, subDays(new Date(), 7), new Date()).then(response => {\r\n                console.log(`Fetched stats of ${feed.name}`, response.data);\r\n                console.log(response.data);\r\n                feed.numberOfMembers = response.data.numberOfMembers;\r\n                feed.numberOfPostsInLastWeek = response.data.numberOfPostsInTimeFrame;\r\n                setFeed(feed);\r\n            }).catch(response => {\r\n                console.error(\"Error while fetching sub-club statistics:\", response);\r\n            });\r\n        }\r\n    }, [refreshFeed]);  // TODO: Figure out a better way to update feed info object with stats.\r\n\r\n    // Get club and sub-clubs\r\n    useEffect(() => {\r\n        ClubService.getSubClubs().then(response => {\r\n            console.log(\"Parsing sub-clubs\");\r\n            console.log(response.data);\r\n            ClubService.parseSubClubs(response.data).then(tree => {\r\n                console.log(\"Parsed club tree:\", tree)\r\n                customFeeds.slice().reverse().forEach(customFeed => {\r\n                    tree.splice(0, 0, customFeed);\r\n                });\r\n                setClubs(tree);\r\n            })\r\n        });\r\n    }, [refreshFeed]);\r\n\r\n    useEffect(() => {\r\n        if (AuthService.hasJwtToken()) {\r\n            MemberService.getEnrolledSubClubsOfCurrentlySignedInUser().then(response => {\r\n                console.log(\"Enrolled sub-clubs:\", response.data);\r\n                setEnrolledSubClubs(response.data);\r\n            });\r\n        }\r\n    }, [refreshFeed]);\r\n\r\n    useEffect(() => {\r\n        if (!(feed.isCustom) || feed.parentName) {\r\n            ClubService.getEvents(feed.name).then(response => {\r\n                console.log(`Events of ${feed.name}`, response.data);\r\n\r\n                if (AuthService.hasJwtToken()) {\r\n\r\n                    MemberService.getAttendedEventsOfCurrentlySignedInUser().then(attendedEventsResponse => {\r\n                        console.log(\"Attended events:\", response.data);\r\n\r\n                        const allEvents = response.data.map(event => {\r\n                            event.hasAttended = attendedEventsResponse.data.filter(anAttendedEventOfMember => anAttendedEventOfMember.id === event.id).length !== 0;\r\n                            return event;\r\n                        })\r\n\r\n                        setEvents(allEvents);\r\n\r\n                    }).catch(error => {\r\n                        console.log(\"Error while fetching attended events:\", error);\r\n                    })\r\n                } else {\r\n                    setEvents(response.data);\r\n                }\r\n            }).catch(error => {\r\n                console.error(error);\r\n            })\r\n        }\r\n    }, [feed]);\r\n    \r\n    useEffect(() => {\r\n        console.log(\"Sorting changed:\", sorting);\r\n        history.replace(`/feed/${feed.name}/${sorting}`);\r\n    }, [feed.name, history, sorting]);\r\n\r\n    // create post pop-up\r\n    const handleCreatePostDialogOpen = () => {\r\n        setPostDialogOpen(true);\r\n    };\r\n\r\n    // enrollment pop-up\r\n    const handleEnrollDialogOpen = () => {\r\n        setEnrollDialogOpen(true);\r\n    };\r\n\r\n    // subclub request pop-up\r\n    const handleSubclubRequestDialogOpen = () => {\r\n        setSubclubRequestDialogOpen(true);\r\n    };\r\n\r\n    // on enrollment, refresh the enrolled ones\r\n    const handleEnrollment = (isEnrolled) => {\r\n        if (isEnrolled) {\r\n            setEnrolledSubClubs([...enrolledSubClubs, feed])\r\n        }\r\n    };\r\n\r\n    // request to being a moderator\r\n    const [modRequestDialogOpen, setModRequestDialogOpen] = React.useState(false);\r\n    const [modRequestResponse, setModRequestResponse] = React.useState(\"\");\r\n    const handleModeratorRequest = () => {\r\n        MemberService.requestForModerating(feed.name).then((response) => {\r\n            setModRequestDialogOpen(true);\r\n            console.log(response.data);\r\n            setModRequestResponse(response.data)\r\n        }).catch((err) => {\r\n            if (401 === err.response.status) {\r\n                console.log(err.response.data);\r\n                setModRequestResponse(err.response.data)\r\n                setModRequestDialogOpen(true);\r\n            }\r\n        })\r\n        // setModRequestDialogOpen(true);\r\n\r\n    };\r\n\r\n    // event for new post creation\r\n    const handleNewPost = (postCreated) => {\r\n        // refresh the posts when the new one sended to db\r\n        doRefresh(!refreshFeed);\r\n    }\r\n\r\n    const handleClubTreeItemClick = (node) => {\r\n        setFeed(node);\r\n        doRefresh(!refreshFeed);\r\n        history.push(`/feed/${node.name}`);\r\n    }\r\n\r\n    const isEnrolled = (feed) => enrolledSubClubs.filter(subClub => subClub.name === feed.name).length !== 0;\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} className={classes.gridContainer}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridLeftColumnBox}>\r\n                        <Box className={classes.sectionBox}>\r\n                            <ClubTree\r\n                                title={\"Browse\"}\r\n                                selected={feed.name}\r\n                                callbackOnTreeItemClick={handleClubTreeItemClick}\r\n                                clubs={clubs}/>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={6} className={classes.gridItem}>\r\n                    <Box className={classes.gridMiddleColumnBox}>\r\n                        <Box display=\"flex\">\r\n                            <ToggleButtonGroup\r\n                                className={classes.sortingFeedToggleGroup}\r\n                                value={sorting}\r\n                                exclusive\r\n                                onChange={handleSorting}\r\n                                aria-label=\"text alignment\">\r\n                                <ToggleButton value=\"today\" aria-label=\"left aligned\">\r\n                                    <Whatshot/>\r\n                                </ToggleButton>\r\n                                <ToggleButton value=\"new\" aria-label=\"centered\">\r\n                                    <FiberNew/>\r\n                                </ToggleButton>\r\n                                <ToggleButton value=\"top\" aria-label=\"right aligned\">\r\n                                    <TrendingUp/>\r\n                                </ToggleButton>\r\n                            </ToggleButtonGroup>\r\n\r\n\r\n                            {(!(feed.isCustom || (!feed.parentName))) &&\r\n                            <Button size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={enrolledSubClubs.filter(subClub => subClub.name === feed.name).length === 0}\r\n                                    startIcon={<Edit/>}\r\n                                    onClick={() => {\r\n                                        handleCreatePostDialogOpen()\r\n                                    }}\r\n                                    disableElevation>CREATE POST</Button>}\r\n                        </Box>\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        {/* Feed */}\r\n                        {children}\r\n\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridRightColumnBox}>\r\n                        <Box className={classes.sectionBox}>\r\n                           \r\n                            <AboutFeed feedInfo={feed}/>\r\n                        </Box>\r\n                        {feed.parentName && <Box className={classes.sectionBox}>\r\n                            <EventContainer\r\n                                events={\r\n                                    <List>\r\n                                        {events && events.length !== 0 ? events.map(event =>\r\n                                            <EventItem\r\n                                                key={event.id}\r\n                                                event={event}\r\n                                                attendCallback={(id) => {\r\n                                                    MemberService.attendEvent(id).then(response => {\r\n                                                        console.log(\"Successfully attended event:\", response.data);\r\n                                                        const aux = events.slice();\r\n                                                        aux.filter(event => event.id === response.data.id).forEach(event => {\r\n                                                            event.hasAttended = true;\r\n                                                        })\r\n                                                        setEvents(aux);\r\n                                                    }).catch(error => {\r\n                                                        console.error(\"Error while attending event:\", error);\r\n                                                    })\r\n                                                }}\r\n                                            />\r\n                                        ) : \"There are no events announced as of now.\"}\r\n                                    </List>\r\n                                }/>\r\n                        </Box>}\r\n\r\n                        {((!isEnrolled(feed))\r\n                            && (!(feed.isCustom || (!feed.parentName)))) &&\r\n                        <Box>\r\n                            <Button size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<Add/>}\r\n                                    onClick={() => {\r\n                                        handleEnrollDialogOpen()\r\n                                    }}\r\n                                    fullWidth\r\n                                    disableElevation>ENROLL\r\n                            </Button>\r\n                        </Box>}\r\n\r\n                        {(isEnrolled(feed)) &&\r\n                        <Box className={classes.button}>\r\n                            <Button size=\"medium\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<RateReviewOutlinedIcon/>}\r\n                                    onClick={() => {\r\n                                        history.push(`/meta/${feed.name}`)\r\n                                    }}\r\n                                    fullWidth\r\n                                    disableElevation>{feed.name} META\r\n                            </Button>\r\n                        </Box>}\r\n    \r\n\r\n\r\n                        {((!feed.isCustom) && (!feed.parentName)) &&\r\n                        <Box className={classes.button}>\r\n                            <Button size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<Add/>}\r\n                                    onClick={() => {\r\n                                        handleSubclubRequestDialogOpen()\r\n                                    }}\r\n                                    fullWidth\r\n                                    disableElevation>REQUEST NEW SUB-CLUB\r\n                            </Button>\r\n                        </Box>}\r\n\r\n\r\n                        {((isEnrolled(feed))\r\n                            && (!(feed.isCustom || (!feed.parentName))) && (feed.moderatorUsername !== AuthService.getUsername())) &&\r\n                        <Box className={classes.button}>\r\n                            <Button size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<Add/>}\r\n                                    onClick={() => {\r\n                                        handleModeratorRequest()\r\n                                    }}\r\n                                    fullWidth\r\n                                    disableElevation>REQUEST TO BE A MODERATOR\r\n                            </Button>\r\n                        </Box>}\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <CreatePost open={postDialogOpen} setOpen={setPostDialogOpen} newPostEvent={handleNewPost}\r\n                        subclub={feed}/>\r\n            {(enrollDialogOpen) &&\r\n            <EnrollPanel open={enrollDialogOpen} setOpenDialog={setEnrollDialogOpen} setEnrolled={handleEnrollment}\r\n                         clickedSubClub={feed}/>}\r\n\r\n            {(subclubRequestDialogOpen) && <RequestSubclub open={subclubRequestDialogOpen} setOpenDialog={setSubclubRequestDialogOpen}club={feed}/>}\r\n\r\n\r\n            <Dialog open={modRequestDialogOpen} onClose={() => {setModRequestDialogOpen(false)}} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Moderator Request</DialogTitle>\r\n                <DialogContent >\r\n                    <p>{modRequestResponse}</p>                        \r\n                </DialogContent>\r\n                <DialogActions>\r\n                            <Button onClick={() => {setModRequestDialogOpen(false)}}color=\"primary\">\r\n                                OK\r\n                            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostFeedLayout;","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport parse from \"html-react-parser\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Menu,\r\n    MenuItem,\r\n    Snackbar,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PostService} from \"../../service/PostService\";\r\nimport {AuthService} from \"../../service/AuthService\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {formatDistance, parseISO} from \"date-fns\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    media: {\r\n       // width: null,\r\n       // height: 300,\r\n       // \"object-fit\": \"contain\",\r\n       // resize: \"inline\",\r\n       // resizeMode: \"contain\",\r\n       // overflow: \"hidden\",\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        cursor: \"pointer\",\r\n    },\r\n    voteLabel: {\r\n        flexGrow: 1,\r\n    },\r\n    postCardContent: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    contentBox: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    contentTypography: {\r\n        maxWidth: theme.spacing(30),\r\n    },\r\n}));\r\n\r\n\r\nexport function PostFeedItem({props}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    // Up-voting & down-voting\r\n    const [vote, setVote] = useState(props.voting);\r\n\r\n    const handleUpVote = () => {\r\n        PostService.upvotePost(props.id).then(response => {\r\n            console.log(response);\r\n            if (response.data === \"\") {\r\n                setSnackbarSeverity(\"error\");\r\n                setSnackbarMessage(\"You are not authorized to vote on this post!\");\r\n                setSnackbarOpen(true);\r\n            } else {\r\n                setVote(response.data.voting);\r\n            }\r\n        }).catch(e => {\r\n            console.error(e);\r\n            setSnackbarSeverity(\"error\");\r\n            if (e.response.status === 403) {\r\n                setSnackbarMessage(\"You are not authorized to vote on this post!\");\r\n            } else {\r\n                setSnackbarMessage(\"Something went wrong!\");\r\n            }\r\n            setSnackbarOpen(true);\r\n        });\r\n    }\r\n\r\n    const handleDownVote = () => {\r\n        PostService.downvotePost(props.id).then(response => {\r\n            if (response.data === \"\") {\r\n                setSnackbarSeverity(\"error\");\r\n                setSnackbarMessage(\"You are not authorized to vote on this post!\");\r\n                setSnackbarOpen(true);\r\n            } else {\r\n                setVote(response.data.voting);\r\n            }\r\n        }).catch(e => {\r\n            console.error(e);\r\n            setSnackbarSeverity(\"error\");\r\n            if (e.response.status === 403) {\r\n                setSnackbarMessage(\"You are not authorized to vote on this post!\");\r\n            } else {\r\n                setSnackbarMessage(\"Something went wrong!\");\r\n            }\r\n            setSnackbarOpen(true);\r\n        });\r\n    }\r\n\r\n    // Snackbar\r\n    const [openSnackbar, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    // Post menu\r\n    const [postMenuAnchorElement, setPostMenuAnchorElement] = React.useState(null);\r\n    const open = Boolean(postMenuAnchorElement);\r\n\r\n    const handleMenuButtonClick = (event) => {\r\n        setPostMenuAnchorElement(event.currentTarget);\r\n    }\r\n\r\n    const handlePostMenuClose = () => {\r\n        setPostMenuAnchorElement(null);\r\n    };\r\n\r\n    // Reporting\r\n    const [reportDialogOpen, setReportDialogOpen] = useState(false);\r\n    const [reportMessage, setReportMessage] = useState(\"\");\r\n\r\n    const handleReportDialogOpen = () => {\r\n        setReportDialogOpen(true);\r\n    };\r\n\r\n    const handleReportDialogClose = () => {\r\n        setReportDialogOpen(false);\r\n        setPostMenuAnchorElement(null);\r\n    };\r\n\r\n    const handleSendReport = () => {\r\n        PostService.reportPost(AuthService.getUsername(), reportMessage, props.id).then(r => {\r\n            console.log(r);\r\n            handleReportDialogClose();\r\n            setSnackbarSeverity(\"success\");\r\n            setSnackbarMessage(\"Thanks for trying to make CoSpace a better place!\");\r\n            setSnackbarOpen(true);\r\n        }).catch(e => {\r\n            console.error(e);\r\n            setSnackbarSeverity(\"error\");\r\n            setSnackbarMessage(\"Something went wrong while reporting the post! Try again later.\");\r\n            setSnackbarOpen(true);\r\n        });\r\n    }\r\n\r\n    const handleAuthorClick = () => history.push(`/profile/${props.author}`);\r\n\r\n\r\n    \r\n    const handleDeletePost = () => {\r\n\r\n       PostService.deleteOwnPost(props.id).then(response => {\r\n            console.log(response.data);\r\n       });\r\n    };\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar onClick={handleAuthorClick} aria-label=\"recipe\" className={classes.avatar}>\r\n                            {props.author.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <CardActions>\r\n                            <IconButton aria-label=\"share\">\r\n                                <ShareIcon/>\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"settings\" onClick={handleMenuButtonClick}>\r\n                                <MoreVertIcon/>\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"post-menu\"\r\n                                anchorEl={postMenuAnchorElement}\r\n                                keepMounted\r\n                                open={open}\r\n                                onClose={handlePostMenuClose}>\r\n                                <MenuItem key=\"report\" onClick={handleReportDialogOpen}>\r\n                                    Report\r\n                                </MenuItem>\r\n                                \r\n                                {AuthService.getUsername() === props.author ? \r\n                                <MenuItem key=\"delete\" onClick={handleDeletePost}>\r\n                                    Delete\r\n                                </MenuItem>\r\n                                : null}\r\n                                \r\n                            </Menu>\r\n                        </CardActions>\r\n                    }\r\n                    title={<Box style={{\"cursor\": \"pointer\"}} onClick={handleAuthorClick}>{props.author}</Box>}\r\n                    subheader={`${formatDistance(parseISO(props.created), new Date(), {addSuffix: true})} on ${props.parentName}`}/>\r\n                <CardContent className={classes.postCardContent}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={1} style={{textAlign: \"center\"}}>\r\n                            <IconButton aria-label=\"up-vote\" onClick={handleUpVote}>\r\n                                <KeyboardArrowUpIcon/>\r\n                            </IconButton>\r\n\r\n                            <Box display=\"flex\" flexDirection=\"center\">\r\n                                <Typography className={classes.voteLabel}\r\n                                            variant=\"body1\"\r\n                                            color=\"textSecondary\">{vote}</Typography>\r\n                            </Box>\r\n\r\n                            <IconButton aria-label=\"down-vote\" onClick={handleDownVote}>\r\n                                <KeyboardArrowDownIcon/>\r\n                            </IconButton>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={11}>\r\n                            <Box className={classes.contentBox}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {props.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                    <Box className={classes.media}>\r\n                                        {parse(props.content)}\r\n                                    </Box>\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog open={reportDialogOpen} onClose={handleReportDialogClose} aria-labelledby=\"report-dialog-title\">\r\n                <DialogTitle id=\"report-dialog-title\">Report</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Why should we remove it? Please write down your rationale.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Rationale\"\r\n                        type=\"multiline\"\r\n                        fullWidth\r\n                        onChange={(event) => {\r\n                            setReportMessage(event.target.value)\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleReportDialogClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSendReport} color=\"primary\">\r\n                        Report\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar open={openSnackbar} autoHideDuration={5000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {PostFeedItem} from \"./PostFeedItem\";\r\nimport {List, makeStyles} from '@material-ui/core';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {PostService} from \"../../service/PostService\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    feedItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function PostFeed({preloadedPosts}) {\r\n    const {feedName, sort = \"today\", page = 0} = useParams();\r\n\r\n    console.log(\"Feed: \", feedName, sort, page);\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [postsInFeed, setPostsInFeed] = useState(preloadedPosts ?? []);\r\n\r\n    // Get posts\r\n    useEffect(() => {\r\n        if (preloadedPosts === undefined) {\r\n            PostService.getPosts(feedName, page, 10, sort).then(response => {\r\n                console.log(`Fetched posts of ${feedName}`);\r\n                console.log(response.data)\r\n                setPostsInFeed(response.data);\r\n            }).catch(e => {\r\n                console.error(e);\r\n                console.log(`No posts in ${feedName}`);\r\n                setPostsInFeed([]);\r\n            });\r\n        } else {\r\n            setPostsInFeed(preloadedPosts);\r\n        }\r\n    }, [feedName, page, preloadedPosts]);\r\n\r\n    return (\r\n        <div>\r\n            <List className={classes.root}>\r\n                {postsInFeed ? postsInFeed.map((post, index) => (\r\n                    <Box key={post.id} className={classes.feedItem}>\r\n                        {<PostFeedItem props={post}/>}\r\n                    </Box>\r\n                )): history.push(\"/notfound\")}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","import {Route, Switch} from \"react-router-dom\";\r\nimport PostFeed from \"../component/post/PostFeed\";\r\n\r\nexport default function PostFeedSwitch() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/feed/:feedName/:sort?/:page?\">\r\n                <PostFeed />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}","import React from 'react';\r\nimport PostFeedLayout from \"../layout/PostFeedLayout\";\r\nimport PostFeedSwitch from \"../router/PostFeedSwitch\";\r\n\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <PostFeedLayout>\r\n            <PostFeedSwitch/>\r\n        </PostFeedLayout>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport {headersWithToken} from \"./headers\";\r\nimport {ADMIN,\r\n        BASE_URL,\r\n        ENROLLED_SUBCLUBS,\r\n        REPORTS,\r\n        SEARCH_MEMBER_BY_NAME,\r\n        SUBCLUB_REQUESTS,\r\n        CREATE_CLUB, CREATE_SUBCLUB, DELETE_REPORT, SUB_CLUB, DELETE_SUB_CLUB} from \"../api_config\";\r\n\r\n\r\nconst searchMembersByName = (username, page, size) => {\r\n    return axios.get(BASE_URL + SEARCH_MEMBER_BY_NAME,headersWithToken({query: username, page: page, size: size}));\r\n}\r\n\r\nconst getEnrolledSubClubs = (username) => {\r\n    return axios.get(BASE_URL + ADMIN + ENROLLED_SUBCLUBS, headersWithToken({username: username}));\r\n}\r\n\r\nconst getPostReports = () => {\r\n    return axios.get(BASE_URL + ADMIN + REPORTS, headersWithToken());\r\n}\r\n\r\nconst getRequestedSubclubs = () => {\r\n    return axios.get(BASE_URL + SUBCLUB_REQUESTS, headersWithToken());\r\n}\r\n\r\nconst createClub = (clubName, clubDetails) => {\r\n    const body = {name:clubName, details:clubDetails}\r\n    return axios.post(BASE_URL + CREATE_CLUB, body, headersWithToken());\r\n}\r\n\r\nconst createSubClub = (body) => {\r\n    return axios.post(BASE_URL + CREATE_SUBCLUB, body, headersWithToken());\r\n}\r\n\r\nconst updateSubClub = (body) => {\r\n    return axios.put(BASE_URL + ADMIN + SUB_CLUB, body, headersWithToken());\r\n}\r\n\r\nconst deleteReport = (reportId) => {\r\n    return axios.post(BASE_URL + ADMIN + DELETE_REPORT, null, headersWithToken({reportId: reportId}));\r\n}\r\n\r\nconst deleteSubClub = (subClubId) => {\r\n    return axios.post(BASE_URL + ADMIN + DELETE_SUB_CLUB, null, headersWithToken({id: subClubId}));\r\n}\r\n\r\nexport const AdminService = {searchMembersByName, getEnrolledSubClubs, getPostReports, getRequestedSubclubs, updateSubClub, createClub, deleteSubClub, createSubClub, deleteReport}\r\n","import Box from \"@material-ui/core/Box\";\r\nimport {Divider, Grid, makeStyles, Paper, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    titleContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    titleIconContainer: {\r\n        marginTop: theme.spacing(0.5),\r\n        marginBottom: theme.spacing(0),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n}));\r\n\r\n\r\nexport default function TitledSection({titleIcon, title, children}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n                <Grid container>\r\n                    <Box key={1} item className={classes.titleIconContainer}>\r\n                        {titleIcon}\r\n                    </Box>\r\n                    <Grid key={2} item className={classes.titleContainer}>\r\n                        <Typography variant=\"h6\" className={classes.sectionTitle}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider}/>\r\n                {children}\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import {ListItem, ListItemText} from \"@material-ui/core\";\r\nimport {Person} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport TitledSection from \"../common/TitledSection\";\r\nimport flatten from \"flat\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\n\r\nexport default function MemberInfo({info}) {\r\n\r\n    const flattened = flatten(info);\r\n\r\n    return (\r\n        <TitledSection title={info.username} titleIcon={<Person/>}>\r\n            <List>\r\n                {Object.keys(flattened).map(key => key !== \"username\" ?\r\n                    <ListItem key={key}>\r\n                        <ListItemText>\r\n                            {`${key}: ${flattened[key]}`}\r\n                        </ListItemText>\r\n                    </ListItem> : null\r\n                )}\r\n            </List>\r\n        </TitledSection>\r\n    );\r\n\r\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\r\nimport {InfoOutlined} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n}));\r\n\r\n\r\nexport default function NoResultsFound() {\r\n    const classes = useStyles();\r\n\r\n    return (<ListItem\r\n        key={\"no-result\"}>\r\n        <ListItemAvatar className={classes.avatarContainer}>\r\n            <Avatar className={classes.avatar}><InfoOutlined/></Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={\"No results found\"}/>\r\n    </ListItem>);\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {AdminService} from '../../service/AdminService';\r\nimport {PostFeedItem} from \"../post/PostFeedItem\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {PostService} from \"../../service/PostService\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport NoResultsFound from \"../common/NoResultsFound\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    gridReportInfoContainer: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    gridHorizontalSection: {\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nfunction ReportedPosts() {\r\n    const classes = useStyles();\r\n    const [postReports, setPostReports] = useState(null);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [selectedReport, setSelectedReport] = useState(null);\r\n    const [selectedPostOwner, setSelectedPostOwner] = useState({});\r\n\r\n    // Get Reports\r\n    useEffect(() => {\r\n        AdminService.getPostReports().then(response => {\r\n            setPostReports(response.data);\r\n        });\r\n    }, [selectedReport]);\r\n\r\n    const handleReportClick = (e, report) => {\r\n        setSelectedReport(report);\r\n        PostService.getPostById(report.postId).then(response => {\r\n            setSelectedPost(response.data);\r\n            AdminService.searchMembersByName(response.data.author, 0, 1).then(response => {\r\n                setSelectedPostOwner(response.data[0]);\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n\r\n        <Grid container>\r\n            <Grid key={1} item xs={4}>\r\n                <Typography variant=\"h6\" className={classes.title}>List of Reports</Typography>\r\n                <Paper variant={\"outlined\"} className={classes.paper}>\r\n                    <List className={classes.root}>\r\n                        {postReports === null || postReports.length === 0 ? <NoResultsFound/> : postReports.map((report) =>\r\n                            <div>\r\n                                <ListItem\r\n                                    button\r\n                                    key={report.postId}\r\n                                    selected={selectedPost && report.postId === selectedPost.id}\r\n                                    alignItems=\"flex-start\"\r\n                                    onClick={(e) => handleReportClick(e, report)}>\r\n                                    <ListItemIcon>\r\n                                        <ReportOutlinedIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={`Reported by: ${report.author}`}\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body2\"\r\n                                                    className={classes.inline}\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    {`Reason: `}\r\n                                                </Typography>\r\n                                                {report.content}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\"/>\r\n                            </div>\r\n                        )}\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n            <Grid className={classes.gridReportInfoContainer} key={2} container xs={8}>\r\n                {selectedPost ?\r\n                    <Box>\r\n\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" className={classes.title}>Reported Post</Typography>\r\n                            <Box className={classes.postFeedItemWrapper}>{selectedPost ?\r\n                                <PostFeedItem key={selectedPost.postId} props={selectedPost}/> : null}\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container>\r\n                            <Grid item key={1} xs={6} className={classes.gridHorizontalSection}>\r\n                                <Typography variant=\"h6\" className={classes.title}>Author Information</Typography>\r\n                                {selectedPostOwner ? <MemberInfo info={selectedPostOwner}/> : null}\r\n                            </Grid>\r\n\r\n                            <Grid item key={2} xs={6} className={classes.gridHorizontalSection}>\r\n                                <Typography variant=\"h6\" className={classes.title}>Actions</Typography>\r\n                                <Grid container>\r\n                                    <Grid item key={1} className={classes.button}>\r\n                                        <Button variant=\"outlined\" onClick={()=>{\r\n                                            // TODO: call kick member function from AdminService\r\n                                        }}>KICK MEMBER from COSPACE</Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item key={2} className={classes.button}>\r\n                                        <Button variant=\"outlined\" onClick = {() => {\r\n                                            AdminService.deleteReport(selectedReport.id).then(response => {\r\n                                                console.log(response.data);\r\n                                                setSelectedReport(null);\r\n                                                setSelectedPost(null);\r\n                                                setSelectedPostOwner(null);\r\n                                            })\r\n                                        }}>REMOVE Report</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                    </Box>\r\n                    : <Typography className={classes.title}>Select a report to see the details.</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default ReportedPosts;\r\n","import {React, useEffect, useState} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {AdminService} from '../../service/AdminService'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"50%\",\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    memberInfo: {\r\n        marginBottom: theme.spacing(2),\r\n    }\r\n}));\r\n\r\n\r\nfunction ViewMemberInfo() {\r\n    const classes = useStyles();\r\n\r\n    const [members, setMembers] = useState([]);\r\n    const [selectedMember, setSelectedMember] = useState(null);\r\n\r\n    const onSearchKeyChange = (e) => {\r\n\r\n        AdminService.searchMembersByName(e.target.value, 0, 10).then(response => {\r\n            if (e.target.value.length > 1) {\r\n                setMembers(response.data);\r\n            } else if (e.target.value === \"\") {\r\n                setMembers([]);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedMember !== null) {\r\n            AdminService.getEnrolledSubClubs(selectedMember.username).then(response => {\r\n                setSelectedMember({...selectedMember, \"sub-clubs\": response.data.map(subClub => subClub.name)});\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <FormControl className={classes.form} variant=\"filled\">\r\n                <Autocomplete\r\n                    id=\"member-search-box\"\r\n                    onInput={onSearchKeyChange}\r\n                    onChange={(e, v) => {\r\n                        console.log(\"On select member:\", v);\r\n                        setSelectedMember(v);\r\n                    }}\r\n                    options={members}\r\n                    getOptionLabel={(option) => option.username}\r\n                    renderInput={(params) => <TextField {...params} label=\"Search member\" variant=\"filled\"/>}\r\n                />\r\n            </FormControl>\r\n\r\n            {selectedMember && <MemberInfo className={classes.memberInfo} info={selectedMember}/>}\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nexport default ViewMemberInfo;","import React from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport QuestionLayout from \"../../layout/QuestionLayout\";\r\nimport {Button, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, TextField} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary\r\n    },\r\n    question: {\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    radioGroup: {\r\n        display: \"flex\",\r\n        flexDirection:\"row\",\r\n        flexGrow:\"1\",\r\n    },\r\n    radioButton: {\r\n        marginLeft:theme.spacing(3)\r\n    }\r\n  }));\r\n\r\n\r\nfunction QuestionTextField({id, callBackOnChange}){\r\n    const choices = [\"Q\",\"A\",\"B\",\"C\",\"D\"];\r\n    return (\r\n    <Box display=\"flex\" flexDirection=\"row\" margin=\"4px\">\r\n            <TextField\r\n            autoFocus\r\n            required\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            id={choices[id]}\r\n            label={choices[id]}\r\n            type=\"email\"\r\n            onChange={event => {callBackOnChange(choices[id], event.target.value)}}\r\n            fullWidth\r\n            />\r\n    </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default function CreateQuestion({callBackOnSave, qid}) {\r\n    const classes = useStyles();\r\n    const [questionObject, setQuestion] = React.useState({\r\n            content:\"\", \r\n            answer1:\"\",\r\n            answer2:\"\",\r\n            answer3:\"\",\r\n            answer4:\"\",\r\n            groundTruth:\"\"\r\n        });\r\n    const id2Field = new Map()\r\n    id2Field.set(\"A\", \"answer1\")\r\n    id2Field.set(\"B\", \"answer2\")\r\n    id2Field.set(\"C\", \"answer3\")\r\n    id2Field.set(\"D\", \"answer4\")\r\n    id2Field.set(\"Q\", \"content\")\r\n    const [radioValue, setRadioValue] = React.useState('');\r\n    const onRadioChange = (event) => {\r\n        const updatingField = id2Field.get(event.target.value);\r\n        const groundTruth = questionObject[updatingField]\r\n        setQuestion({...questionObject, groundTruth:groundTruth});\r\n        setRadioValue(event.target.value);\r\n    };\r\n\r\n    function onSaveClick() {\r\n        callBackOnSave(qid, questionObject);\r\n    }\r\n\r\n    function onTextFieldChange(id, value) {\r\n        const updatingField = id2Field.get(id);\r\n        const tempObj = {...questionObject};\r\n        tempObj[updatingField] = value\r\n        // console.log(tempObj);\r\n        setQuestion(tempObj);\r\n        \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Box>\r\n\r\n            <QuestionLayout\r\n                question={<QuestionTextField id={0} callBackOnChange={onTextFieldChange}/>}\r\n                answer1={<QuestionTextField  id={1} callBackOnChange={onTextFieldChange}/>}\r\n                answer2={<QuestionTextField  id={2} callBackOnChange={onTextFieldChange}/>}\r\n                answer3={<QuestionTextField  id={3} callBackOnChange={onTextFieldChange}/>}\r\n                answer4={<QuestionTextField  id={4} callBackOnChange={onTextFieldChange}/>}\r\n            />\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\" marginTop=\"10px\" flexDirection=\"row\">\r\n                <FormControl component=\"fieldset\"> \r\n                    <FormLabel component=\"legend\">Answer</FormLabel>\r\n                    <RadioGroup className={classes.radioGroup} aria-label=\"realAnswer\" name=\"realAnswer\" value={radioValue} onChange={onRadioChange}>\r\n                        <FormControlLabel className={classes.radioButton} value=\"A\" control={<Radio />} label=\"A\" />\r\n                        <FormControlLabel className={classes.radioButton} value=\"B\" control={<Radio />} label=\"B\" />\r\n                        <FormControlLabel className={classes.radioButton} value=\"C\" control={<Radio />} label=\"C\" />\r\n                        <FormControlLabel className={classes.radioButton} value=\"D\" control={<Radio />} label=\"D\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n                <Button\r\n                    size=\"medium\"\r\n                    style={{margin:\"10px\"}}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => {onSaveClick()}}\r\n                    disableElevation> Save\r\n                </Button>\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CreateQuestion from \"./CreateQuestion\";\r\nimport {Box, Button, Grid} from \"@material-ui/core\";\r\nimport {Add} from \"@material-ui/icons\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection:\"column\",\r\n      height:\"60vh\",\r\n\r\n    },\r\n    questions: {\r\n\r\n    },\r\n    divider: {\r\n        margin:theme.spacing(3)\r\n    }\r\n  }));\r\n\r\n\r\nexport default function CreateQuestionnaire({onSubmitTrigger, callBackQuestions, oldQuestions}) {\r\n    const classes = useStyles();\r\n    const [questionNum, setQuestinNum] = useState(1)\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    useEffect(() => {\r\n        const newlist = questions.concat(oldQuestions)\r\n        callBackQuestions(newlist)\r\n    },[onSubmitTrigger])\r\n\r\n    function isQuestionValid(questionObj){\r\n        if (questionObj.content === \"\" || questionObj.answer1 === \"\" || questionObj.answer2 === \"\" ||\r\n        questionObj.answer3 === \"\" || questionObj.answer4 === \"\" || questionObj.groundTruth === \"\") {\r\n            return false\r\n        }\r\n        else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    function saveQuestionObj(qid, questionObj) {\r\n        if (!isQuestionValid(questionObj)) {\r\n            return\r\n        }\r\n        const templist = [...questions];\r\n        if(qid === questions.length) {\r\n            templist.push(questionObj);\r\n        }\r\n        else {\r\n            templist[qid] = questionObj\r\n        }\r\n        setQuestions(templist);\r\n    }\r\n\r\n\r\n\r\n\r\n    function addNewQuestion(event) {\r\n        setQuestinNum(questionNum + 1);\r\n    }\r\n\r\n    return (\r\n        <Grid className={classes.root}>\r\n\r\n            \r\n            <Box component=\"div\"  overflow=\"visible\" flexGrow={1} display=\"flex\" flexDirection=\"column\"  >\r\n                <Fragment>\r\n                {[...Array(questionNum)].map((quest, i) => {\r\n                    return (<Box key={\"q\"+i.toString()}>\r\n                        <h2>Question {i+1}</h2>\r\n                        <CreateQuestion qid={i} callBackOnSave={saveQuestionObj}/>\r\n\r\n                        {i+1 !== questionNum && (\r\n                            <Divider className={classes.divider}/>\r\n                        )}\r\n                    </Box>)\r\n                }\r\n                )}\r\n                </Fragment>\r\n            </Box>\r\n\r\n            <Button\r\n                size=\"medium\" style={{marginTop:\"20px\"}}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<Add/>}\r\n                onClick={(event) => {addNewQuestion(event)}}\r\n                disableElevation>\r\n            </Button>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {ClubService} from \"../../service/ClubService\";\r\nimport CreateQuestionnaire from \"../questionnaire/CreateQuestionnaire\";\r\nimport {AdminService} from \"../../service/AdminService\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from \"@material-ui/core\";\r\n\r\nimport {delay} from \"../../util/async\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 300,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 0,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    tagText: {\r\n        display: 'flex',\r\n        width: 100,\r\n        flexWrap: 'wrap',\r\n    },\r\n\r\n}));\r\n\r\nfunction ManageClub() {\r\n    const classes = useStyles();\r\n\r\n    const [isVisible, setIsVisible] = React.useState(false);\r\n\r\n\r\n    // Dialog ----------------------------------\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDeleteSubClub = () => {\r\n        AdminService.deleteSubClub(selectedClub.id).then(response => {\r\n            console.log(response.data);\r\n        });\r\n    }\r\n\r\n\r\n    const editAndSubmit = () => {\r\n        let selectedClubCopy = JSON.parse(JSON.stringify(selectedClub))\r\n        selectedClubCopy.questions = questions;\r\n        setSelectedClub(selectedClubCopy);\r\n\r\n\r\n        const createObject = {\r\n            id: selectedClub.id,\r\n            name: selectedClub.name,\r\n            parentName: selectedClub.parentName,\r\n            questions: questions,\r\n            details: selectedClub.details\r\n        }\r\n\r\n        AdminService.updateSubClub(createObject).then((response) => {\r\n            delay(2000).then(() => window.location.reload());\r\n        })\r\n        setOpen(false);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // ------------------------ QUESTIONNAIRE ------------------------\r\n\r\n    const [openQuestionnaireDialog, setQuestionnaireDialog] = React.useState(false);\r\n    const [submitQuestionnaireTrigger, setSubmitQuestionnaireTrigger] = React.useState(false);\r\n    const [questions, setQuestions] = React.useState([]);\r\n\r\n    const onSubmitQuestionnaire = () => {\r\n        setSubmitQuestionnaireTrigger(!submitQuestionnaireTrigger);\r\n        setQuestionnaireDialog(false);\r\n\r\n        console.log(\"new questions:\", questions);\r\n        let selectedClubCopy = JSON.parse(JSON.stringify(selectedClub))\r\n        selectedClubCopy.questions = questions;\r\n        setSelectedClub(selectedClubCopy);\r\n\r\n    };\r\n\r\n    const handleClickOpenQuestionnaireDialog = () => {\r\n        setQuestionnaireDialog(true);\r\n    };\r\n\r\n    const handleClickCloseQuestionnaireDialog = () => {\r\n        setQuestionnaireDialog(false);\r\n    };\r\n\r\n    const [subClubs, setSubClubs] = useState([]);\r\n    useEffect(() => {\r\n        ClubService.getSubClubs().then(response => {\r\n            console.log(\"All subclasses\", response.data);\r\n            setSubClubs(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const [selectedClubRequestName, setSelectedClubRequestName] = React.useState(\"\");\r\n    const [selectedClub, setSelectedClub] = React.useState({\r\n            created: \"2021-05-26T14:43:28.090+00:00\",\r\n            details: \"\",\r\n            id: 102,\r\n            moderatorUsername: \"\",\r\n            name: \"\",\r\n            parentName: \"\",\r\n            questions: [],\r\n            rating: 0\r\n        }\r\n    );\r\n\r\n    const handleClubRequestNameChange = (event) => {\r\n        setSelectedClubRequestName(event.target.value);\r\n        setSelectedClub(subClubs.filter(subclub => subclub.name === event.target.value)[0]);\r\n        if (event.target.value === \"\") {\r\n            setIsVisible(false);\r\n        } else {\r\n            setIsVisible(true);\r\n        }\r\n    };\r\n\r\n    const handleClubNameChange = (event) => {\r\n        let selectedClubCopy = JSON.parse(JSON.stringify(selectedClub))\r\n        selectedClubCopy.name = event.target.value;\r\n        setSelectedClub(selectedClubCopy);\r\n    };\r\n\r\n    const handleClubDescriptionChange = (event) => {\r\n        let selectedClubCopy = JSON.parse(JSON.stringify(selectedClub))\r\n        selectedClubCopy.details = event.target.value;\r\n        setSelectedClub(selectedClubCopy);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Container>\r\n                <div>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel>Sub-club</InputLabel>\r\n                        <Select\r\n                            value={selectedClubRequestName.name}\r\n                            onChange={handleClubRequestNameChange}\r\n                            inputProps={{\r\n                                name: '',\r\n                            }}>\r\n                            <option aria-label=\"None\" value=\"\"/>\r\n\r\n                            {subClubs.map((subClub) => (\r\n                                <option value={subClub.name}>{subClub.name}</option>\r\n                            ))}\r\n                        </Select>\r\n                        <FormHelperText>Select a sub-club to edit</FormHelperText>\r\n                    </FormControl>\r\n                </div>\r\n            </Container>\r\n\r\n\r\n            {isVisible ? <Grid container spacing={3}>\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    </Grid>\r\n                    <Grid item xs={5} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    </Grid>\r\n                    <Grid item xs={1} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                        <Container>\r\n                            <div>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"standard-full-width\"\r\n                                    label=\"Sub-club name\"\r\n                                    style={{margin: 8}}\r\n                                    placeholder=\"Sub-club name\"\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{shrink: true,}}\r\n                                    value={selectedClub ? selectedClub.name : \"\"}\r\n                                    onChange={handleClubNameChange}\r\n                                />\r\n                            </div>\r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n\r\n                        <Container>\r\n                            <div>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"standard-full-width\"\r\n                                    label=\"Sub-club description\"\r\n                                    style={{margin: 8}}\r\n                                    placeholder=\"Sub-club description\"\r\n                                    helperText=\"Description should include bla bla\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{shrink: true,}}\r\n                                    value={selectedClub ? selectedClub.details : \"\"}\r\n                                    onChange={handleClubDescriptionChange}\r\n                                />\r\n                            </div>\r\n                        </Container>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                        <Container>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={handleClickOpenQuestionnaireDialog}\r\n                            >\r\n                                Create a new questionnaire\r\n                            </Button>\r\n\r\n                            {((questions.length < 3) &&\r\n                                <p style={{marginTop: \"5px\"}}>Please add {Math.max(0, 3 - questions.length)} or more\r\n                                    Questions</p>)}\r\n\r\n                            <Dialog\r\n                                open={openQuestionnaireDialog} onClose={handleClickCloseQuestionnaireDialog}\r\n                                aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={\"md\"}>\r\n                                <DialogTitle id=\"form-dialog-title\">Create a new questionnaire</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText>\r\n                                        To edit this sub-club, please create a new questionnaire;\r\n                                    </DialogContentText>\r\n\r\n                                    <CreateQuestionnaire onSubmitTrigger={submitQuestionnaireTrigger}\r\n                                                         oldQuestions={questions} callBackQuestions={setQuestions}/>\r\n\r\n\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClickCloseQuestionnaireDialog} color=\"primary\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                    <Button onClick={onSubmitQuestionnaire} color=\"primary\">\r\n                                        Add\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                        <Container>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={handleClickOpen}\r\n                            >\r\n                                Apply\r\n                            </Button>\r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                        <Container>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={handleDeleteSubClub}\r\n                            >\r\n                                Delete this sub-club\r\n                            </Button>\r\n                        </Container>\r\n                    </Grid>\r\n\r\n                    <Container>\r\n                        <Dialog\r\n                            fullScreen={fullScreen}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"responsive-dialog-title\"\r\n                        >\r\n                            <DialogTitle\r\n                                id=\"responsive-dialog-title\">{\"Create a club with the following information?\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    <Typography>Club name: {selectedClub.name}</Typography>\r\n                                    <Typography>Club description: {selectedClub.details} </Typography>\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={editAndSubmit} color=\"primary\" autoFocus>\r\n                                    Apply changes\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Container>\r\n\r\n                </Grid>\r\n                : null}\r\n\r\n\r\n        </Box>);\r\n\r\n}\r\n\r\n\r\nexport default ManageClub;\r\n","import React, {useEffect} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Button,\r\n    Chip,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport CreateQuestionnaire from \"../questionnaire/CreateQuestionnaire\"\r\nimport {AdminService} from \"../../service/AdminService\";\r\nimport {ClubService} from \"../../service/ClubService\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 300,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 0,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    tagText: {\r\n        display: 'flex',\r\n        width: 100,\r\n        flexWrap: 'wrap',\r\n    },\r\n    questionnaireDialog: {\r\n        minHeight: '80vh',\r\n        maxHeight: '80vh',\r\n    },\r\n    selectFromReqs: {\r\n        marginLeft: \"5vh\"\r\n    }\r\n\r\n}));\r\n\r\nfunction CreateClub() {\r\n    const classes = useStyles();\r\n    const [canCreate, setCanCreate] = React.useState(false);\r\n\r\n    // ------------------------ CREATE CLUB DIALOG ------------------------\r\n    const [openClubDialog, setClubDialog] = React.useState(false);\r\n    const [createClubName, setCreateClubName] = React.useState(\"\");\r\n    const [createClubDetails, setCreateClubDetails] = React.useState(\"\");\r\n    const [refreshClubsTrigger, setRefreshClubsTrigger] = React.useState(false);\r\n\r\n    const handleCloseCreateClub = () => {\r\n        setCreateClubDetails(\"\")\r\n        setCreateClubName(\"\")\r\n\r\n        setClubDialog(false);\r\n    };\r\n\r\n    const handleSubmitCreateClub = () => {\r\n        AdminService.createClub(createClubName, createClubDetails).then((response) => {\r\n            setRefreshClubsTrigger(!refreshClubsTrigger);\r\n        })\r\n        handleCloseCreateClub()\r\n    };\r\n\r\n    const onClubCreateNameChange = (event) => {\r\n        setCreateClubName(event.target.value);\r\n    }\r\n\r\n    const onClubCreateDetailsChange = (event) => {\r\n        setCreateClubDetails(event.target.value);\r\n    }\r\n\r\n    // ------------------------ QUESTIONNAIRE ------------------------\r\n\r\n    const [openQuestionnaireDialog, setQuestionnaireDialog] = React.useState(false);\r\n    const [submitQuestionnaireTrigger, setSubmitQuestionnaireTrigger] = React.useState(false);\r\n    const [questions, setQuestions] = React.useState([]);\r\n\r\n    const onSubmitQuestionnaire = () => {\r\n        setSubmitQuestionnaireTrigger(!submitQuestionnaireTrigger);\r\n        setQuestionnaireDialog(false);\r\n    };\r\n\r\n    const handleClickOpenQuestionnaireDialog = () => {\r\n        setQuestionnaireDialog(true);\r\n    };\r\n\r\n    const handleClickCloseQuestionnaireDialog = () => {\r\n        setQuestionnaireDialog(false);\r\n    };\r\n\r\n\r\n    // ------------------------ REQUESTED/NEW SUBCLUBS ------------------------\r\n\r\n    const [requests, setRequests] = React.useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        AdminService.getRequestedSubclubs().then((response) => {\r\n            setRequests(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const [selectedSubClubRequest, setSelectedSubClubRequest] = React.useState({});\r\n    const [subclubName, setSubclubName] = React.useState(\"\");\r\n\r\n    const handleClubRequestNameChange = (event) => {\r\n        if (event.target.value === \"\" || event.target.value === undefined) {\r\n            setClubName(\"\")\r\n            setSubclubName(\"\")\r\n            return\r\n        }\r\n        const requestObj = JSON.parse(event.target.value)\r\n        setSelectedSubClubRequest(requestObj);\r\n        setSubclubName(requestObj.subClubName);\r\n        if (createdClubs.includes(requestObj.clubName)) {\r\n            setClubName(requestObj.clubName);\r\n        } else {\r\n            setClubName(\"\")\r\n        }\r\n    };\r\n\r\n    const handleSubClubNameTextChange = (event) => {\r\n        setSubclubName(event.target.value)\r\n        if (!(requests.map((req) => {\r\n            return req.subClubName\r\n        }).includes(event.target.value))) {\r\n        }\r\n    }\r\n\r\n    // ------------------------ CLUBS ------------------------\r\n    const [createdClubs, setCreatedClubs] = React.useState([]);\r\n    const [clubName, setClubName] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        ClubService.getClubs().then((response) => {\r\n            setCreatedClubs(response.data.map((clb) => {\r\n                return clb.name\r\n            }));\r\n        })\r\n    }, [refreshClubsTrigger]);\r\n\r\n\r\n    const handleClubNameChange = (event) => {\r\n        setClubName(event.target.value);\r\n    };\r\n\r\n    // ------------------------ SUBCLUB DETAILS ------------------------\r\n    const [subclubDescription, setSubClubDescription] = React.useState(\"\");\r\n\r\n    const handleClubDescriptionChange = (event) => {\r\n        setSubClubDescription(event.target.value);\r\n    };\r\n\r\n    // ------------------------ KEYWORDS ------------------------\r\n    const [chipData, setChipData] = React.useState([]);\r\n\r\n    const handleChipDelete = (chipToDelete) => () => {\r\n        setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n    };\r\n    // ------------------------------------------------\r\n\r\n    const [tag, setTag] = React.useState(\"\");\r\n\r\n    const handleTagTextFieldChange = (event) => {\r\n        setTag(event.target.value);\r\n    };\r\n\r\n    const addTagClick = () => {\r\n        const newChips = [];\r\n        var i;\r\n        var flag = false;\r\n        for (i = 0; i < chipData.length; i++) {\r\n            if (chipData[i].label === tag) {\r\n                flag = true;\r\n            }\r\n            chipData[i].key = i;\r\n            newChips.push(chipData[i]);\r\n        }\r\n        if (flag) {\r\n\r\n        } else {\r\n            newChips[i] = {key: i, label: tag};\r\n        }\r\n        setChipData(newChips);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (questions.length >= 3 && subclubName !== \"\" && clubName !== \"\" && subclubDescription !== \"\") {\r\n            setCanCreate(true);\r\n        } else {\r\n            setCanCreate(false)\r\n        }\r\n    }, [questions, subclubName, clubName, subclubDescription])\r\n\r\n\r\n    const handleSubmitCreation = (event) => {\r\n        const createObject = {\r\n            name: subclubName,\r\n            parentName: clubName,\r\n            questions: questions,\r\n            details: subclubDescription\r\n        }\r\n        if (chipData.length !== 0) {\r\n            createObject.details += \" Keywords: \";\r\n            chipData.forEach(chp => {\r\n                createObject.details += \" \" + chp.label\r\n            });\r\n        }\r\n        AdminService.createSubClub(createObject).then((response) => {\r\n            console.log(response.data);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Box>\r\n\r\n            <Dialog open={openClubDialog} onClose={handleCloseCreateClub} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add a new parent club</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To add a new club to this website, please enter a club name and a club description.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Club name\"\r\n                        onChange={onClubCreateNameChange}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Club description\"\r\n                        onChange={onClubCreateDetailsChange}\r\n                        type=\"email\"\r\n\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseCreateClub} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button disabled={createClubName === \"\" || createClubDetails === \"\"}\r\n                            onClick={handleSubmitCreateClub} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Container>\r\n                        <div>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel>Sub-club requests</InputLabel>\r\n                                <Select\r\n                                    onChange={handleClubRequestNameChange}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    {requests.map((req, i) => (\r\n                                        <option key={i}\r\n                                                value={JSON.stringify(req)}>{req.clubName} / {req.subClubName}</option>\r\n                                    ))}\r\n                                </Select>\r\n                                <FormHelperText>Select a sub-club request</FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n                <Grid item xs={5} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Container>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel>A parent club</InputLabel>\r\n                            <Select\r\n                                required\r\n                                onChange={handleClubNameChange}\r\n                                value={clubName}\r\n                            >\r\n                                <option aria-label=\"None\" value=\"\"/>\r\n                                {createdClubs.map((clb, i) => (\r\n                                    <option key={i} value={clb}>{clb}</option>\r\n                                ))}\r\n                            </Select>\r\n                            <FormHelperText>Select a parent club or add a new one</FormHelperText>\r\n                        </FormControl>\r\n                    </Container>\r\n                </Grid>\r\n                <Grid item xs={1} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <IconButton aria-label=\"add\" onClick={() => {\r\n                        setClubDialog(true)\r\n                    }}>\r\n                        <AddCircleOutlineIcon/>\r\n                    </IconButton>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Container>\r\n                        <div>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"standard-full-width\"\r\n                                label=\"Sub-club name\"\r\n                                style={{margin: 8}}\r\n                                placeholder=\"Sub-club name\"\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{shrink: true,}}\r\n                                value={subclubName}\r\n                                onChange={handleSubClubNameTextChange}\r\n                            />\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n\r\n                    <Container>\r\n                        <div>\r\n                            <TextField\r\n                                required\r\n                                id=\"standard-full-width\"\r\n                                label=\"Sub-club description\"\r\n                                style={{margin: 8}}\r\n                                placeholder=\"Sub-club description\"\r\n                                helperText=\"Description should include bla bla\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{shrink: true,}}\r\n                                value={subclubDescription}\r\n                                onChange={handleClubDescriptionChange}\r\n                            />\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <div className={classes.root}><Typography>Related keywords</Typography></div>\r\n                    <Container>\r\n                        <div className={classes.root}>\r\n\r\n                            {(chipData.length === 0 && (\r\n                                <Chip\r\n                                    label=\"Empty\"\r\n                                    className={classes.chip}/>))}\r\n\r\n                            {chipData.map((data) => {\r\n                                return (\r\n                                    <li key={data.key}>\r\n                                        <Chip\r\n                                            label={data.label}\r\n                                            onDelete={handleChipDelete(data)}\r\n                                            className={classes.chip}\r\n                                        />\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n\r\n                <Grid item xs={5} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Typography className={classes.root}>Add new keyword</Typography>\r\n                    <Container>\r\n                        <div>\r\n                            <TextField\r\n                                placeholder=\"some-tag\"\r\n                                className={clsx(classes.margin, classes.textField)}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">#</InputAdornment>,\r\n                                }}\r\n                                value={tag}\r\n                                onChange={handleTagTextFieldChange}\r\n                            />\r\n                        </div>\r\n                    </Container>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <Container>\r\n                        <IconButton aria-label=\"add\" onClick={addTagClick}>\r\n                            <AddCircleOutlineIcon/>\r\n                        </IconButton>\r\n                    </Container>\r\n\r\n                </Grid>\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Container>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={handleClickOpenQuestionnaireDialog}\r\n                        >\r\n                            Add a questionnaire\r\n                        </Button>\r\n\r\n                        {((questions.length < 3) &&\r\n                            <p style={{marginTop: \"5px\"}}>Please add {Math.max(0, 3 - questions.length)} or more\r\n                                Questions</p>)}\r\n\r\n                        <Dialog\r\n                            open={openQuestionnaireDialog} onClose={handleClickCloseQuestionnaireDialog}\r\n                            aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={\"md\"}>\r\n                            <DialogTitle id=\"form-dialog-title\">Create a questionnaire</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    To add a new sub-club to this website, please create a questionnaire;\r\n                                </DialogContentText>\r\n\r\n                                <CreateQuestionnaire onSubmitTrigger={submitQuestionnaireTrigger}\r\n                                                     oldQuestions={questions} callBackQuestions={setQuestions}/>\r\n\r\n\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClickCloseQuestionnaireDialog} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={onSubmitQuestionnaire} color=\"primary\">\r\n                                    Add\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Container>\r\n                </Grid>\r\n                <Grid item xs={6} style={{maxHeight: '100vh', overflow: 'auto'}}>\r\n                    <Container>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={!canCreate}\r\n                            onClick={handleSubmitCreation}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Container>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n        </Box>);\r\n\r\n}\r\n\r\n\r\nexport default CreateClub;","import {Route, Switch} from \"react-router-dom\";\r\nimport ReportedPosts from \"../component/admin/ReportedPosts\";\r\nimport ViewMemberInfo from \"../component/admin/ViewMemberInfo\";\r\nimport ManageClub from \"../component/admin/ManageClub\";\r\nimport CreateClub from \"../component/admin/CreateClub\";\r\n\r\nexport default function AdminPanelSwitch() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/admin/create-club\">\r\n                <CreateClub/>\r\n            </Route>\r\n            <Route path=\"/admin/manage-club\">\r\n                <ManageClub/>\r\n            </Route>\r\n            <Route path=\"/admin/view-member-info\">\r\n                <ViewMemberInfo/>\r\n            </Route>\r\n            <Route path=\"/admin/reported-posts\">\r\n                <ReportedPosts/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Divider, Typography} from \"@material-ui/core\";\r\nimport CoSpaceTreeViewMenu from \"../component/common/CoSpaceTreeViewMenu\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SupervisorAccount} from \"@material-ui/icons\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst adminMenu = [\r\n    {\r\n        text: \"Clubs & Sub-clubs\",\r\n        children: [\r\n            {\r\n                text: \"Create club\",\r\n                path: \"/admin/create-club\"\r\n            },\r\n            {\r\n                text: \"Manage club\",\r\n                path: \"/admin/manage-club\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        text: \"Members\",\r\n        children: [\r\n            {\r\n                text: \"View member information\",\r\n                path: \"/admin/view-member-info\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        text: \"Reports\",\r\n        children: [\r\n            {\r\n                text: \"Reported posts\",\r\n                path: \"/admin/reported-posts\"\r\n            },\r\n        ]\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    gridLeftColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(0),\r\n    },\r\n    gridRightColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\n\r\nfunction AdminPanelLayout({children}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n    const onItemClick = (item) => {\r\n        console.log(item);\r\n        console.log(item.path);\r\n        history.push(item.path);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container className={classes.root}>\r\n\r\n            <Grid item xs={3} className={classes.gridLeftColumnBox}>\r\n                <Box>\r\n                    {/*<Typography variant=\"h4\">Menu</Typography>*/}\r\n                    {/*<Divider className={classes.divider}/>*/}\r\n                    <CoSpaceTreeViewMenu title={\"Menu\"}\r\n                                         titleIcon={<SupervisorAccount/>}\r\n                                         menuItems={adminMenu}\r\n                                         defaultExpanded={adminMenu.map(menuItem => menuItem.text)}\r\n                                         callbackOnTreeItemClick={onItemClick}/>\r\n                </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={9} className={classes.gridRightColumnBox}>\r\n                <Typography variant=\"h4\">Administration Panel</Typography>\r\n                <Divider className={classes.divider}/>\r\n                {children}\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminPanelLayout;","import React from \"react\";\r\nimport AdminPanelSwitch from \"../router/AdminPanelSwitch\";\r\nimport AdminPanelLayout from \"../layout/AdminPanelLayout\";\r\n\r\nfunction AdminPage() {\r\n    return (\r\n        <AdminPanelLayout>\r\n            <AdminPanelSwitch/>\r\n        </AdminPanelLayout>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminPage;","import axios from 'axios';\r\nimport {BASE_URL, MEMBER, PRIVATE_MESSAGE} from \"../api_config.js\";\r\nimport {headersWithToken} from \"./headers\";\r\n\r\n\r\nconst getPrivateMessages = () => {\r\n    return axios.get(BASE_URL + MEMBER + PRIVATE_MESSAGE, headersWithToken())\r\n}\r\n\r\n\r\nconst send = (receiverUsername, content) => {\r\n    return axios.post(BASE_URL + MEMBER + PRIVATE_MESSAGE, {\r\n        receiverUsername: receiverUsername,\r\n        content: content\r\n    }, headersWithToken())\r\n}\r\n\r\nexport const PrivateMessagingService = {getPrivateMessages, send};","import {Container, Divider, Grid, Paper, Typography} from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {AuthService} from \"../../service/AuthService\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {PrivateMessagingService} from \"../../service/PrivateMessagingService\"\r\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\r\nimport {MeetingRoom, SupervisorAccount} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionBody: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    sectionRoot: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    usernameContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    dateRegisteredContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\n\r\nexport default function AboutMember({hasCommonSubClub, isSelf, username, timeRegistered, numberOfPostsInLastWeek}) {\r\n    console.log(\"Populating AboutMember section: \" + username);\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper variant=\"outlined\">\r\n            <Box className={classes.sectionRoot}>\r\n\r\n                <Grid container className={classes.usernameContainer}>\r\n                    <Grid key={1} item className={classes.avatarContainer}>\r\n                        <Avatar className={classes.avatar}> {username[0].toUpperCase()} </Avatar>\r\n                    </Grid>\r\n                    <Grid key={2} item>\r\n                        <Typography variant=\"h5\">\r\n                            {username}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {numberOfPostsInLastWeek !== undefined &&\r\n                    <Box><Divider className={classes.divider}/>\r\n                        <Grid container className={classes.divider} justify=\"center\">\r\n                            <Grid key={2} item>\r\n                                <Container>\r\n                                    <Typography variant=\"h6\">\r\n                                        {numberOfPostsInLastWeek}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        {\"posts last week\"}\r\n                                    </Typography>\r\n                                </Container>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                }\r\n\r\n                <Divider className={classes.divider}/>\r\n                <Grid container className={classes.dateRegisteredContainer}>\r\n                    <Grid key={1} item>\r\n                        <Container><CakeIcon/> </Container>\r\n                    </Grid>\r\n                    <Grid key={2} item>\r\n                        <Typography variant=\"body1\">\r\n                            {`Registered on ${new Date(timeRegistered).toLocaleString(navigator.language, {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: 'numeric'\r\n                            })}`}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider}/>\r\n\r\n                {\r\n                    isSelf ? null :\r\n                        <Grid container className={classes.buttonContainer}>\r\n                            <Tooltip\r\n                                title={!hasCommonSubClub ? \"You are not a member of a common club or sub club!\" : \"Send a private message!\"}>\r\n                                <span className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        startIcon={<EmailOutlinedIcon/>}\r\n                                        disabled={!hasCommonSubClub}\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        onClick={() => {\r\n\r\n                                            PrivateMessagingService.send(username, \"\").then(response => {\r\n                                                console.log(response.data);\r\n                                                history.push(\"/pm\");\r\n                                            })\r\n\r\n                                        }}\r\n                                    >Send Message</Button>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                }\r\n\r\n                {AuthService.getUsername() === username && <Box>\r\n                    <Grid container className={classes.buttonContainer}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<MeetingRoom/>}\r\n                            className={classes.button}\r\n                            onClick={(event) => {\r\n                                AuthService.logout()\r\n                                history.push(\"/sign-in\")\r\n                            }}\r\n                        >\r\n                            Logout\r\n                        </Button>\r\n\r\n                        {AuthService.getAuthRoles().includes(\"ADMIN\") && <Button\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            startIcon={<SupervisorAccount/>}\r\n                            className={classes.button}\r\n                            onClick={(event) => {\r\n                                history.push(\"/admin\")\r\n                            }}\r\n                        >\r\n                            Admin Panel\r\n                        </Button>}\r\n                    </Grid>\r\n                </Box>\r\n                }\r\n\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Divider} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ClubTree from '../component/common/ClubTree';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {AccountCircle, FiberNew, PublicOutlined, TrendingUp} from \"@material-ui/icons\";\r\nimport {ToggleButton, ToggleButtonGroup} from \"@material-ui/lab\";\r\nimport PostFeed from \"../component/post/PostFeed\";\r\nimport {MemberService} from \"../service/MemberService\";\r\nimport AboutMember from \"../component/profile/AboutMember\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AuthService} from \"../service/AuthService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridContainer: {},\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    feedItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    sectionTitle: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    feedTitle: {\r\n        flexGrow: 1\r\n    },\r\n    gridItem: {\r\n        maxHeight: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    gridLeftColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(2.5),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n    gridMiddleColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    gridRightColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(0),\r\n        marginRight: theme.spacing(2.5),\r\n    },\r\n    sectionBox: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    sortingFeedToggleGroup: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\n\r\nexport default function ProfilePage() {\r\n    const params = useParams();\r\n    const username = params.username;\r\n\r\n    console.log(\"Profile Page: \" + username);\r\n\r\n    const classes = useStyles();\r\n\r\n    const [user, setUser] = useState();\r\n    const [commonClubsAndSubClubs, setCommonClubsAndSubClubs] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n    const [subClub, setSubClub] = useState({name: \"Loading...\"});\r\n    const [sortingOrder, setSortingOrder] = React.useState('new');\r\n\r\n    const handleSortingOrder = (event) => {\r\n        console.log(\"Sorting order: \" + event.target.value);\r\n        setSortingOrder(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        MemberService.getUserByName(username).then(response => {\r\n            setUser(response.data);\r\n        });\r\n    }, [])\r\n\r\n\r\n    // Get the member's enrolled sub-clubs\r\n    useEffect(() => {\r\n        MemberService.getCommonSubClubs(username).then(response => {\r\n            console.log(`Common sub-clubs of ${username} and ${AuthService.getUsername()}`, response.data);\r\n            const clubsToSubClubs = {};\r\n            response.data.forEach(aSubClub => {\r\n                if (!(aSubClub.parentName in clubsToSubClubs)) {\r\n                    clubsToSubClubs[aSubClub.parentName] = []\r\n                }\r\n                clubsToSubClubs[aSubClub.parentName].push(aSubClub);\r\n            });\r\n            const clubsAsList = [];\r\n            for (let k in clubsToSubClubs) {\r\n                clubsAsList.push({name: k, children: clubsToSubClubs[k]})\r\n            }\r\n            setCommonClubsAndSubClubs(clubsAsList);\r\n        }).catch(error => {\r\n            console.error(`Error while fetching common sub-clubs of ${username} and ${AuthService.getUsername()}`, error);\r\n        });\r\n    }, [username]);\r\n\r\n    const handleClubTreeItemClick = (node) => {\r\n        setSubClub(node);\r\n    }\r\n\r\n    useEffect(() => {\r\n        MemberService.getPostsByAuthorAndSubClub(username, subClub.name).then(response => {\r\n            console.log(`Posts of ${username} on ${subClub.name}`, response.data);\r\n            setPosts(response.data);\r\n        }).catch(error => {\r\n            console.error(`Error while fetching posts of ${username} on ${subClub.name}`, error);\r\n        })\r\n    }, [username, subClub]);\r\n\r\n    const isSelf = AuthService.getUsername() === username;\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} className={classes.gridContainer}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridLeftColumnBox}>\r\n\r\n                        <Box className={classes.sectionBox}>\r\n                            <ClubTree\r\n                                titleIcon={isSelf ? <AccountCircle/> : <PublicOutlined/>}\r\n                                callbackOnTreeItemClick={handleClubTreeItemClick}\r\n                                clubs={commonClubsAndSubClubs}\r\n                                title={isSelf ? \"Your Clubs\" : \"Common Clubs\"}/>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.gridItem}>\r\n                    <Box className={classes.gridMiddleColumnBox}>\r\n                        <Box display=\"flex\">\r\n                            <ToggleButtonGroup\r\n                                className={classes.sortingFeedToggleGroup}\r\n                                value={sortingOrder}\r\n                                exclusive\r\n                                onChange={handleSortingOrder}\r\n                                aria-label=\"text alignment\">\r\n                                <ToggleButton value=\"new\" aria-label=\"centered\">\r\n                                    <FiberNew/>\r\n                                </ToggleButton>\r\n                                <ToggleButton value=\"top\" aria-label=\"right aligned\">\r\n                                    <TrendingUp/>\r\n                                </ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Box>\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        <PostFeed preloadedPosts={posts} subclub={subClub.name}/>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridRightColumnBox}>\r\n                        <Box className={classes.sectionBox}>\r\n                            <AboutMember \r\n                                        hasCommonSubClub = {commonClubsAndSubClubs.length > 0}\r\n                                        isSelf = {isSelf}\r\n                                        username={username}\r\n                                        timeRegistered={user ? user.created : null }\r\n                            />\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Box, Typography} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: \"5%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        marginTop: \"2%\"\r\n    },\r\n});\r\n\r\nexport default function NotFoundPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Container component=\"main\" className={classes.root}>\r\n            <Typography variant=\"h2\">\r\n                Page not found :(\r\n            </Typography>\r\n            <Box className={classes.button}>\r\n                <Button variant=\"outlined\"\r\n                        onClick={() => history.push(\"/\")}>\r\n                    Go to home page\r\n                </Button></Box>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport {Link, Typography} from \"@material-ui/core\";\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://github.com/hu-overengineers\">\r\n                overengineers\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from \"../component/common/Copyright\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {delay} from \"../util/async\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUpPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n\r\n    const [open, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"uname\"\r\n                                label=\"Username\"\r\n                                name=\"uname\"\r\n                                autoComplete=\"username\"\r\n                                value={username}\r\n                                onChange={(event) => {\r\n                                    setUsername(event.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                value={email}\r\n                                onChange={(event) => {\r\n                                    setEmail(event.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={(event) => {\r\n                                    setPassword(event.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={(event) => {\r\n                            event.preventDefault();\r\n                            console.log(\"Sign up button clicked.\");\r\n                            AuthService.register({\r\n                                \"email\": email,\r\n                                \"username\": username,\r\n                                \"password\": password\r\n                            }).then(r => {\r\n                                console.log(\"Response: \" + r.data.toString())\r\n                                setSnackbarSeverity(\"success\");\r\n                                setSnackbarMessage(\"You've registered successfully!\");\r\n                                setSnackbarOpen(true);\r\n                                delay(1000).then(() => {\r\n                                        history.push(\"/sign-in\");\r\n                                    }\r\n                                );\r\n                            }).catch(e => {\r\n                                setSnackbarSeverity(\"error\");\r\n                                if (e.response.status === 409) {\r\n                                    setSnackbarMessage(e.response.data);\r\n                                } else {\r\n                                    setSnackbarMessage(\"Something went wrong: \" + e.response.data.toString());\r\n                                }\r\n                                setSnackbarOpen(true);\r\n                            })\r\n                        }}>\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/sign-in\" variant=\"body2\">\r\n                                Already have an account? Sign in.\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright/>\r\n            </Box>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Copyright from \"../component/common/Copyright\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {delay} from \"../util/async\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignInPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [username, setUsername] = React.useState(\"\");\r\n\r\n    const [open, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n\r\n                <Avatar className={classes.avatar}> <LockOutlinedIcon/> </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\"> Sign in </Typography>\r\n\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={(event) => {\r\n                            setUsername(event.target.value)\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => {\r\n                            setPassword(event.target.value)\r\n                        }}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={(event) => {\r\n                            event.preventDefault();\r\n                            console.log(\"Sign in button clicked.\");\r\n                            AuthService.login(username, password).then(r => {\r\n                                console.log(\"Response: \" + JSON.stringify(r.data));\r\n                                AuthService.saveJwtToken(r.data.token);\r\n                                AuthService.saveAuthRoles(r.data.auth);\r\n                                setSnackbarSeverity(\"success\");\r\n                                setSnackbarMessage(\"Welcome back!\");\r\n                                setSnackbarOpen(true);\r\n\r\n                                delay(1000).then(() => {\r\n                                    history.push(\"/\")\r\n                                })\r\n                            }).catch(e => {\r\n                                setSnackbarSeverity(\"error\");\r\n                                if (e.response !== undefined && e.response.status === 401) {\r\n                                    setSnackbarMessage(\"Entered credentials are incorrect.\");\r\n                                } else {\r\n                                    setSnackbarMessage(\"Something went wrong!\");\r\n                                }\r\n                                setSnackbarOpen(true);\r\n                            })\r\n                        }}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"/password-reset\" variant=\"body2\"> Forgot password? </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"/sign-up\" variant=\"body2\"> {\"Don't have an account? Sign up.\"} </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright/>\r\n            </Box>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Copyright from \"../component/common/Copyright\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {delay} from \"../util/async\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\r\nimport DoneOutlineOutlinedIcon from '@material-ui/icons/DoneOutlineOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    infoText: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\nfunction TypeEmailPage() {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [isSend, setIsSend] = React.useState(false);\r\n\r\n    const [open, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline/>\r\n\r\n        {isSend ? \r\n        \r\n        <div className={classes.paper}>\r\n\r\n            <Avatar className={classes.avatar}> <DoneOutlineOutlinedIcon/> </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Email sent successfully! </Typography>\r\n\r\n            \r\n            <Typography className={classes.infoText} component= \"body2\" align=\"center\">\r\n                A password reset link was sent. Click the link in the email to create a new password. \r\n                If you do not receive an email within 5 minutes, please click the re-send email link below.\r\n            </Typography>\r\n\r\n\r\n            <Container>\r\n                <Grid container>\r\n                    <Grid key={1} item>\r\n                        <Container>\r\n                            <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                    onClick={() => {\r\n                                        setIsSend(false);\r\n                                        history.push(\"/password-reset\");\r\n                                    }}\r\n                                >Re-send</Button>\r\n                            </Container>\r\n                    </Grid>\r\n                    <Grid key={2} item>\r\n                        <Container>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                    onClick={(event) => {\r\n                                        history.push(\"/\");\r\n                                    }}\r\n                                >Back to Home</Button>\r\n                        </Container>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n        :       \r\n        <div className={classes.paper}>\r\n\r\n            <Avatar className={classes.avatar}> <VpnKeyOutlinedIcon/> </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Reset Password </Typography>\r\n\r\n            \r\n            <Typography className={classes.infoText} component= \"body2\" align=\"center\">\r\n                Enter your email address that you used to register. \r\n                We'll send you an email with your username and a link to reset your password.\r\n            </Typography>\r\n\r\n            <form className={classes.form} noValidate>\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    className={classes.margin}\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    label=\"E-mail\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <MailOutlineIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                        }}\r\n                    onChange={(event) => {\r\n                        setEmail(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={(event) => {\r\n                        event.preventDefault();\r\n                        AuthService.resetPassword(email).then(r => {\r\n                            console.log(r.data.message);\r\n                            setSnackbarSeverity(\"success\");\r\n                            setSnackbarMessage(r.data.message);\r\n                            setSnackbarOpen(true);\r\n\r\n                            delay(200).then(() => {\r\n                                setIsSend(true);\r\n                            })\r\n                        }).catch(e => {\r\n                            setSnackbarSeverity(\"error\");\r\n                            if (e.response !== undefined && e.response.status === 401) {\r\n                                setSnackbarMessage(\"Entered credentials are incorrect.\");\r\n                            } else {\r\n                                setSnackbarMessage(\"Something went wrong!\");\r\n                            }\r\n                            setSnackbarOpen(true);\r\n                        })\r\n                    }}\r\n                >\r\n                    Reset Password\r\n                </Button>\r\n            </form>\r\n        </div>\r\n\r\n        }\r\n        <Box mt={8}>\r\n            <Copyright/>\r\n        </Box>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n            <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                {snackbarMessage}\r\n            </Alert>\r\n        </Snackbar>\r\n    </Container>\r\n    )\r\n}\r\n\r\nfunction TypeNewPasswordPage(probs) {\r\n    const token = probs.passwordResetToken;\r\n\r\n    console.log(token);\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    const [newPassword, setNewPassword] = React.useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n    const [passwordsIsMatch, setPasswordsIsMatch] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (newPassword === confirmPassword) {\r\n            setPasswordsIsMatch(true);\r\n        }else{\r\n            setPasswordsIsMatch(false);\r\n        }\r\n\r\n\r\n    }, [newPassword, confirmPassword])\r\n\r\n    const [open, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline/>\r\n        <div className={classes.paper}>\r\n\r\n            <Avatar className={classes.avatar}> <VpnKeyOutlinedIcon/> </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Reset Password </Typography>\r\n\r\n\r\n            <form className={classes.form} noValidate>\r\n\r\n                <TextField\r\n                    error = {!passwordsIsMatch}\r\n                    helperText= {passwordsIsMatch ?  null :\"Passwords does not match!\"}\r\n\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Create new password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n\r\n                    onChange={(event) => {\r\n                        setNewPassword(event.target.value);\r\n\r\n                    }}\r\n                />\r\n\r\n                <TextField\r\n\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Confirm your password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n\r\n                    error = {!passwordsIsMatch}\r\n                    helperText= {passwordsIsMatch ?  null :\"Passwords does not match!\"}\r\n\r\n                    onChange={(event) => {\r\n                        setConfirmPassword(event.target.value);\r\n\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n                    disabled={!passwordsIsMatch}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={(event) => {\r\n                        event.preventDefault();\r\n\r\n                        AuthService.changePasswordWithToken(newPassword, token).then(r => {\r\n                            console.log(r.data.message);\r\n                            setSnackbarSeverity(\"success\");\r\n                            setSnackbarMessage(r.data.message);\r\n                            setSnackbarOpen(true);\r\n\r\n                            delay(1000).then(() => {\r\n                                history.push(\"/sign-in\");\r\n                            })\r\n                        }).catch(e => {\r\n                            setSnackbarSeverity(\"error\");\r\n                            if (e.response !== undefined && e.response.status === 401) {\r\n                                setSnackbarMessage(\"Entered credentials are incorrect.\");\r\n                            } else {\r\n                                setSnackbarMessage(\"Something went wrong!\");\r\n                            }\r\n                            setSnackbarOpen(true);}) \r\n                    }}\r\n                >\r\n                    Reset Password\r\n                </Button>\r\n            </form>\r\n        </div>\r\n\r\n        \r\n        <Box mt={8}>\r\n            <Copyright/>\r\n        </Box>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n            <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                {snackbarMessage}\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nfunction PasswordResetPage() {\r\n    const {token} = useParams();\r\n    return (\r\n        <div>\r\n            {token ? <TypeNewPasswordPage passwordResetToken = {token}/> : <TypeEmailPage/>} \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordResetPage;","import {Avatar, ListItem, ListItemIcon, ListItemText,} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  avatar: {\r\n    color: theme.palette.getContrastText('#00e3aa'),\r\n    backgroundColor: '#00e3aa',\r\n  },\r\n}));\r\n\r\nfunction PrivateMessageUserItem(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      className={classes.root}\r\n      selected={props.selected}\r\n      key={props.username}\r\n      onClick={() => props.callback(props.username)}\r\n    >\r\n      <ListItemIcon>\r\n        <Avatar className={classes.avatar} alt={props.username}>\r\n          {\" \"}\r\n          {props.username[0].toUpperCase()}{\" \"}\r\n        </Avatar>\r\n      </ListItemIcon>\r\n      <ListItemText primary={props.username}>{props.username}</ListItemText>\r\n    </ListItem>\r\n  );\r\n}\r\nexport default PrivateMessageUserItem;\r\n","import PrivateMessageUserItem from \"./PrivateMessageUserItem\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nfunction PrivateMessageUserItemList(props) {\r\n  console.log(\"Selected:\", props.selectedUser);\r\n  return (\r\n  <List>\r\n      {props.users.map((user) => {\r\n         return <PrivateMessageUserItem selected={props.selectedUser === user} callback={props.callback} key={user} username={user}/>\r\n    })}\r\n  </List>\r\n\r\n  );\r\n}\r\nexport default PrivateMessageUserItemList;\r\n","import ListItem from \"@material-ui/core/ListItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {AuthService} from \"../../service/AuthService\";\r\nimport {format} from \"date-fns\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    messageArea: {\r\n        height: \"70vh\",\r\n        overflowY: \"auto\",\r\n    },\r\n}));\r\n\r\n\r\nfunction PrivateMessageFeed({messages}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const scrollRef = useRef(null);\r\n\r\n    /* whenever the list changes we need to scroll our\r\n       last list item into view */\r\n    useEffect(() => {\r\n        if (scrollRef.current) {\r\n            scrollRef.current.scrollIntoView({ behaviour: \"smooth\" });\r\n        }\r\n    }, [messages]);\r\n\r\n    return (\r\n        <List className={classes.messageArea} >\r\n            {messages.map(message =>\r\n                <ListItem key={message.id}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <ListItemText\r\n                                align={message.senderUsername === AuthService.getUsername() ? \"right\" : \"left\"}\r\n                                primary={message.content}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <ListItemText align={message.senderUsername === AuthService.getUsername() ? \"right\" : \"left\"}\r\n                                          secondary={format(new Date(message.created), \"dd.MM.yyyy HH:mm\")}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </ListItem>)}\r\n            {/* this is the last item that scrolls into\r\n             view when the effect is run */}\r\n            <li ref={scrollRef} />\r\n        </List>\r\n    );\r\n}\r\n\r\n\r\nexport default PrivateMessageFeed;","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport PrivateMessageUserItemList from \"../component/pm/PrivateMessageUserItemList\";\r\nimport PrivateMessageFeed from \"../component/pm/PrivateMessageFeed\";\r\nimport {AuthService} from \"../service/AuthService\";\r\nimport {PrivateMessagingService} from \"../service/PrivateMessagingService\";\r\nimport {unstable_batchedUpdates} from \"react-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    chatSection: {\r\n        width: \"100%\",\r\n    },\r\n    headBG: {\r\n        backgroundColor: \"#e0e0e0\",\r\n    },\r\n    borderRight500: {\r\n        borderRight: \"1px solid #e0e0e0\",\r\n    },\r\n    messageArea: {\r\n        height: \"70vh\",\r\n        overflowY: \"auto\",\r\n    },\r\n    marginAll: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(2),\r\n        marginLeft: theme.spacing(12),\r\n        marginRight: theme.spacing(12),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n}));\r\n\r\nfunction PrivateMessagePage() {\r\n    const classes = useStyles();\r\n\r\n    const [userList, setUserList] = useState([]);\r\n    const [selectedUser, setUser] = useState(null);\r\n    const [filteredMessages, setFilteredMessages] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageContent, setMessageContent] = useState(null);\r\n\r\n    useEffect(() => {\r\n        PrivateMessagingService.getPrivateMessages().then(response => {\r\n            console.log(\"PM:\", response.data);\r\n            setMessages(response.data);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const self = AuthService.getUsername();\r\n\r\n        const usersSet = new Set();\r\n        messages.forEach((message) => {\r\n            if (message.senderUsername === self) {\r\n                usersSet.add(message.receiverUsername);\r\n            } else if (message.receiverUsername === self) {\r\n                usersSet.add(message.senderUsername);\r\n            }\r\n        });\r\n        let sortedUserList = [...usersSet];\r\n\r\n        sortedUserList.sort((user1, user2) => {\r\n            let common1 = messages.filter(\r\n                (message) => (message.senderUsername === user1 || message.receiverUsername === user1) \r\n            );\r\n            let common2 = messages.filter(\r\n                (message) => (message.senderUsername === user2 || message.receiverUsername === user2)\r\n            );\r\n\r\n            return Math.max.apply(Math, common2.map(message => new Date(message.created).getTime())) -\r\n                Math.max.apply(Math, common1.map(message => new Date(message.created).getTime()));\r\n        });\r\n\r\n        sortedUserList = sortedUserList.filter(user => {\r\n            let receivedMessages = messages.filter(message => message.senderUsername === user && message.receiverUsername === self);\r\n            if (receivedMessages.length === 1) {\r\n                return receivedMessages[0].content !== \"\";\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        setUserList(sortedUserList);\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"User List:\", userList);\r\n        if (selectedUser === null && userList.length > 0) setUser(userList[0]);\r\n    }, [userList])\r\n\r\n    useEffect(() => {\r\n        let sortedFilteredMessages = messages.filter(message => message.senderUsername === selectedUser || message.receiverUsername === selectedUser);\r\n        sortedFilteredMessages.sort((message1, message2) => message1.timestamp <= message2.timestamp);\r\n        sortedFilteredMessages = sortedFilteredMessages.filter(message => message.content !== \"\");\r\n        setFilteredMessages(sortedFilteredMessages);\r\n    }, [messages, selectedUser]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (messageContent === null || messageContent === \"\") return;\r\n        PrivateMessagingService.send(selectedUser, messageContent).then(response => {\r\n            const aux = messages.slice();\r\n            aux.push(response.data);\r\n            unstable_batchedUpdates(() => {\r\n                setMessages(aux);\r\n                setMessageContent(\"\");\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.marginAll}>\r\n            <Grid container className={classes.title}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" className=\"header-message\">\r\n                        Private Messages\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Paper variant={\"outlined\"}>\r\n                <Grid container className={classes.chatSection}>\r\n                    <Grid item xs={3} className={classes.borderRight500}>\r\n                        <PrivateMessageUserItemList\r\n                            users={userList}\r\n                            selectedUser={selectedUser}\r\n                            callback={(username) => {\r\n                                console.log(\"Clicked:\", username);\r\n                                setUser(username);\r\n                            }}\r\n                            username={AuthService.getUsername()}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <PrivateMessageFeed messages={filteredMessages}/>\r\n                        <Divider/>\r\n                        <Grid container style={{padding: \"20px\"}}>\r\n                            <Grid item xs={11}>\r\n                                <TextField\r\n                                    value={messageContent}\r\n                                    id=\"outlined-basic-email\"\r\n                                    label=\"Type something...\"\r\n                                    onChange={(event) => setMessageContent(event.target.value)}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={1} align=\"right\">\r\n                                <Fab disabled={selectedUser === null} onClick={() => handleSendMessage()} color=\"primary\" aria-label=\"add\">\r\n                                    <SendIcon/>\r\n                                </Fab>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrivateMessagePage;\r\n","import axios from 'axios';\r\nimport {BASE_URL, EVENT, MODERATOR, REPORTS, DELETE_REPORT, DELETE_POST, BAN} from \"../api_config\";\r\nimport {headersWithToken} from \"./headers\";\r\n\r\n\r\nconst createEvent = (title, details, date, isOnline, location, utilLink) => {\r\n    return axios.post(BASE_URL + MODERATOR + EVENT, {\r\n        title: title,\r\n        details: details,\r\n        date: date,\r\n        isOnline: isOnline,\r\n        location: location,\r\n        utilLink: utilLink,\r\n    }, headersWithToken());\r\n}\r\n\r\nconst getEvents = () => {\r\n    return axios.get(BASE_URL + MODERATOR + EVENT, headersWithToken());\r\n}\r\n\r\nconst updateEvent = (event) => {\r\n    return axios.put(BASE_URL + MODERATOR + EVENT, event, headersWithToken());\r\n}\r\n\r\nconst deleteEvent = (eventId) => {\r\n    return axios.delete(BASE_URL + MODERATOR + EVENT, {id: eventId}, headersWithToken());\r\n}\r\n\r\nconst getPostReports = () => {\r\n    return axios.get(BASE_URL + MODERATOR + REPORTS, headersWithToken());\r\n}\r\n\r\nconst deleteReport = (reportId) => {\r\n    return axios.post(BASE_URL + MODERATOR + DELETE_REPORT, null, headersWithToken({reportId: reportId}));\r\n}\r\n\r\nconst deletePost= (postId) => {\r\n    return axios.post(BASE_URL + MODERATOR + DELETE_POST, null, headersWithToken({postId: postId}));\r\n}\r\n\r\nconst ban = (username, subClubName, reason) => {\r\n    return axios.post(BASE_URL + MODERATOR + BAN, null,\r\n        headersWithToken( \r\n            {username: username, \r\n        subClubName: subClubName, \r\n        reason: reason}));\r\n}\r\n\r\nexport const ModeratorService = {createEvent, getEvents, updateEvent, deleteEvent, getPostReports, deleteReport, deletePost, ban};","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {FormControlLabel, FormGroup, Snackbar, Switch, TextField, Typography} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider,} from '@material-ui/pickers';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"date-fns\"; // DO NOT REMOVE, OR YOU WILL BE DOOMED!\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {ModeratorService} from \"../../service/ModeratorService\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {delay} from \"../../util/async\";\r\nimport {Event} from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    explanation: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    formInput: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    switchInput: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    dateInput: {\r\n        marginTop: 0,\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n    },\r\n    submitButton: {}\r\n}));\r\n\r\n\r\nconst inputFields = [\r\n    {\r\n        name: \"title\",\r\n        label: \"Event title\",\r\n        id: \"title\",\r\n        type: \"text\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"details\",\r\n        label: \"Event details\",\r\n        id: \"details-input\",\r\n        multiline: true,\r\n        type: \"text\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"date\",\r\n        label: \"Date and time\",\r\n        id: \"date\",\r\n        type: \"date\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"isOnline\",\r\n        label: \"Will it be online?\",\r\n        id: \"is-online\",\r\n        type: \"switch\",\r\n        required: true,\r\n    },\r\n    {\r\n        name: \"location\",\r\n        conditionalLabel: {\r\n            condition: \"isOnline\",\r\n            correct: \"URL of the event medium\",\r\n            wrong: \"Location of the event\"\r\n        },\r\n        id: \"location\",\r\n        type: \"text\",\r\n        required: true,\r\n    },\r\n];\r\n\r\n\r\nconst initialFormValues = {\r\n    title: null,\r\n    details: null,\r\n    date: new Date(),\r\n    isOnline: false,\r\n    location: null,\r\n    utilLink: null,\r\n}\r\n\r\n\r\nexport function CreateEvent() {\r\n    const classes = useStyles();\r\n\r\n    const [eventCreated, setEventCreated] = useState(false);\r\n\r\n    // We'll update \"values\" as the form updates\r\n    const [values, setValues] = useState(initialFormValues);\r\n    // \"errors\" is used to check the form for errors\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validate = (fieldValues = values) => {\r\n        // this function will check if the form values are valid\r\n        let errorsUpdate = {...errors}\r\n\r\n        const requiredFields = inputFields.filter(input => input.required).map(input => input.name);\r\n\r\n        requiredFields.forEach((name) => {\r\n            if (name in fieldValues)\r\n                errorsUpdate[name] = fieldValues[name] ? \"\" : \"This field is required.\"\r\n        });\r\n\r\n        setErrors({\r\n            ...errorsUpdate\r\n        });\r\n    }\r\n\r\n    const handleInputValue = (e = values) => {\r\n        // this function will be triggered by the text field's onBlur and onChange events\r\n        console.log(\"Input event:\", e);\r\n        const {name, value} = e.target;\r\n        console.log(\"Handle input value:\", name, value);\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n        validate({[name]: value});\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        // this function will be triggered by the submit event\r\n        console.log(\"Creating event:\", values);\r\n        ModeratorService.createEvent(\r\n            values.title,\r\n            values.details,\r\n            values.date.toISOString(),\r\n            values.isOnline === \"true\",\r\n            values.location,\r\n            values.utilLink,\r\n        ).then(response => {\r\n            console.log(\"Event created:\", response);\r\n            setSnackbarSeverity(\"success\");\r\n            setSnackbarMessage(\"Event successfully created!\");\r\n            setSnackbarOpen(true);\r\n            setEventCreated(true);\r\n            delay(2000).then(() => window.location.reload());\r\n        }).catch(error => {\r\n            console.error(\"Error while creating event:\", error);\r\n            setSnackbarSeverity(\"error\");\r\n            setSnackbarMessage(\"Something is wrong. \" + error);\r\n            setSnackbarOpen(true);\r\n        });\r\n    }\r\n\r\n    const formIsValid = (fieldValues = values) => {\r\n        // this function will check if the form values are valid and return a boolean value\r\n\r\n        const requiredFields = inputFields.filter(i => i.required).map(i => i.name);\r\n        console.log(\"Required fields:\", requiredFields);\r\n        console.log(\"Is valid fields:\", fieldValues);\r\n\r\n        let isValid = true;\r\n        requiredFields.forEach((name) => {\r\n            isValid = isValid && (fieldValues[name] !== undefined && fieldValues[name] !== null);\r\n        });\r\n\r\n        isValid = isValid && Object.values(errors).every((x) => x === \"\");\r\n\r\n        console.log(\"Is valid:\", isValid);\r\n\r\n        return isValid;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Values:\", values);\r\n    }, [values]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Errors:\", errors);\r\n    }, [errors]);\r\n\r\n    // Snackbar\r\n    const [openSnackbar, setSnackbarOpen] = React.useState(false);\r\n    const [severity, setSnackbarSeverity] = React.useState(\"success\");\r\n    const [snackbarMessage, setSnackbarMessage] = React.useState(\"Welcome back!\");\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography className={classes.explanation}>Create an event for your sub-club.</Typography>\r\n            <FormGroup className={classes.form}>\r\n                {inputFields.map((inputField) => {\r\n                    return (\r\n                        (() => {\r\n                            switch (inputField.type) {\r\n                                case \"text\":\r\n                                    return (\r\n                                        <TextField\r\n                                            className={classes.formInput}\r\n                                            key={inputField.id}\r\n                                            onBlur={handleInputValue}\r\n                                            variant={\"filled\"}\r\n                                            onChange={handleInputValue}\r\n                                            required={inputField.required}\r\n                                            disabled={eventCreated}\r\n                                            name={inputField.name}\r\n                                            value={values[inputField.name]}\r\n                                            label={inputField.conditionalLabel === undefined ? inputField.label :\r\n                                                ((values[inputField.conditionalLabel.condition] === \"true\")\r\n                                                    ? inputField.conditionalLabel.correct\r\n                                                    : inputField.conditionalLabel.wrong)\r\n                                            }\r\n                                            multiline={inputField.multiline ?? false}\r\n                                            rows={inputField.rows}\r\n                                            autoComplete=\"none\"\r\n                                            {...(errors[inputField.name] && {\r\n                                                error: true,\r\n                                                helperText: errors[inputField.name]\r\n                                            })}\r\n\r\n                                        />);\r\n                                case \"date\":\r\n                                    return (\r\n                                        <MuiPickersUtilsProvider\r\n                                            utils={DateFnsUtils}\r\n                                            name={inputField.name}\r\n                                            className={classes.formInput}\r\n                                            key={inputField.id}>\r\n                                            <KeyboardDateTimePicker\r\n                                                disableToolbar\r\n                                                format=\"MM.dd.yyyy HH:mm\"\r\n                                                margin=\"normal\"\r\n                                                className={classes.dateInput}\r\n                                                disabled={eventCreated}\r\n                                                id={inputField.id}\r\n                                                name={inputField.name}\r\n                                                label={inputField.label}\r\n                                                required={inputField.required}\r\n                                                value={values[inputField.name]}\r\n                                                inputVariant={\"filled\"}\r\n                                                onChange={(date) => {\r\n                                                    handleInputValue({target: {name: inputField.name, value: date}});\r\n                                                }}\r\n                                                KeyboardButtonProps={{\r\n                                                    'aria-label': 'change date',\r\n                                                }}\r\n                                                {...(errors[inputField.name] && {\r\n                                                    error: true,\r\n                                                    helperText: errors[inputField.name]\r\n                                                })}\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>);\r\n                                case \"switch\":\r\n                                    return (\r\n                                        <Box className={classes.switchInput}>\r\n                                            <FormControlLabel\r\n                                                control={<Switch\r\n                                                    key={inputField.id}\r\n                                                    id={inputField.id}\r\n                                                    name={inputField.name}\r\n                                                    disabled={eventCreated}\r\n                                                    label={inputField.label}\r\n                                                    value={values[inputField.name]}\r\n                                                    onChange={(e) => {\r\n                                                        console.log(\"Switch:\", e.target.checked, typeof e.target.checked);\r\n                                                        e.target.value = e.target.checked;\r\n                                                        handleInputValue(e);\r\n                                                    }}\r\n                                                    color={\"primary\"}\r\n                                                />} label={inputField.label}/>\r\n                                        </Box>\r\n                                    );\r\n                                default:\r\n                                    return null;\r\n                            }\r\n                        })()\r\n                    )\r\n                })}\r\n                <Button\r\n                    className={classes.submitButton}\r\n                    key={\"submit\"}\r\n                    type=\"submit\"\r\n                    variant={\"outlined\"}\r\n                    startIcon={<Event/>}\r\n                    onClick={handleFormSubmit}\r\n                    disabled={!formIsValid() || eventCreated}>\r\n                    CREATE EVENT\r\n                </Button>\r\n            </FormGroup>\r\n            <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity={severity}>\r\n                    {snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {FormControlLabel, FormGroup,  Switch, TextField, Typography} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider,} from '@material-ui/pickers';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"date-fns\"; // DO NOT REMOVE, OR YOU WILL BE DOOMED!\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {ModeratorService} from \"../../service/ModeratorService\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DeleteForever,  Update} from \"@material-ui/icons\";\r\nimport {delay} from \"../../util/async\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    explanation: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    formInput: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    switchInput: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    dateInput: {\r\n        marginTop: 0,\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n    },\r\n    submitButton: {\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst initialFormValues = {\r\n    id: -1,\r\n    title: null,\r\n    details: null,\r\n    date: new Date(),\r\n    isOnline: false,\r\n    location: null,\r\n    utilLink: null,\r\n}\r\n\r\n\r\nexport function ManageEvent() {\r\n    const classes = useStyles();\r\n\r\n    const [events, setEvents] = useState([initialFormValues]);\r\n    const [selectedEvent, setSelectedEvent] = useState(initialFormValues);\r\n    const [eventChanged, setEventChanged] = useState(false);\r\n\r\n\r\n    useEffect(()=> {\r\n        ModeratorService.getEvents().then(response => {\r\n            setEvents(response.data);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Box>\r\n            <Typography className={classes.explanation}>Edit this event for your sub-club.</Typography>\r\n\r\n            <FormControl className={classes.form} variant=\"filled\">\r\n                <InputLabel >Select an event to edit</InputLabel>\r\n                <Select className={classes.formInput}\r\n                    value={selectedEvent ?  selectedEvent.id : -1}\r\n                    onChange={(e) => {\r\n                        let id = e.target.value;\r\n                        if (id !== -1) {\r\n                            setSelectedEvent(events.find(e => e.id === id));\r\n                            console.log(selectedEvent);\r\n                        }else {\r\n                            setSelectedEvent(initialFormValues);\r\n                        }\r\n                    }}\r\n                >\r\n                    <MenuItem key ={-1} value={-1}>\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n\r\n                    {events.map((event) => (\r\n                        <MenuItem key={event ? event.id : -1} filled value={event ? event.id : -1}>{event.title}</MenuItem>\r\n                    ))}\r\n\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {selectedEvent.id === -1 ? null : \r\n                <FormGroup className={classes.form}>\r\n\r\n                    <TextField\r\n                        className={classes.formInput}\r\n                        key=\"event title\"\r\n                        required\r\n                        variant={\"filled\"}\r\n                        onChange={(e) => {\r\n                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                            eventCopy.title = e.target.value;\r\n                            setSelectedEvent(eventCopy);\r\n                        }}\r\n                        disabled={eventChanged}\r\n                        value ={selectedEvent.title}\r\n                        label = \"Event title\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className={classes.formInput}\r\n                        key=\"event details\"\r\n                        required\r\n                        variant={\"filled\"}\r\n                        disabled={eventChanged}\r\n                        onChange={(e) => {\r\n                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                            eventCopy.details = e.target.value;\r\n                            setSelectedEvent(eventCopy);\r\n                        }}\r\n                        value ={selectedEvent.details}\r\n                        label = \"Event details\"\r\n\r\n                    />\r\n\r\n                    <MuiPickersUtilsProvider\r\n                        utils={DateFnsUtils}\r\n                        \r\n                        className={classes.formInput}\r\n                        key=\"{inputField.id}\">\r\n                        <KeyboardDateTimePicker\r\n                            className={classes.dateInput}\r\n                            disableToolbar\r\n                            required\r\n                            inputVariant={\"filled\"}\r\n                            format=\"MM.dd.yyyy HH:mm\"\r\n                            margin=\"normal\"\r\n                            name=\"{inputField.name}\"\r\n                            label=\"Date and time\"\r\n                            value={selectedEvent.date}\r\n                            disabled={eventChanged}\r\n                            onChange={(date) => {\r\n                                let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                                eventCopy.date = date;\r\n                                setSelectedEvent(eventCopy);\r\n                            }}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n\r\n                    <Box className={classes.switchInput}>\r\n                        <FormControlLabel\r\n                            control={<Switch\r\n                                        key=\"{inputField.id}\"\r\n                                        name=\"{inputField.name}\"\r\n                                        label=\"Will it be online?\"\r\n                                        color={\"primary\"}\r\n                                        disabled={eventChanged}\r\n                                        onChange={(e) => {\r\n                                            e.target.value = e.target.checked;\r\n                                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                                            eventCopy.isOnline = e.target.value;\r\n                                            setSelectedEvent(eventCopy);\r\n                                        }}\r\n                            />} label=\"Will it be online?\"/>\r\n                    </Box>\r\n                    \r\n                    <TextField\r\n                        className={classes.formInput}\r\n                        key=\"event location\"\r\n                        required\r\n                        variant={\"filled\"}\r\n                        disabled={eventChanged}\r\n                        onChange={(e) => {\r\n                            let eventCopy = JSON.parse(JSON.stringify(selectedEvent)) \r\n                            eventCopy.location = e.target.value;\r\n                            setSelectedEvent(eventCopy);\r\n                        }}\r\n                        value ={selectedEvent.location}\r\n                        label = \"Location of event\"\r\n\r\n                    />\r\n\r\n                    <Button\r\n                        className={classes.submitButton}\r\n                        key={\"submit\"}\r\n                        type=\"submit\"\r\n                        variant={\"outlined\"}\r\n                        disabled={eventChanged}\r\n                        startIcon={<Update/>}\r\n                        onClick={() =>{\r\n                            console.log(\"event will be: \", selectedEvent);\r\n                            ModeratorService.updateEvent(selectedEvent).then(response => {\r\n                                console.log(\"Successfully updated:\", response.data);\r\n                                setEventChanged(true);\r\n                                delay(2000).then(() => window.location.reload());\r\n                            })\r\n                        }}\r\n                        >\r\n                        EDIT EVENT\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.submitButton}\r\n                        key={\"delete\"}\r\n                        type=\"submit\"\r\n                        variant={\"outlined\"}\r\n                        disabled={eventChanged}\r\n                        startIcon={<DeleteForever/>}\r\n                        onClick={() =>{\r\n                            ModeratorService.deleteEvent(selectedEvent.id).then(response => {\r\n                                console.log(\"Successfully deleted:\", response.data);\r\n                                setEventChanged(true);\r\n                                delay(2000).then(() => window.location.reload());\r\n                            })\r\n                        }}\r\n                        \r\n                        >\r\n                        DELETE EVENT\r\n                    </Button>\r\n\r\n                </FormGroup>\r\n\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {AdminService} from '../../service/AdminService';\r\nimport {ModeratorService} from '../../service/ModeratorService';\r\nimport {PostFeedItem} from \"../post/PostFeedItem\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {PostService} from \"../../service/PostService\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MemberInfo from \"../admin/MemberInfo\";\r\nimport NoResultsFound from \"../common/NoResultsFound\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    gridReportInfoContainer: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    gridHorizontalSection: {\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport function ReportedPosts() {\r\n    const classes = useStyles();\r\n\r\n    const [postReports, setPostReports] = useState(null);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [selectedReport, setSelectedReport] = useState(null);\r\n    const [selectedPostOwner, setSelectedPostOwner] = useState({});\r\n\r\n\r\n    // Get Reports\r\n    useEffect(() => {\r\n        ModeratorService.getPostReports().then(response => {\r\n            console.log(\"reports\", response.data)\r\n            setPostReports(response.data);\r\n        });\r\n    }, [selectedReport]);\r\n\r\n    const handleReportClick = (e, report) => {\r\n        setSelectedReport(report);\r\n        PostService.getPostById(report.postId).then(response => {\r\n            setSelectedPost(response.data);\r\n            console.log(\"post\", response.data);\r\n            AdminService.searchMembersByName(response.data.author, 0, 1).then(response => {\r\n                setSelectedPostOwner(response.data[0]);\r\n                console.log(\"post owner, \", response.data[0])\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid key={1} item xs={4}>\r\n                <Typography variant=\"h6\" className={classes.title}>List of Reports</Typography>\r\n                <Paper variant={\"outlined\"} className={classes.paper}>\r\n                    <List className={classes.root}>\r\n                        {postReports === null || postReports.length === 0 ?\r\n                            <NoResultsFound/> : postReports.map((report) =>\r\n                                <div>\r\n                                    <ListItem\r\n                                        button\r\n                                        key={report.postId}\r\n                                        selected={selectedPost && report.postId === selectedPost.id}\r\n                                        alignItems=\"flex-start\"\r\n                                        onClick={(e) => handleReportClick(e, report)}>\r\n                                        <ListItemIcon>\r\n                                            <ReportOutlinedIcon/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`Reported by: ${report.author}`}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {`Reason: `}\r\n                                                    </Typography>\r\n                                                    {report.content}\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                </div>\r\n                            )}\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n            <Grid className={classes.gridReportInfoContainer} key={2} container xs={8}>\r\n                {selectedPost ?\r\n                    <Box>\r\n\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" className={classes.title}>Reported Post</Typography>\r\n                            <Box>\r\n                                {selectedPost ? <PostFeedItem key={selectedPost.postId} props={selectedPost}/> : null}\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container>\r\n                            <Grid item key={1} xs={6} className={classes.gridHorizontalSection}>\r\n                                <Typography variant=\"h6\" className={classes.title}>Author Information</Typography>\r\n                                {selectedPostOwner ? <MemberInfo info={selectedPostOwner}/> : null}\r\n                            </Grid>\r\n\r\n                            <Grid item key={2} xs={6} className={classes.gridHorizontalSection}>\r\n                                <Typography variant=\"h6\" className={classes.title}>Actions</Typography>\r\n                                <Grid container>\r\n                                    <Grid item key={1} className={classes.button}>\r\n                                        <Button variant=\"outlined\" onClick={() => {\r\n                                            ModeratorService.ban(selectedPostOwner.username, \"voluptatem\", \"reason\").then(response => {\r\n                                                console.log(\"BAN: \", response.data);\r\n\r\n                                            })\r\n                                        }}>Ban Member</Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item key={2} className={classes.button}>\r\n                                        <Button variant=\"outlined\" onClick={() => {\r\n                                            ModeratorService.deleteReport(selectedReport.id).then(response => {\r\n                                                console.log(\"DELETE REPORT\", response.data);\r\n                                                setSelectedReport(null);\r\n                                                setSelectedPost(null);\r\n                                                setSelectedPostOwner(null);\r\n                                            })\r\n                                        }}>Delete Report</Button>\r\n                                    </Grid>\r\n                                    <Grid item key={3} className={classes.button}>\r\n                                        <Button variant=\"outlined\" onClick={() => {\r\n                                            ModeratorService.deletePost(selectedPost.id).then(response => {\r\n                                                console.log(\"DELETE POST\", response.data);\r\n                                                setSelectedReport(null);\r\n                                                setSelectedPost(null);\r\n                                            })\r\n                                        }}>Delete Post</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                    </Box>\r\n                    : <Typography className={classes.title}>Select a report to see the details.</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import {Route, Switch} from \"react-router-dom\";\r\nimport {CreateEvent} from \"../component/mod/CreateEvent\";\r\nimport {ManageEvent} from \"../component/mod/ManageEvent\";\r\nimport {ReportedPosts} from \"../component/mod/ReportedPosts\";\r\n\r\nexport default function ModeratorPanelSwitch() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/mod/create-event\">\r\n                <CreateEvent/>\r\n            </Route>\r\n            <Route path=\"/mod/manage-event\">\r\n                <ManageEvent/>\r\n            </Route>\r\n            <Route path=\"/mod/reported-posts\">\r\n                <ReportedPosts/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Divider, Typography} from \"@material-ui/core\";\r\nimport CoSpaceTreeViewMenu from \"../component/common/CoSpaceTreeViewMenu\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SupervisorAccount} from \"@material-ui/icons\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst modMenu = [\r\n    {\r\n        text: \"Events\",\r\n        children: [\r\n            {\r\n                text: \"Create event\",\r\n                path: \"/mod/create-event\"\r\n            },\r\n            {\r\n                text: \"Manage event\",\r\n                path: \"/mod/manage-event\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        text: \"Reports\",\r\n        children: [\r\n            {\r\n                text: \"Reported posts\",\r\n                path: \"/mod/reported-posts\"\r\n            },\r\n        ]\r\n    },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    gridLeftColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(0),\r\n    },\r\n    gridRightColumnBox: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\n\r\nfunction ModeratorPanelLayout({children}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n    const onItemClick = (item) => {\r\n        console.log(item);\r\n        console.log(item.path);\r\n        history.push(item.path);\r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container className={classes.root}>\r\n\r\n            <Grid item xs={3} className={classes.gridLeftColumnBox}>\r\n                <Box>\r\n                    {/*<Typography variant=\"h4\">Menu</Typography>*/}\r\n                    {/*<Divider className={classes.divider}/>*/}\r\n                    <CoSpaceTreeViewMenu title={\"Menu\"}\r\n                                         titleIcon={<SupervisorAccount/>}\r\n                                         menuItems={modMenu}\r\n                                         defaultExpanded={modMenu.map(menuItem => menuItem.text)}\r\n                                         callbackOnTreeItemClick={onItemClick}/>\r\n                </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={6} className={classes.gridRightColumnBox}>\r\n                <Typography variant=\"h4\">Moderator Panel</Typography>\r\n                <Divider className={classes.divider}/>\r\n                {children}\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default ModeratorPanelLayout;","import React from \"react\";\r\nimport ModeratorPanelSwitch from \"../router/ModeratorPanelSwitch\";\r\nimport ModeratorPanelLayout from \"../layout/ModeratorPanelLayout\";\r\n\r\nfunction ModeratorPage() {\r\n    return (\r\n        <ModeratorPanelLayout>\r\n            <ModeratorPanelSwitch/>\r\n        </ModeratorPanelLayout>\r\n    );\r\n}\r\n\r\nexport default ModeratorPage;","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, IconButton, Typography } from \"@material-ui/core\";\r\nimport { MoreVertOutlined } from \"@material-ui/icons\";\r\nimport {formatDistance} from \"date-fns\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: (review) => {\r\n            if (review.rating === 5) {\r\n                return \"#57bb8a\";\r\n            }\r\n            if (review.rating === 4) {\r\n                return \"#9ace6a\";\r\n            }\r\n            if (review.rating === 3) {\r\n                return \"#ffcf02\";\r\n            }\r\n            if (review.rating === 2) {\r\n                return \"#ff9f02\";\r\n            }\r\n            if (review.rating === 1) {\r\n                return \"#ff6f31\";\r\n            }\r\n            return \"#ffffff\";\r\n            \r\n        }\r\n    },\r\n})\r\n\r\nexport default function ReviewCard({review}) {\r\n\r\n    const classes = useStyles(review);\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar className={classes.avatar}>\r\n                            {review.rating}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton>\r\n                            <MoreVertOutlined/>\r\n                        </IconButton>\r\n                    }\r\n                    title={review.author}\r\n                    subheader ={formatDistance(new Date(review.created), new Date())}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant = \"body\" color=\"textSecondary\">\r\n                        {review.content}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport {headersWithToken} from \"./headers\";\r\nimport {BASE_URL,SUB_CLUB,\r\n        REVIEWS, REVIEW} from \"../api_config\";\r\n\r\n\r\n\r\n        \r\nconst getReviews = (subClubName) => {\r\n    return axios.get(BASE_URL + SUB_CLUB + REVIEWS, headersWithToken({subClubName: subClubName}));\r\n}\r\n\r\n\r\n\r\nconst makeReview = (subClubName, content, rating, authorName) => {\r\n    let body = {\r\n        content: content,\r\n        rating: rating,\r\n        author: authorName,\r\n        parentName: subClubName,\r\n    };\r\n    console.log(BASE_URL + SUB_CLUB + REVIEW, body, headersWithToken({subClubName: subClubName}));\r\n    return axios.post(BASE_URL + SUB_CLUB + REVIEW, body, headersWithToken({subClubName: subClubName}));\r\n}\r\n\r\n\r\nexport const ReviewService = {getReviews, makeReview}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Box, Button, Dialog, DialogTitle, TextField, Typography} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport AboutFeed from \"../AboutFeed\";\r\nimport RateReviewOutlinedIcon from '@material-ui/icons/RateReviewOutlined';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport {Stack} from '@devexpress/dx-react-chart';\r\nimport {ReviewService} from \"../../service/ReviewService\";\r\nimport {BarSeries, Chart, ValueAxis,} from '@devexpress/dx-react-chart-material-ui';\r\nimport {useHistory} from \"react-router\";\r\nimport {delay} from \"../../util/async\";\r\nimport {ClubService} from \"../../service/ClubService\";\r\nimport {AuthService} from \"../../service/AuthService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3)\r\n    },\r\n    ratingStars: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    dialogTextField: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    numReviewsText: {\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    }\r\n\r\n}))\r\n\r\n\r\nexport default function SummaryCard({subClubName, reviews}) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [hover, setHover] = useState(-1);\r\n    const [subClubInfo, setSubClubInfo] = useState(null);\r\n\r\n    useEffect(() => {\r\n        ClubService.getSubClubs().then(subClubs => {\r\n            const subClub = subClubs.data.filter(subClub => subClub.name === subClubName)[0];\r\n            ClubService.getSubClubStatistics(subClub.name).then(subClubStats => {\r\n                subClub.numberOfMembers = subClubStats.data.numberOfMembers;\r\n                subClub.numberOfPostsInLastWeek = subClubStats.data.numberOfPostsInTimeFrame;\r\n                setSubClubInfo(subClub);\r\n            });\r\n        });\r\n    }, [subClubName]);\r\n\r\n    const labels = {\r\n        1: 'Useless',\r\n        2: 'Lots of bad posts',\r\n        3: 'OK',\r\n        4: 'Good place to hang out',\r\n        5: 'Excellent people and quality',\r\n    };\r\n\r\n\r\n    const handleDialogClose = (event) => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n\r\n    const onClickSubmit = (event) => {\r\n\r\n        ReviewService.makeReview(\r\n            subClubName,\r\n            inputContent,\r\n            inputRating,\r\n            AuthService.getUsername()).then(response => {\r\n            console.log(\"RESPONSE\", response.data);\r\n            setOpenDialog(false);\r\n\r\n            delay(1000).then(() => window.location.reload());\r\n\r\n        });\r\n    }\r\n    const onContentChange = (event) => {\r\n        setInputContent(event.target.value);\r\n    }\r\n\r\n    const [inputRating, setInputRating] = React.useState(3);\r\n    const [inputContent, setInputContent] = useState(\"\");\r\n\r\n\r\n    let totalRating = 0;\r\n    let rateStructure = {\r\n        state: '+1',\r\n        one: 0,\r\n        two: 0,\r\n        three: 0,\r\n        four: 0,\r\n        five: 0\r\n    }\r\n    for (let i = 0; i < reviews.length; i++) {\r\n        totalRating += reviews[i].rating;\r\n        if (reviews[i].rating === 1) {\r\n            rateStructure.one += 1;\r\n        } else if (reviews[i].rating === 2) {\r\n            rateStructure.two += 1;\r\n        } else if (reviews[i].rating === 3) {\r\n            rateStructure.three += 1;\r\n        } else if (reviews[i].rating === 4) {\r\n            rateStructure.four += 1;\r\n        } else if (reviews[i].rating === 5) {\r\n            rateStructure.five += 1;\r\n        }\r\n    }\r\n\r\n    rateStructure.one = rateStructure.one / totalRating;\r\n    rateStructure.two = rateStructure.two / totalRating;\r\n    rateStructure.three = rateStructure.three / totalRating;\r\n    rateStructure.four = rateStructure.four / totalRating;\r\n    rateStructure.five = rateStructure.five / totalRating;\r\n\r\n    return (subClubInfo ?\r\n        <div>\r\n            <Paper>\r\n                <Container className={classes.root}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid key=\"1\" item xs={4}>\r\n                            <Typography color=\"textSecondary\" variant=\"h2\"\r\n                                        align=\"left\">{(totalRating / reviews.length).toPrecision(3)}</Typography>\r\n                            <Rating value={(totalRating / reviews.length).toPrecision(3)} readOnly/>\r\n\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <PermIdentityOutlinedIcon className={classes.numReviewsText}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography className={classes.numReviewsText} color=\"textSecondary\" variant=\"body1\">\r\n                                        {reviews.length} total\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                            <Box>\r\n                                <Button size=\"medium\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        startIcon={<RateReviewOutlinedIcon/>}\r\n                                        onClick={() => {\r\n                                            setOpenDialog(true);\r\n                                        }}\r\n                                        fullWidth\r\n                                        disableElevation>Write a Review\r\n                                </Button>\r\n                            </Box>\r\n\r\n\r\n                        </Grid>\r\n                        <Grid key=\"3\" item xs={4}>\r\n                            <Paper>\r\n                                <Chart data={[rateStructure]} rotated height=\"250\">\r\n\r\n                                    <ValueAxis/>\r\n                                    <BarSeries\r\n                                        valueField=\"five\"\r\n                                        argumentField=\"state\"\r\n\r\n                                        color=\"#57bb8a\"\r\n                                    />\r\n\r\n                                    <BarSeries\r\n                                        valueField=\"four\"\r\n                                        argumentField=\"state\"\r\n                                        color=\"#9ace6a\"\r\n\r\n                                    />\r\n                                    <BarSeries\r\n                                        valueField=\"three\"\r\n                                        argumentField=\"state\"\r\n                                        color=\"#ffcf02\"\r\n                                    />\r\n\r\n                                    <BarSeries\r\n                                        valueField=\"two\"\r\n                                        argumentField=\"state\"\r\n                                        color=\"#ff9f02\"\r\n                                    />\r\n\r\n                                    <BarSeries\r\n                                        valueField=\"one\"\r\n                                        argumentField=\"state\"\r\n                                        color=\"#ff6f31\"\r\n                                    />\r\n                                    <Stack/>\r\n                                </Chart>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid key=\"2\" item xs={4}>\r\n                            <AboutFeed feedInfo={subClubInfo}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Dialog open={openDialog} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\"\r\n                    fullWidth={true} maxWidth={\"md\"}>\r\n\r\n                <DialogTitle id=\"form-dialog-title\">Meta / {subClubInfo.name}</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className={classes.ratingStars}>\r\n\r\n                        <Rating\r\n                            required\r\n                            value={inputRating}\r\n                            onChange={(event, newValue) => {\r\n                                setInputRating(newValue);\r\n                            }}\r\n                            onChangeActive={(event, newHover) => {\r\n                                setHover(newHover);\r\n                            }}\r\n                        />\r\n                        {inputRating !== null && <Box ml={2}>{labels[hover !== -1 ? hover : inputRating]}</Box>}\r\n                    </div>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        required\r\n                        multiline\r\n                        className={classes.dialogTextField}\r\n                        label=\"Your opinions\"\r\n                        rows={5}\r\n                        variant=\"filled\"\r\n                        type=\"input\"\r\n                        onChange={onContentChange}\r\n                        fullWidth\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={handleDialogClose}\r\n                        color=\"primary\">\r\n                        Exit\r\n                    </Button>\r\n                    <Button\r\n                        onClick={onClickSubmit}\r\n\r\n                        color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div> : <div/>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ReviewCard from \"../component/meta/ReviewCard\";\r\nimport SummaryCard from \"../component/meta/SummaryCard\";\r\nimport Masonry from \"react-masonry-css\"\r\nimport { ReviewService } from \"../service/ReviewService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    summaryContainer: {\r\n        paddingTop: theme.spacing(3),\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function MetaPanelPage() {\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    const subClubName = params.subClubName;\r\n\r\n  \r\n\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        ReviewService.getReviews(subClubName).then(response => {\r\n            console.log(\"get reviews\", response.data);\r\n            setReviews(response.data);\r\n        });\r\n    }, [subClubName])\r\n\r\n    return (\r\n        \r\n        <Container>\r\n\r\n            <Container className={classes.summaryContainer}>\r\n                <SummaryCard subClubName = {subClubName} reviews={reviews}/>\r\n            </Container>\r\n        \r\n\r\n            <Container>\r\n                <Masonry\r\n                    breakpointCols={3}\r\n                    className=\"my-masonry-grid\"\r\n                    columnClassName=\"my-masonry-grid_column\"\r\n                >\r\n                    {reviews.map(review => (\r\n                        <div key={review.author}>\r\n                            <ReviewCard review={review}/>\r\n                        </div>       \r\n                    ))}    \r\n                </Masonry>\r\n            </Container>\r\n\r\n        </Container>\r\n    )\r\n}","import axios from 'axios';\r\nimport {BASE_URL, SEARCH} from \"../api_config.js\";\r\n\r\n\r\nconst search = (query, page = 0, size = 5) => {\r\n    return axios.get(BASE_URL + SEARCH, {\r\n        params: {\r\n            query: query,\r\n            page: page,\r\n            size: size\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const SearchService = {search};","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {Avatar, Box, ListItem, ListItemAvatar, ListItemText, Paper, Typography} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PostFeed from \"../component/post/PostFeed\";\r\nimport {SearchService} from \"../service/SearchService\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {InfoOutlined, Person} from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport NoResultsFound from \"../component/common/NoResultsFound\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: \"5%\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    gridContainer: {},\r\n    gridItem: {\r\n        maxHeight: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    gridLeftColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(2.5),\r\n        marginRight: theme.spacing(0),\r\n    },\r\n    gridMiddleColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    gridRightColumnBox: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(0),\r\n        marginRight: theme.spacing(2.5),\r\n    },\r\n    sectionBox: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    avatarContainer: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    usernameContainer: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText('#00e3aa'),\r\n        backgroundColor: '#00e3aa',\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SearchResultsPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    const [searchResults, setSearchResults] = useState({\r\n        posts: [],\r\n        clubs: [],\r\n        subClubs: [],\r\n        members: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        SearchService.search(params.query.trim()).then(r => {\r\n            setSearchResults(r.data);\r\n        });\r\n    }, [params]);\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} className={classes.gridContainer}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridLeftColumnBox}>\r\n                        {/* Left empty */}\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.gridItem}>\r\n                    <Box className={classes.gridMiddleColumnBox}>\r\n                        <Typography className={classes.title} variant={\"h4\"}>Clubs & Sub-clubs</Typography>\r\n                        <Divider className={classes.divider}/>\r\n                        <Paper variant={\"outlined\"}>\r\n                            <List>\r\n                                {searchResults.clubs.length === 0 || searchResults.subClubs.length === 0 ?\r\n                                    <NoResultsFound/>\r\n                                    : searchResults.clubs.slice(0, 2).map(club =>\r\n                                        <ListItem button\r\n                                                  key={club.name}\r\n                                                  onClick={() => history.push(`/feed/${club.name}`)}>\r\n                                            <ListItemAvatar className={classes.avatarContainer}>\r\n                                                <Avatar className={classes.avatar}>{club.name[0].toUpperCase()}</Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={club.name} secondary={\"Club\"}/>\r\n                                        </ListItem>)}\r\n                                {searchResults.subClubs.slice(0, 3).map(subClub => <ListItem\r\n                                    onClick={() => history.push(`/feed/${subClub.name}`)} key={subClub.name}>\r\n                                    <ListItemAvatar className={classes.avatarContainer}>\r\n                                        <Avatar className={classes.avatar}>{subClub.name[0].toUpperCase()}</Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={subClub.name}\r\n                                                  secondary={`Sub-club of ${subClub.parentName}`}/>\r\n                                </ListItem>)}\r\n                            </List>\r\n                        </Paper>\r\n\r\n                        <Typography className={classes.title} variant={\"h4\"}>Members</Typography>\r\n                        <Divider className={classes.divider}/>\r\n                        <Paper variant={\"outlined\"}>\r\n                            <List>\r\n                                {searchResults.members.length === 0 ? <NoResultsFound/>\r\n                                    : searchResults.members.map(member =>\r\n                                        <ListItem\r\n                                            button\r\n                                            key={member.username}\r\n                                            onClick={() => history.push(`/profile/${member.username}`)}>\r\n                                            <ListItemAvatar className={classes.avatarContainer}>\r\n                                                <Avatar className={classes.avatar}><Person/></Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText>\r\n                                                {member.username}\r\n                                            </ListItemText>\r\n                                        </ListItem>)}\r\n                            </List>\r\n                        </Paper>\r\n\r\n                        <Typography className={classes.title} variant={\"h4\"}>Posts</Typography>\r\n                        <Divider className={classes.divider}/>\r\n                        <Box>\r\n                            {searchResults.posts.length === 0 ? <NoResultsFound/> :\r\n                                <PostFeed preloadedPosts={searchResults.posts}/>}\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <Box className={classes.gridRightColumnBox}>\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport MainLayout from \"../layout/MainLayout\";\r\nimport HomePage from \"../page/HomePage\";\r\nimport AdminPage from \"../page/AdminPage\";\r\nimport ProfilePage from \"../page/ProfilePage\";\r\nimport NotFoundPage from \"../page/NotFoundPage\";\r\nimport SignUpPage from \"../page/SignUpPage\";\r\nimport SignInPage from \"../page/SignInPage\";\r\nimport PasswordResetPage from '../page/PasswordResetPage';\r\nimport PrivateMessagePage from \"../page/PrivateMessagePage\";\r\nimport ModeratorPage from \"../page/ModeratorPage\";\r\nimport MetaPanelPage from \"../page/MetaPanelPage\";\r\nimport SearchResultsPage from \"../page/SearchResultsPage\";\r\n\r\n\r\n\r\nexport default function MainRouter() {\r\n    return (\r\n        <Router>\r\n            <MainLayout>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <HomePage/>\r\n                    </Route>\r\n                    <Route path=\"/feed\">\r\n                        <HomePage/>\r\n                    </Route>\r\n                    <Route path=\"/admin\">\r\n                        <AdminPage/>\r\n                    </Route>\r\n                    <Route path=\"/profile/:username\">\r\n                        <ProfilePage/>\r\n                    </Route>\r\n                    <Route path=\"/sign-up\">\r\n                        <SignUpPage/>\r\n                    </Route>\r\n                    <Route path=\"/sign-in\">\r\n                        <SignInPage/>\r\n                    </Route>\r\n                    <Route path=\"/password-reset/:token?\">\r\n                        <PasswordResetPage/>\r\n                    </Route>    \r\n                    <Route path=\"/pm\">\r\n                        <PrivateMessagePage/>\r\n                    </Route>\r\n                    <Route path=\"/mod\">\r\n                        <ModeratorPage/>\r\n                    </Route>\r\n                    <Route path=\"/meta/:subClubName\">\r\n                        <MetaPanelPage/>\r\n                    </Route>\r\n                    <Route path=\"/search/:query\">\r\n                        <SearchResultsPage/>\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                        <NotFoundPage/>\r\n                    </Route>\r\n                </Switch>\r\n            </MainLayout>\r\n        </Router>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport MainRouter from \"./router/MainRouter\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nfunction App() {\r\n\r\n    const prefersDarkMode = true //useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n    const theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme(prefersDarkMode ?\r\n                // A useful theme editor can be found here: https://bareynol.github.io/mui-theme-creator/#\r\n                // For theming, change colors and parameters here.\r\n                {\r\n                    overrides: {\r\n                        MuiAppBar: {\r\n                            colorPrimary: {\r\n                                backgroundColor: \"#171c23\",\r\n                                color: \"#ffffff\"\r\n                            },\r\n                        }\r\n                    },\r\n                    palette: {\r\n                        type: 'dark',\r\n                        primary: {\r\n                            main: '#00e3aa',\r\n                        },\r\n                        secondary: {\r\n                            //main: '#ffffff',\r\n                            main: '#00e3aa',\r\n                        },\r\n                        background: {\r\n                            default: '#12161b',\r\n                            paper: '#1a1f26',\r\n                        },\r\n                        typography: {\r\n                            fontFamily: ['Inter', 'Roboto', 'Arial', 'sans-serif'],\r\n                        },\r\n                    },\r\n                } :\r\n                {\r\n                    overrides: {\r\n                        MuiAppBar: {\r\n                            colorPrimary: {\r\n                                backgroundColor: \"#ffffff\",\r\n                                color: \"#12151a\"\r\n                            },\r\n                        }\r\n                    },\r\n                    palette: {\r\n                        type: 'light',\r\n                        primary: {\r\n                            main: '#00e3aa',\r\n                        },\r\n                        secondary: {\r\n                            //main: '#ffffff',\r\n                            main: '#00e3aa',\r\n                        },\r\n                        background: {\r\n                            default: '#fafafa',\r\n                            paper: '#ffffff',\r\n                        },\r\n                        typography: {\r\n                            fontFamily: ['Inter', 'Roboto', 'Arial', 'sans-serif'],\r\n                        },\r\n                    },\r\n                }),\r\n        [prefersDarkMode],\r\n    );\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n            <MainRouter/>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n// ReactDOM.render(\r\n//     <React.StrictMode>\r\n//         <App/>\r\n//     </React.StrictMode>,\r\n//     document.getElementById('root')\r\n// );\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n    <App/>,\r\n    rootElement\r\n)"],"sourceRoot":""}